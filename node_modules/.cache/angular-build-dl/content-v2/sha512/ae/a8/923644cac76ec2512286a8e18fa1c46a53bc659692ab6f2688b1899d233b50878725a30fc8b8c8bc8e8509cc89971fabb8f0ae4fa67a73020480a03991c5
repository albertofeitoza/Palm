{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component.ts","./src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component.html","./src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component.ts","./src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component.html","./src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component.ts","./src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component.html","./src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-cadastro/unidade-sala-cadastro.component.ts","./src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-cadastro/unidade-sala-cadastro.component.html","./src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-delete/unidade-sala-delete.component.ts","./src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-delete/unidade-sala-delete.component.html","./src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-update/unidade-sala-update.component.ts","./src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-update/unidade-sala-update.component.html","./src/app/Aplicacoes/agenda/Unidade/agenda-alterar-unidade/agenda-alterar-unidade.component.ts","./src/app/Aplicacoes/agenda/Unidade/agenda-alterar-unidade/agenda-alterar-unidade.component.html","./src/app/Aplicacoes/agenda/Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component.ts","./src/app/Aplicacoes/agenda/Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component.html","./src/app/Aplicacoes/agenda/Unidade/agenda-excluir-unidade/agenda-excluir-unidade.component.ts","./src/app/Aplicacoes/agenda/Unidade/agenda-excluir-unidade/agenda-excluir-unidade.component.html","./src/app/Aplicacoes/agenda/agenda-create/agenda-create.component.ts","./src/app/Aplicacoes/agenda/agenda-create/agenda-create.component.html","./src/app/Aplicacoes/agenda/agenda-delete/agenda-delete.component.ts","./src/app/Aplicacoes/agenda/agenda-delete/agenda-delete.component.html","./src/app/Aplicacoes/agenda/agenda-read/agenda-read.component.ts","./src/app/Aplicacoes/agenda/agenda-read/agenda-read.component.html","./src/app/Aplicacoes/agenda/agenda-update/agenda-update.component.ts","./src/app/Aplicacoes/agenda/agenda-update/agenda-update.component.html","./src/app/Aplicacoes/agenda/home-agenda/home-agenda.component.ts","./src/app/Aplicacoes/agenda/home-agenda/home-agenda.component.html","./src/app/Negocio/Aplicacao.ts","./src/app/Negocio/Endpoint.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.conponent.html","./src/app/app.module.ts","./src/app/components/chamados/chamado-create/chamado-create.component.ts","./src/app/components/chamados/chamado-create/chamado-create.component.html","./src/app/components/chamados/chamado-delete/chamado-delete.component.ts","./src/app/components/chamados/chamado-delete/chamado-delete.component.html","./src/app/components/chamados/chamado-read/chamado-read.component.ts","./src/app/components/chamados/chamado-read/chamado-read.component.html","./src/app/components/chamados/chamado-update/chamado-update.component.ts","./src/app/components/chamados/chamado-update/chamado-update.component.html","./src/app/components/empresa/empresa-create/empresa-create.component.ts","./src/app/components/empresa/empresa-create/empresa-create.component.html","./src/app/components/empresa/empresa-delete/empresa-delete.component.ts","./src/app/components/empresa/empresa-delete/empresa-delete.component.html","./src/app/components/empresa/empresa-read/empresa-read.component.ts","./src/app/components/empresa/empresa-read/empresa-read.component.html","./src/app/components/empresa/empresa-update/empresa-update.component.ts","./src/app/components/empresa/empresa-update/empresa-update.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/product/product-create/product-create.component.ts","./src/app/components/product/product-create/product-create.component.html","./src/app/components/product/product-delete/product-delete.component.ts","./src/app/components/product/product-delete/product-delete.component.html","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","./src/app/components/product/product-read/product-read.component.ts","./src/app/components/product/product-read/product-read.component.html","./src/app/components/product/product-update/product-update.component.ts","./src/app/components/product/product-update/product-update.component.html","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/template/header/header.service.ts","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/components/usuario/usuario-create/usuario-create.component.ts","./src/app/components/usuario/usuario-create/usuario-create.component.html","./src/app/components/usuario/usuario-delete/usuario-delete.component.ts","./src/app/components/usuario/usuario-delete/usuario-delete.component.html","./src/app/components/usuario/usuario-read/usuario-read.component.ts","./src/app/components/usuario/usuario-read/usuario-read.component.html","./src/app/components/usuario/usuario-update/usuario-update.component.ts","./src/app/components/usuario/usuario-update/usuario-update.component.html","./src/app/components/usuario/usuario.component.ts","./src/app/components/usuario/usuario.component.html","./src/app/diretivas/red.directive.ts","./src/app/models/Agenda/modelAgenda.ts","./src/app/models/Agenda/modelGrupoAgenda.ts","./src/app/models/Agenda/modelHorarioAgenda.ts","./src/app/models/Sala/SalaModel.ts","./src/app/models/Unidade/unidadeModel.ts","./src/app/models/acessoModel.ts","./src/app/models/produtos/product.model.ts","./src/app/models/usuarios/GrupoUsuarios.ts","./src/app/models/usuarios/enumUsuarios.ts","./src/app/models/usuarios/modelLogin.ts","./src/app/services/login.service.ts","./src/app/services/product.service.ts","./src/app/services/service-all.service.ts","./src/app/services/util.service.ts","./src/app/views/chamado-crud/chamado-crud.component.ts","./src/app/views/chamado-crud/chamado-crud.component.html","./src/app/views/empresa/empresa.component.ts","./src/app/views/empresa/empresa.component.html","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/views/product-crud/product-crud.component.ts","./src/app/views/product-crud/product-crud.component.html","./src/app/views/usuario-crud/usuario-crud.component.ts","./src/app/views/usuario-crud/usuario-crud.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-grupo-cadastro',\n  templateUrl: './agenda-grupo-cadastro.component.html',\n  styleUrls: ['./agenda-grupo-cadastro.component.css']\n})\nexport class AgendaGrupoCadastroComponent implements OnInit {\n\ngrupo : GrupoAgenda = new GrupoAgenda();\n\n  constructor(\n              public dialog : MatDialogRef<AgendaGrupoCadastroComponent>,\n              private servico : UtilService,\n              private servicoGrupo : ServiceAllService<GrupoAgenda>\n              ) { }\n\n  ngOnInit(): void {\n  }\n\n  criarGrupo(){\n\n    this.grupo.empresaid = Number(this.servico.Sessao().IdEmpresa)\n    this.grupo.dtCriacao =  new Date;\n    this.grupo.criadoPor = Number(this.servico.Sessao().UsuarioId);\n    this.servicoGrupo.create(this.grupo, Endpoint.GrupoAgenda).subscribe(() => {\n      this.servico.showMessage(\"Grupo criado com sucesso ! \", false )\n    })\n  }\n\n  fecharPopup(){\n      this.dialog.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo Grupo</mat-card-title>\n        <form class=\"formCadastro\">\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Grupo\" \n                    [(ngModel)]=\"grupo.nomeGrupoAgenda\" name=\"nomeGrupoAgenda\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"bloqueado\">\n                    <input name=\"grupo.bloqueado\" [(ngModel)]=\"grupo.bloqueado\" [checked]=\"grupo.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n\n        </form>\n\n        <button mat-raised-button (click)=\"criarGrupo()\" color=\"primary\" > \n            Criar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Sair\n        </button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-grupo-excluir',\n  templateUrl: './agenda-grupo-excluir.component.html',\n  styleUrls: ['./agenda-grupo-excluir.component.css']\n})\nexport class AgendaGrupoExcluirComponent implements OnInit {\n\n\n  grupo : GrupoAgenda;\n\n  constructor(\n              public matdialogRef : MatDialogRef<AgendaGrupoExcluirComponent>,\n              private servico : UtilService,\n              private servicoGrupo : ServiceAllService<GrupoAgenda>\n              ) { }\n\n  ngOnInit(): void {\n    this.buscarGrupo();\n  }\n\n  buscarGrupo(){\n    this.servicoGrupo.readById(this.matdialogRef.id, Endpoint.GrupoAgenda).subscribe(x => {\n      this.grupo = x;\n    })\n  }\n\n  excluirGrupo(){\n        this.servicoGrupo.delete(Number(this.matdialogRef.id), Endpoint.GrupoAgenda).subscribe(x => {\n          this.servico.showMessage(\"Grupo Excluido com sucesso!\", false);\n        })\n  }\n\n  fecharPopup(){\n      this.matdialogRef.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Editar Grupo</mat-card-title>\n        <form class=\"formCadastro\">\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Grupo\" \n                    [(ngModel)]=\"grupo.nomeGrupoAgenda\" name=\"nomeGrupoAgenda\" disabled= \"true\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"excluirGrupo()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Sair\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-grupo-update',\n  templateUrl: './agenda-grupo-update.component.html',\n  styleUrls: ['./agenda-grupo-update.component.css']\n})\nexport class AgendaGrupoUpdateComponent implements OnInit {\n\ngrupo : GrupoAgenda\n\n  constructor(\n                public dialogRef : MatDialogRef<AgendaGrupoUpdateComponent>,\n                private servico : UtilService,\n                private servicoGrupo : ServiceAllService<GrupoAgenda>\n              ) { }\n\n  ngOnInit(): void {\n    this.buscarGrupo()\n  }\n\n  buscarGrupo(){\n        this.servicoGrupo.readById(this.dialogRef.id, Endpoint.GrupoAgenda).subscribe(x => {\n          this.grupo = x;\n        })\n  }\n\n  editarGrupo(){\n    this.servicoGrupo.update(this.grupo, Endpoint.GrupoAgenda).subscribe(()=> {\n        this.servico.showMessage(\"Grupo Excluído com sucesso\", false)\n    })\n\n  }\n\n  fecharPopup(){\n      this.dialogRef.close()\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Editar Grupo</mat-card-title>\n        <form class=\"formCadastro\">\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Grupo\" \n                    [(ngModel)]=\"grupo.nomeGrupoAgenda\" name=\"nomeGrupoAgenda\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"bloqueado\">\n                    <input name=\"grupo.bloqueado\" [(ngModel)]=\"grupo.bloqueado\" [checked]=\"grupo.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n\n        </form>\n\n        <button mat-raised-button (click)=\"editarGrupo()\" color=\"primary\" > \n            Criar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Sair\n        </button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-unidade-sala-cadastro',\n  templateUrl: './unidade-sala-cadastro.component.html',\n  styleUrls: ['./unidade-sala-cadastro.component.css']\n})\nexport class UnidadeSalaCadastroComponent implements OnInit {\n\n\nlistasala : Sala [];\n\nsala : Sala = new Sala();\n\n  constructor(\n              private servicoSala : ServiceAllService<Sala>,\n              private servico : UtilService,\n              public dialog : MatDialogRef<UnidadeSalaCadastroComponent>\n\n  ) { }\n\n  ngOnInit(): void {\n      this.buscaSala()\n    \n\n  }\n\n  addSala(){\n\n    this.sala.unidadeid = Number(this.dialog.id);\n    this.sala.empresaid = Number(this.servico.Sessao().IdEmpresa);\n    this.sala.dtCriacao = new Date;\n    this.sala.criadoPor = this.servico.Sessao().UsuarioId;\n\n    this.servicoSala.create(this.sala, Endpoint.Sala).subscribe(() => {\n      this.servico.showMessage(\"Sala Cadastrada com sucesso\", false);\n    })\n\n\n  }\n\n  fecharPopup(){\n      this.dialog.close()\n  }\n\n  buscaSala(){\n\n        this.servicoSala.read(Endpoint.Sala).subscribe(sl => {\n          this.listasala = sl\n        })\n\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Nova Sala</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Sala\" \n                [(ngModel)]=\"sala.nomeSala\" name=\"nomeSala\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"ativo\">\n                    <input name=\"ativo\" [(ngModel)]=\"sala.ativo\" [checked]=\"sala.ativo\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"addSala()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n        \n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-unidade-sala-delete',\n  templateUrl: './unidade-sala-delete.component.html',\n  styleUrls: ['./unidade-sala-delete.component.css']\n})\nexport class UnidadeSalaDeleteComponent implements OnInit {\n\n  sala : Sala\n\n  constructor(\n                public dialog : MatDialogRef <UnidadeSalaDeleteComponent>, \n                private servico : UtilService, \n                private servicoSala : ServiceAllService<Sala>\n              ) { }\n\n  ngOnInit(): void {\n      this.buscarSala()\n  }\n\n  buscarSala(){\n    this.servicoSala.readById(this.dialog.id, Endpoint.Sala).subscribe(x => {\n        this.sala = x;\n    })\n  }\n\n  excluirSala(){\n    this.servicoSala.delete(this.sala.id, Endpoint.Sala).subscribe(x => {\n      this.servico.showMessage(\"Sala excluída com sucesso\", false);\n      this.fecharPopup()\n    })\n  }\n\n  fecharPopup(){\n    this.dialog.close()\n  }\n  \n}\n","<mat-card>\n    <mat-card-title>Excluir Sala</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Sala\" \n                [(ngModel)]=\"sala.nomeSala\" name=\"nomeSala\" disabled = \"true\">\n            </mat-form-field>\n           \n        </form>\n\n        <button mat-raised-button (click)=\"excluirSala()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n        \n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-unidade-sala-update',\n  templateUrl: './unidade-sala-update.component.html',\n  styleUrls: ['./unidade-sala-update.component.css']\n})\nexport class UnidadeSalaUpdateComponent implements OnInit {\n\n  sala : Sala\n  \n  constructor(\n              public dialog : MatDialogRef<UnidadeSalaUpdateComponent>, \n              private servico : UtilService, \n              private servicoSala : ServiceAllService<Sala>\n              ) { }\n\n  ngOnInit(): void {\n      this.buscarSala()\n  \n  }\n\n  \n  buscarSala(){\n        this.servicoSala.readById(this.dialog.id, Endpoint.Sala).subscribe(x => {\n            this.sala = x;\n        })\n  }\n\n  alterarSala(){\n    \n      this.servicoSala.update(this.sala, Endpoint.Sala).subscribe(x => {\n        this.servico.showMessage(\"Sala alterada com sucesso!\", false);\n      })\n\n\n  }\n  \n  fecharPopup(){\n    this.dialog.close()\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Nova Sala</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Sala\" \n                [(ngModel)]=\"sala.nomeSala\" name=\"nomeSala\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"ativo\">\n                    <input name=\"ativo\" [(ngModel)]=\"sala.ativo\" [checked]=\"sala.ativo\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"alterarSala()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n        \n</mat-card>","import { Component, OnInit, Output,Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n\n@Component({\n  selector: 'app-agenda-alterar-unidade',\n  templateUrl: './agenda-alterar-unidade.component.html',\n  styleUrls: ['./agenda-alterar-unidade.component.css']\n})\nexport class AgendaAlterarUnidadeComponent implements OnInit {\n\n  unidade : Unidade\n\n  constructor(\n              public dialog : MatDialogRef<AgendaAlterarUnidadeComponent>,\n              private servicoUnidade : ServiceAllService<Unidade>,\n              private servico : UtilService,\n\n              ) { }\n\n\n\n\n  ngOnInit(): void {\n      this.buscarUnidade();\n  }\n\n  buscarUnidade(){\n    this.servicoUnidade.readById(this.dialog.id, Endpoint.Unidade).subscribe(un => {\n      this.unidade = un;\n    })\n  }\n\n\n  editarUnidade(){\n\n      this.servicoUnidade.update(this.unidade, Endpoint.Unidade).subscribe(() => {\n        this.servico.showMessage(\"Unidade alterada com sucesso!\", false)\n        this.fecharPopup();\n\n        \n      })\n  }\n\n  fecharPopup(){\n      this.dialog.close()\n      this.dialog.componentInstance\n  }\n\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Unidade</mat-card-title>\n        <form>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Id\" \n                [(ngModel)]=\"unidade.id\" name=\"id\" disabled = \"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Unidade\" \n                [(ngModel)]=\"unidade.nomeUnidade\" name=\"nomeUnidade\">\n            </mat-form-field>\n\n            \n            <mat-form-field>\n                <input matInput placeholder=\"bloqueado\">\n                    <input name=\"bloqueado\" [(ngModel)]=\"unidade.bloqueado\" [checked]=\"unidade.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"unidade.nomeUnidade\" mat-raised-button (click)=\"editarUnidade()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n       \n</mat-card>","import { getLocaleDateTimeFormat } from '@angular/common';\nimport { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { Unidade } from '../../../../models/Unidade/unidadeModel';\n\n\nimport { GrupoUsuario } from '../../../../models/usuarios/GrupoUsuarios';\nimport { AgendaCreateComponent } from '../../agenda-create/agenda-create.component';\nimport { AgendaAlterarUnidadeComponent } from '../agenda-alterar-unidade/agenda-alterar-unidade.component';\nimport { AgendaExcluirUnidadeComponent } from '../agenda-excluir-unidade/agenda-excluir-unidade.component';\nimport { UnidadeSalaCadastroComponent } from '../Sala/unidade-sala-cadastro/unidade-sala-cadastro.component';\nimport { UnidadeSalaDeleteComponent } from '../Sala/unidade-sala-delete/unidade-sala-delete.component';\nimport { UnidadeSalaUpdateComponent } from '../Sala/unidade-sala-update/unidade-sala-update.component';\n\n@Component({\n  selector: 'app-agenda-cadastro-unidade',\n  templateUrl: './agenda-cadastro-unidade.component.html',\n  styleUrls: ['./agenda-cadastro-unidade.component.css']\n})\nexport class AgendaCadastroUnidadeComponent implements OnInit {\n\nColunas = ['id','dtCriacao', 'nomeUnidade','bloqueado','action']\nColunasSala = ['id','dtCriacao', 'nomeSala', 'ativo','action']\n\nunidade : Unidade = new Unidade\n\nnovaUnidade : boolean = false;\n\nunidades : Unidade[];\natualizarChamada: boolean = false; \n\nvlrsala : string = null;\n\nsalas : Sala[];\nunidadeSelecionada : number = 0;\n  constructor(\n             public dialog : MatDialogRef<AgendaCadastroUnidadeComponent>,\n             private servico : UtilService,\n             private ServicoUnidade : ServiceAllService<Unidade>,\n             private servicoSala : ServiceAllService<Sala>\n\n              ) { }\n\n  ngOnInit(): void {\n      this.buscarUnidade(\"\");\n      \n  }\n\n\n  cadUnidade(){\n    this.novaUnidade = true;\n  }\n\n  addUnidade(){\n    this.unidadeSelecionada = 0;\n\n    this.unidade.criadoPor = this.servico.Sessao().UsuarioId;\n    this.unidade.dtCriacao = new Date;\n    this.unidade.empresaid =  Number(this.servico.Sessao().IdEmpresa);\n    \n    this.ServicoUnidade.create(this.unidade, Endpoint.Unidade).subscribe(() => {\n     this.servico.showMessage(\"Unidade cadastrada com sucesso\", false);\n     this.servico.atualizaRota(\"agenda\", true);\n     this.novaUnidade = false;\n   })\n\n  }\n\n  buscarUnidade(vlrTxt : string){\n    \n    this.ServicoUnidade.read(Endpoint.Unidade).subscribe(un => {\n      this.unidades = vlrTxt == null ? un.filter(x => x.empresaid.toString() == this.servico.Sessao().IdEmpresa) :\n                                         un.filter(x => x.empresaid.toString() == this.servico.Sessao().IdEmpresa && x.nomeUnidade.toLowerCase().includes(vlrTxt.toLowerCase()));\n    })\n    \n  }\n\n  AtualizarUnidade(id :string){\n\n    this.servico.Popup(id, AgendaAlterarUnidadeComponent, '500px', '400px');\n\n\n  }\n\n  ExcluirUnidade(id : string){\n    this.servico.Popup(id, AgendaExcluirUnidadeComponent, '500px', '400px');\n\n  }\n\n\n  fecharPopup(){\n      this.dialog.close();\n  }\n  voltar(){\n    this.novaUnidade = false;\n  }\n\n  selecionarUnidade(keyEvent : any){\n\n    if (keyEvent.which === 13 || keyEvent.which == 1){\n      let vlrTxt =  (<HTMLInputElement>document.getElementById('txtbusca')).value;\n      this.buscarUnidade(vlrTxt);\n    }\n    \n    \n  }\n\n\n  testePopup(){\n    this.servico.Popup(\"\",UnidadeSalaCadastroComponent, \"500px\", \"500px\");\n  }\n\n  UnidadeSelecionada(id){\n      this.unidadeSelecionada = id;\n  }\n\n  selecionaAba(tab){\n      \n      if (tab.index == 1)\n      {\n        this.buscarSala()\n        \n\n      }else{\n        this.unidadeSelecionada = 0\n      }\n}\n\n\n  buscarSala(){\n    \n    this.servicoSala.read(Endpoint.Sala).subscribe(sl => {\n      this.salas = this.vlrsala == null ?   sl.filter(x => x.unidadeid == this.unidadeSelecionada) :\n                                            sl.filter(x => x.unidadeid == this.unidadeSelecionada && x.nomeSala.toLowerCase().includes(this.vlrsala.toLowerCase())) \n    })\n   \n\n  }\n  \n  selecionarSala(keyEvent : any){\n    \n    if (keyEvent.which == 13 || keyEvent.which == 1){\n      this.vlrsala =  (<HTMLInputElement>document.getElementById('txtbusca')).value;\n    }\n\n    this.buscarSala();\n\n  }\n  AtualizarSala(id : any){\n      this.servico.Popup(id, UnidadeSalaUpdateComponent, \"500px\", \"400px\");\n  }\n\n  Excluirsala(id : any){\n      this.servico.Popup(id,UnidadeSalaDeleteComponent, \"500px\", \"400px\")\n  }\n\n  cadsala(){\n    this.servico.Popup(this.unidadeSelecionada.toString(), UnidadeSalaCadastroComponent, \"500px\", \"400px\"); \n  }\n\n}\n","<mat-tab-group (selectedTabChange)=\"selecionaAba($event)\" >\n        \n    <mat-tab label=\"Cadastro de Unidade\" id=\"labelUnidade\">\n\n        <div class=\"container\">\n                    <mat-card *ngIf=\"novaUnidade\">\n                        <mat-card-title>Nova Unidade</mat-card-title>\n                            <form>\n                                <mat-form-field>\n                                    <input matInput placeholder=\"Nome Unidade\" \n                                    [(ngModel)]=\"unidade.nomeUnidade\" name=\"nomeUnidade\">\n                                </mat-form-field>\n                                \n                                <mat-form-field>\n                                    <input matInput placeholder=\"bloqueado\">\n                                        <input name=\"bloqueado\" [(ngModel)]=\"unidade.bloqueado\" [checked]=\"unidade.bloqueado\" type=\"checkbox\">\n                                </mat-form-field>\n                            </form>\n                    \n                            <button *ngIf=\"unidade.nomeUnidade\" mat-raised-button (click)=\"addUnidade()\" color=\"primary\" > \n                                Salvar\n                            </button>\n                            \n                            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                              Sair\n                            </button>\n                            <button mat-raised-button (click)=\"voltar()\" color=\"primary\" > \n                              Voltar\n                            </button>\n                    </mat-card>\n\n\n            <mat-card *ngIf=\"!novaUnidade\" >\n                \n              <mat-card-title class=\"titleCard\" >Unidades</mat-card-title>\n\n                <div class=\"mat-elevation-z3\">\n        \n                  <span class=\"botaoBusca\" (click)=\"selecionarUnidade($event)\">\n                    <i class=\"material-icons\">search</i>\n                  </span>\n            \n                  <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarUnidade($event)\"  value=\"\">\n\n                  <a (click)=\"cadUnidade()\" class=\"cadUnidade\" >\n                    <i class=\"material-icons\">add</i>\n                  </a>\n                  <a (click)=\"testePopup()\" class=\"cadUnidade\" >\n                    <i class=\"material-icons\">person</i>\n                  </a>\n\n                  <table class=\"tabelaUnidade\" mat-table [dataSource]=\"unidades\">\n                        <!-- Id Column -->\n                        <ng-container matColumnDef=\"id\">\n                          <th mat-header-cell *matHeaderCellDef>Id</th>\n                          <td mat-cell id=\"idunidade\" *matCellDef=\"let row\">{{row.id}}</td>\n                        </ng-container>\n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"dtCriacao\">\n                          <th mat-header-cell *matHeaderCellDef>Criado Em</th>\n                          <td mat-cell *matCellDef=\"let row\" >{{row.dtCriacao | date: 'dd/MM/yyyy'}}</td>\n                        </ng-container>\n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"nomeUnidade\">\n                          <th mat-header-cell *matHeaderCellDef>Nome Unidade</th>\n                          <td mat-cell *matCellDef=\"let row\">{{row.nomeUnidade}}</td>\n                        </ng-container>\n                        <!-- status -->\n                        <ng-container matColumnDef=\"bloqueado\">\n                          <th mat-header-cell *matHeaderCellDef>Status</th>\n                            <td mat-cell *matCellDef=\"let row\">\n                              <div *ngIf=\"row.bloqueado\" >\n                                <i class=\"material-icons\">\n                                  lock\n                                </i>\n                              </div>\n                              <div *ngIf=\"!row.bloqueado\" >\n                                <i class=\"material-icons\">  \n                                  lock_open\n                                </i>\n                              </div>\n                            </td>\n                          </ng-container>\n                        \n                        <!-- Coluna de Ações -->\n                        <ng-container matColumnDef=\"action\">\n                          <th mat-header-cell *matHeaderCellDef>Ações</th>\n                          <td mat-cell *matCellDef=\"let row\">\n                           \n                            <a  (click)=\"AtualizarUnidade(row.id)\" class=\"edit\">\n                              <i class=\"material-icons\">\n                                 edit\n                              </i>\n                              </a>\n                            <a (click)=\"ExcluirUnidade(row.id)\" class=\"delete\">\n                              <i class=\"material-icons\">\n                                delete\n                              </i>\n                            </a>\n                              \n                          </td>\n                        </ng-container>\n                    \n                        <tr mat-header-row *matHeaderRowDef=\"Colunas\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: Colunas;\" (click)=\"UnidadeSelecionada(row.id)\"></tr>\n                  </table>\n                </div>\n            </mat-card>\n        </div>\n    </mat-tab>  \n    \n    \n    <mat-tab *ngIf=\"unidadeSelecionada > 0\" label=\"Cadastro de Sala\">\n     \n      <mat-card>\n                \n        <mat-card-title class=\"titleCard\" >Salas</mat-card-title>\n    \n          <div class=\"mat-elevation-z3\">\n    \n            <span class=\"botaoBusca\" (click)=\"selecionarSala($event)\">\n              <i class=\"material-icons\">search</i>\n            </span>\n      \n            <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarSala($event)\"  value=\"\">\n    \n            <a (click)=\"cadsala()\" class=\"cadsala\" >\n              <i class=\"material-icons\">add</i>\n            </a>\n    \n            <table class=\"tabela\" mat-table [dataSource]=\"salas\">\n                  <!-- Id Column -->\n                  <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef>Id</th>\n                    <td mat-cell id=\"idsala\" *matCellDef=\"let row\">{{row.id}}</td>\n                  </ng-container>\n                  <!-- Name Column -->\n                  <ng-container matColumnDef=\"dtCriacao\">\n                    <th mat-header-cell *matHeaderCellDef>Criado Em</th>\n                    <td mat-cell *matCellDef=\"let row\" >{{row.dtCriacao | date: 'dd/MM/yyyy'}}</td>\n                  </ng-container>\n                  <!-- Name Column -->\n                  <ng-container matColumnDef=\"nomeSala\">\n                    <th mat-header-cell *matHeaderCellDef>Nome Sala</th>\n                    <td mat-cell *matCellDef=\"let row\">{{row.nomeSala}}</td>\n                  </ng-container>\n    \n    \n                  <!-- status -->\n                  <ng-container matColumnDef=\"ativo\">\n                    <th mat-header-cell *matHeaderCellDef>Status</th>\n                      <td mat-cell *matCellDef=\"let row\">\n                        <div *ngIf=\"row.ativo\" >\n                          <i class=\"material-icons\">\n                            lock\n                          </i>\n                        </div>\n                        <div *ngIf=\"!row.ativo\" >\n                          <i class=\"material-icons\">  \n                            lock_open\n                          </i>\n                        </div>\n                      </td>\n                    </ng-container>\n                  \n                  <!-- Coluna de Ações -->\n                  <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef>Ações</th>\n                    <td mat-cell *matCellDef=\"let row\">\n                     \n                      <a  (click)=\"AtualizarSala(row.id)\" class=\"edit\">\n                        <i class=\"material-icons\">\n                           edit\n                        </i>\n                        </a>\n                      <a (click)=\"Excluirsala(row.id)\" class=\"delete\">\n                        <i class=\"material-icons\">\n                          delete\n                        </i>\n                      </a>\n                        \n                    </td>\n                  </ng-container>\n              \n                  <tr mat-header-row *matHeaderRowDef=\"ColunasSala\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: ColunasSala;\"></tr>\n            </table>\n          </div>\n      </mat-card>\n\n\n\n\n    </mat-tab>\n    \n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { endWith } from 'rxjs/operators';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-excluir-unidade',\n  templateUrl: './agenda-excluir-unidade.component.html',\n  styleUrls: ['./agenda-excluir-unidade.component.css']\n})\nexport class AgendaExcluirUnidadeComponent implements OnInit {\n\n\n  unidade : Unidade\n\n  constructor(\n              public dialog : MatDialogRef<AgendaExcluirUnidadeComponent>,\n              private servicoUnidade : ServiceAllService<Unidade>, \n              private servico : UtilService\n              ) { }\n\n  ngOnInit(): void {\n    this.buscarUnidade();\n  }\n\n  buscarUnidade(){\n      this.servicoUnidade.readById(this.dialog.id, Endpoint.Unidade).subscribe(un => {\n        this.unidade = un;\n      })\n  }\n\n  ExcluirUnidade(){\n      this.servicoUnidade.delete(Number(this.dialog.id), Endpoint.Unidade).subscribe(() => {\n        this.servico.showMessage(\"Unidade Excluída com sucesso!\", false);\n        this.servico.atualizaRota(\"agenda\", true)\n        this.fecharPopup();\n      })\n  }\n\n\n  fecharPopup(){\n    this.dialog.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Unidade</mat-card-title>\n        <form>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Id\" \n                [(ngModel)]=\"unidade.id\" name=\"id\" disabled = \"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Unidade\" \n                [(ngModel)]=\"unidade.nomeUnidade\" name=\"nomeUnidade\" disabled = \"true\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"unidade.nomeUnidade\" mat-raised-button (click)=\"ExcluirUnidade()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n       \n</mat-card>","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Aplicacao } from './../../../Negocio/Aplicacao';\nimport { Router } from '@angular/router';\n\nimport { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\nimport { UtilService } from 'src/app/services/util.service';\nimport { TipoUsuario, TipoUsuarioSistema } from 'src/app/models/usuarios/enumUsuarios';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { UsuarioCreateComponent } from 'src/app/components/usuario/usuario-create/usuario-create.component';\nimport { AgendaGrupoCadastroComponent } from '../GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component';\nimport { AgendaGrupoUpdateComponent } from '../GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component';\nimport { AgendaGrupoExcluirComponent } from '../GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component';\nimport { AgendaCadastroUnidadeComponent } from '../Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component';\nimport { Horarios } from 'src/app/models/Agenda/modeloHorarios';\nimport { HorarioAgenda } from 'src/app/models/Agenda/modelHorarioAgenda';\nimport { query } from '@angular/animations';\n\n@Component({\n  selector: 'app-agenda-create',\n  templateUrl: './agenda-create.component.html',\n  styleUrls: ['./agenda-create.component.css']\n})\nexport class AgendaCreateComponent implements OnInit {\n  \n  agenda : Agenda = new Agenda()\n  \n\n\n  comboProfissional  : Usuario[];\n  comboUnidade : Unidade[];\n  comboSala : Sala[];\n  comboTipoGrupoAgenda : GrupoAgenda[];\n  empresa : Empresa[];\n\n  //Grupo\n  grupo : GrupoAgenda[]\n  ColunasGrupo = ['id','dtCriacao','nomeGrupoAgenda','bloqueado','action']\n  GrupoSelecionado : number = 0;\n\n  //Horários\n  horariosCadstrados : HorarioAgenda[]\n  ColunasHorarios = ['Hora','Tempo']\n  dadosHorarios : HorarioAgenda = new HorarioAgenda();\n\n\n  constructor(private route : Router,\n              public dialogRef: MatDialogRef <AgendaCreateComponent>, \n              public overlay : Overlay,\n              public dialog: MatDialog,         \n              private _serviceAgenda : ServiceAllService<Agenda>,\n              private _serviceUnidade : ServiceAllService<Unidade>,\n              private _serviceSala : ServiceAllService<Sala>,\n              private _serviceGrupoAgenda : ServiceAllService<GrupoAgenda>,\n              private _serviceUsuario : ServiceAllService<Usuario>,\n              private _utilService : UtilService,\n              private servicoGrupo : ServiceAllService<GrupoAgenda>,\n              private servicoHorario : ServiceAllService<HorarioAgenda>\n    ) { }\n\n\n  ngOnInit(): void {\n     this.carregaCombos()\n     this.buscarHorarios();\n  }\n  \n  createAgenda(){\n     this.agenda.Empresaid = Number(this._utilService.Sessao().IdEmpresa)\n \n      this._serviceAgenda.create(this.agenda, Endpoint.Agenda).subscribe(ag => {\n      this.agenda = ag;\n      this._utilService.showMessage(\"Agenda cadastrada com sucesso!\",false);\n      this.route.navigate(['home-component'])\n      });\n        this.route.navigate(['home-component'])\n  }\n\n  cancel(){\n    this.route.navigate(['home-component'])  \n  }\n\n  BuscarSala(){\n      this.carregaComboSala(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa)\n  }\n\n  AtualizarComboProfissional(){\n    this.carregaComboProfissional(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa)\n  }\n\n  carregaCombos(){\n\n    this.carregaComboProfissional(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa)\n      this.carregaComboUnidade(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n      \n      \n      this.carregaComboSala(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n      \n      this.carregaComboGrupoAgenda(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n  }\n\n  carregaComboProfissional(grpId: number , empId: string){\n    this.comboProfissional =  new Array();\n    this._serviceUsuario.read(Endpoint.Usuario).subscribe(pro => {\n      pro = this.comboProfissional = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador ? this.comboProfissional = pro.filter(x => x.empresaid.toString() == empId) : null;\n    });\n  }\n  \n  carregaComboUnidade(grpId: number , empId: string){\n    this.comboUnidade =  new Array()\n    this._serviceUnidade.read(Endpoint.Unidade).subscribe(un => {\n      un = this.comboUnidade = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador ? this.comboUnidade = un.filter(x => x.empresaid.toString() == empId) : null;\n    });\n  }\n\n  carregaComboSala(grpId: number , empId: string){\n    this.comboSala = new Array();\n\n    this._serviceSala.read(Endpoint.Sala).subscribe(sl => {\n      sl = this.comboSala = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador? this.comboSala = sl.filter(x => x.empresaid .toString() == empId && x.unidadeid == Number(this.agenda.unidadeid)) : null;                      \n    });\n    \n  }\n\n  carregaComboGrupoAgenda(grpId: number , empId: string){\n    this.comboTipoGrupoAgenda = new Array();\n    this._serviceGrupoAgenda.read(Endpoint.GrupoAgenda).subscribe(ga => {\n      ga = this.comboTipoGrupoAgenda = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador ? this.comboTipoGrupoAgenda = ga.filter(x => x.empresaid .toString() == empId) : null;\n    });\n  }\n\n  AtualizarComboGrupoAgenda(){\n    this.carregaComboGrupoAgenda(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n  }\n\n  AtualizarComboUnidade(){\n    this.carregaComboUnidade(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n  }\n\n  fecharPopup(): void {\n    this.dialogRef.close();\n  }\n\n  novoUsuario(){\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        this._utilService.Popup(\"\", UsuarioCreateComponent ,\"700px\",\"820px\");\n    }else{\n      this._utilService.showMessage(\"Solicitar ao um Usuário Master para criar Nova Agenda!\",true);\n    }\n  }\n\n  selecionaAbaAgenda(tab : any){\n    \n    switch (tab.index) {\n      case 1 :\n          this.buscarGrupos(\"\")\n        break;\n      default:\n        break;\n    }\n    \n  }\n\n  ////GRUPOPS//////\n  selecionarGrupo(event : any){\n\n      if(event.which == 1 || event.which ==13){\n        \n        let txtBusca = (<HTMLInputElement>document.getElementById('txtbusca')).value\n        if (txtBusca != null)\n          this.buscarGrupos(txtBusca);\n      \n      }\n\n  }\n\n  buscarGrupos(txtbusca : any){\n      \n    this.servicoGrupo.read(Endpoint.GrupoAgenda).subscribe(x => {\n        this.grupo = txtbusca == null ? x : x.filter(x => x.nomeGrupoAgenda.toLocaleLowerCase().includes(txtbusca.toLocaleLowerCase()))\n    })\n  }\n\n  cadGrupo(){\n    this._utilService.Popup(\"\", AgendaGrupoCadastroComponent, \"500px\", \"500px\");\n  }\n\n  AtualizarGrupo(id : string){\n    this._utilService.Popup(id, AgendaGrupoUpdateComponent, \"500px\", \"500px\");\n  }\n\n  ExcluirGrupo(id : string){\n    this._utilService.Popup(id, AgendaGrupoExcluirComponent, \"500px\", \"500px\");\n  }\n\n  novaUnidade(){\n    this._utilService.Popup(\"\", AgendaCadastroUnidadeComponent, \"700px\", \"500px\")\n  }\n\n\n  ///HORÁRIOS///////\n  CriarHorarios(){\n    \n    this.dadosHorarios.dtCriacao = new Date;\n    this.dadosHorarios.criadoPor = this._utilService.Sessao().UsuarioId;\n    //this.dadosHorarios.id_agenda = Number(this.agenda.id);\n    this.dadosHorarios.id_agenda = 1;\n    this.dadosHorarios.id_empresa = Number(this._utilService.Sessao().IdEmpresa);\n\n\n   this._utilService.showMessage(\"Aguarde Criando os Horários dessa agenda\", false);    \n\n    this.servicoHorario.create(this.dadosHorarios, Endpoint.AgendaHorarios).subscribe(h => {});\n\n    this.buscarHorarios();\n    \n  }\n\n  buscarHorarios(){\n    this.servicoHorario.read(Endpoint.AgendaHorarios).subscribe(x => {\n      x = x;\n      this.horariosCadstrados = x;\n    })\n  }\n}\n","<mat-tab-group (selectedTabChange)=\"selecionaAbaAgenda($event)\" >\r\n<!--Cadastro de AGENDA-->\r\n<mat-tab label=\"Cadastro de Agenda\" id=\"labelAgenda\">  \r\n        <div class=\"container\">\r\n\r\n            <mat-card>\r\n                <mat-card-title>Nova Agenda</mat-card-title>\r\n                    <form>\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Nome Agenda\" \r\n                             [(ngModel)]=\"agenda.nomeAgenda\" name=\"nomeAgenda\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Profissional\">\r\n                            <i class=\"material-icons ordem\" (click)=\"AtualizarComboProfissional()\" >refresh</i>\r\n                            <i class=\"material-icons ordem\" (click)=\"novoUsuario()\" >person_add</i>\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.profissionalid\" placeholder=\"Profissional\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option *ngFor=\"let tipoProf of comboProfissional \" [value]=\"tipoProf.id\">\r\n                                        {{tipoProf.nome}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Unidade Atendimento\">\r\n                            <i class=\"material-icons ordem\" (click)=\"AtualizarComboUnidade()\" >refresh</i>\r\n                            <i class=\"material-icons ordem\" (click)=\"novaUnidade()\" >house</i>\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.unidadeid\" placeholder=\"Unidade Atendimento\" (selectionChange)=\"BuscarSala()\" >\r\n                                <mat-option *ngFor=\"let tipounidade of comboUnidade \" [value]=\"tipounidade.id\">\r\n                                    {{tipounidade.nomeUnidade}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Sala Atendimento\">\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.salaid\" placeholder=\"Sala Atendimento\" >\r\n                                <mat-option *ngFor=\"let tipoSala of comboSala \" [value]=\"tipoSala.id\">\r\n                                    {{tipoSala.nomeSala}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Substituição\">\r\n                                <input name=\"substituicao\" [(ngModel)]=\"agenda.substituicao\" [checked]=\"agenda.substituicao\" type=\"checkbox\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Grupo Agenda\">\r\n                            <i class=\"material-icons ordem\" (click)=\"AtualizarComboGrupoAgenda()\" >refresh</i>\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.grupoAgendaid\" placeholder=\"Grupo Agenda\" >\r\n                                <mat-option *ngFor=\"let tipoGrupo of comboTipoGrupoAgenda \" [value]=\"tipoGrupo.id\">\r\n                                    {{tipoGrupo.nomeGrupoAgenda}} \r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Vigência Início\"\r\n                             [(ngModel)]=\"agenda.vigenciaInicio\" name=\"vigenciaInicio\" type=\"datetime-local\" teste >\r\n                        </mat-form-field>\r\n\r\n            \r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Vigência Fim\" \r\n                             [(ngModel)]=\"agenda.vigenciaFim\" name=\"vigenciaFim\" type=\"datetime-local\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Considera Feriado\">\r\n                                <input name=\"considerarFeriado\" [(ngModel)]=\"agenda.considerarFeriado\" [checked]=\"agenda.considerarFeriado\" type=\"checkbox\">\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"bloqueado\">\r\n                                <input name=\"bloqueado\" [(ngModel)]=\"agenda.bloqueado\" [checked]=\"agenda.bloqueado\" type=\"checkbox\">\r\n                        </mat-form-field>\r\n\r\n\r\n                    </form>\r\n            \r\n                    <button *ngIf=\"agenda.nomeAgenda && agenda.vigenciaInicio && agenda.vigenciaFim\"  mat-raised-button (click)=\"createAgenda()\" color=\"primary\" > \r\n                        Salvar\r\n                    </button>\r\n                    \r\n                    <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \r\n                        Cancelar\r\n                    </button>\r\n            </mat-card>\r\n\r\n        </div>\r\n    </mat-tab>\r\n <!--Cadastro Grupo AGENDA-->   \r\n    <mat-tab label=\"Grupo Agenda\">\r\n     \r\n        <mat-card>\r\n                  \r\n          <mat-card-title class=\"titleCard\" >Grupo Agenda </mat-card-title>\r\n      \r\n            <div class=\"mat-elevation-z3\">\r\n      \r\n              <span class=\"botaoBusca\" (click)=\"selecionarGrupo($event)\">\r\n                <i class=\"material-icons\">search</i>\r\n              </span>\r\n        \r\n              <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarGrupo($event)\"  value=\"\">\r\n      \r\n              <a (click)=\"cadGrupo()\" class=\"cadGrupo\" >\r\n                <i class=\"material-icons\">add</i>\r\n              </a>\r\n      \r\n              <table class=\"tabela\" mat-table [dataSource]=\"grupo\">\r\n                    <!-- Id Column -->\r\n                    <ng-container matColumnDef=\"id\">\r\n                      <th mat-header-cell *matHeaderCellDef>Id</th>\r\n                      <td mat-cell id=\"idgrupo\" *matCellDef=\"let row\">{{row.id}}</td>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"dtCriacao\">\r\n                      <th mat-header-cell *matHeaderCellDef>Criado Em</th>\r\n                      <td mat-cell *matCellDef=\"let row\" >{{row.dtCriacao | date: 'dd/MM/yyyy'}}</td>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"nomeGrupoAgenda\">\r\n                      <th mat-header-cell *matHeaderCellDef>Nome Grupo</th>\r\n                      <td mat-cell *matCellDef=\"let row\">{{row.nomeGrupoAgenda}}</td>\r\n                    </ng-container>\r\n      \r\n\r\n                    <!-- status -->\r\n                    <ng-container matColumnDef=\"bloqueado\">\r\n                      <th mat-header-cell *matHeaderCellDef>Status</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                          <div *ngIf=\"row.bloqueado\" >\r\n                            <i class=\"material-icons\">\r\n                              lock\r\n                            </i>\r\n                          </div>\r\n                          <div *ngIf=\"!row.bloqueado\" >\r\n                            <i class=\"material-icons\">  \r\n                              lock_open\r\n                            </i>\r\n                          </div>\r\n                        </td>\r\n                      </ng-container>\r\n                    \r\n                    <!-- Coluna de Ações -->\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <th mat-header-cell *matHeaderCellDef>Ações</th>\r\n                      <td mat-cell *matCellDef=\"let row\">\r\n                       \r\n                        <a  (click)=\"AtualizarGrupo(row.id)\" class=\"edit\">\r\n                          <i class=\"material-icons\">\r\n                             edit\r\n                          </i>\r\n                          </a>\r\n                        <a (click)=\"ExcluirGrupo(row.id)\" class=\"delete\">\r\n                          <i class=\"material-icons\">\r\n                            delete\r\n                          </i>\r\n                        </a>\r\n                          \r\n                      </td>\r\n                    </ng-container>\r\n                \r\n                    <tr mat-header-row *matHeaderRowDef=\"ColunasGrupo\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: ColunasGrupo;\"></tr>\r\n              </table>\r\n            </div>\r\n        </mat-card>\r\n  \r\n  \r\n  \r\n  \r\n      </mat-tab>\r\n\r\n\r\n      <!--Cadastro de Horários-->\r\n   \r\n      <mat-tab label = \"Horários\">\r\n        <div class=\"HorarioHeader\">GERAÇÃO DE HORARIOS</div>\r\n        <hr /><br />\r\n        <div class=\"display\">\r\n          <div>Dia da Semana</div>\r\n          <div class=\"displayTipo\">Tipo</div>\r\n          <div class=\"displayintervalo\">Intervalo</div>\r\n          <div class=\"displayInicioGeracao\">Início e Fim da Geração</div>\r\n        </div>\r\n        <br>\r\n\r\n      <mat-select [(value)]=\"dadosHorarios.diaDasemana\" placeholder=\"Selecione\" class=\"formataSelectDia\" >\r\n          <mat-option [value]=\"1\">Domingo</mat-option>\r\n          <mat-option [value]=\"2\">Segunda</mat-option>\r\n          <mat-option [value]=\"3\">Terça</mat-option>\r\n          <mat-option [value]=\"4\">Quarta</mat-option>\r\n          <mat-option [value]=\"5\">Quinta</mat-option>\r\n          <mat-option [value]=\"6\">Sexta</mat-option>\r\n          <mat-option [value]=\"7\">Sábado</mat-option>\r\n      </mat-select>\r\n      \r\n      <mat-select [(value)]=\"dadosHorarios.tipoHorario\" placeholder=\"Selecione\" class=\"formataSelectTipo\" >\r\n        <mat-option [value]=\"1\">Normal</mat-option>\r\n        <mat-option [value]=\"2\">Encaixe</mat-option>\r\n      </mat-select>\r\n    \r\n\r\n      <input class=\"tempo\" name=\"intervalo\" id=\"intervalo\" [(ngModel)]=\"dadosHorarios.intervalo\" type=\"time\" >\r\n      <input class=\"tempo\" name=\"horainicio\" id=\"horainicio\" [(ngModel)]=\"dadosHorarios.horainicio\" type=\"time\">\r\n      <input class=\"tempo\" name=\"horafim\" id=\"horafim\" [(ngModel)]=\"dadosHorarios.horafim\" type=\"time\" >\r\n\r\n        <span (click)=\"CriarHorarios()\" >\r\n          <i class=\"material-icons botao\">refresh</i>\r\n        </span>\r\n      \r\n      <br />\r\n      \r\n      <div class=\"display\">\r\n     \r\n        <!-- Dias da semana \r\n        \r\n        Segunda-->\r\n     \r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"horariosCadstrados\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n               \r\n              <th mat-header-cell *matHeaderCellDef><b>Segunda</b> <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora | slice:0:5}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Tempo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n      \r\n        <!--Terça-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"horariosCadstrados\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef>Terça <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Tempo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n           <!--Quarta-->\r\n\r\n           <table class=\"tabelaHorario\" mat-table [dataSource]=\"horariosCadstrados\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef>Quarta <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br /> Tempo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Quinta-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"horariosCadstrados\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef>Quinta <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Tempo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Sexta-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"horariosCadstrados\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef>Sexta <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Tempo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Sábado-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"horariosCadstrados\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef>Sábado <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora | slice:0:5}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Tempo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Domingo-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"horariosCadstrados\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef>Domingo <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora }}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Tempo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n      </div>\r\n\r\n      </mat-tab>\r\n\r\n      <!--Cadastro dos dias que não atende-->\r\n      <mat-tab label = \"Data N.Atende\">\r\n\r\n      </mat-tab>\r\n\r\n\r\n\r\n</mat-tab-group>","import { Route } from '@angular/compiler/src/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-delete',\n  templateUrl: './agenda-delete.component.html',\n  styleUrls: ['./agenda-delete.component.css']\n})\nexport class AgendaDeleteComponent implements OnInit {\n\n  agenda : Agenda = {  \n    id: null,\n    DtCriacao: new Date, \n    nomeAgenda: null,\n    profissionalid: null,\n    Empresaid: null,\n    unidadeid: null,\n    salaid: null,\n    substituicao: false,\n    grupoAgendaid: null,\n    vigenciaInicio: null,\n    vigenciaFim: null,\n    considerarFeriado: false,\n    bloqueado: false\n  }\n\n  constructor(\n              public dialgRef : MatDialogRef<AgendaDeleteComponent>,\n              private serviceAgenda : ServiceAllService<Agenda>,\n              private utilService : UtilService,\n              private route : Router\n\n             ) { }\n\n  ngOnInit(): void {\n    this.buscarAgendaByid();\n    \n  }\n\n  ExcluirAgenda(): void{\n      this.serviceAgenda.delete(Number(this.dialgRef.id), Endpoint.Agenda).subscribe(x => {\n          this.utilService.showMessage(\"Agenda Excluida com sucesso\", false);\n          this.route.navigate(['home-component'])\n          this.fecharPopup();\n\n      });\n  }\n\n  fecharPopup():void{\n      this.dialgRef.close();\n  }\n  buscarAgendaByid() : void {\n     this.serviceAgenda.readById(this.dialgRef.id, Endpoint.Agenda).subscribe(ag => {\n       this.agenda = ag;\n     });\n  }\n\n\n}\n \n  \n\n","<div class=\"container\">\n\n    <mat-card>\n        <mat-card-title>Excluir Agenda</mat-card-title>\n            <form>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Id Agenda\" \n                     [(ngModel)]=\"agenda.id\" name=\"idAgenda\" disabled=\"true\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Nome Agenda\" \n                    [(ngModel)]=\"agenda.nomeAgenda\" name=\"nomeAgenda\" disabled=\"true\"> \n                </mat-form-field>\n               \n            </form>\n    \n            <button mat-raised-button (click)=\"ExcluirAgenda()\"  color=\"primary\" > \n                Excluir\n            </button>\n            \n            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                Cancelar\n            </button>\n    </mat-card>\n\n</div>","import { Router } from '@angular/router';\r\nimport { Componentes } from './../../../Negocio/Componentes';\r\nimport { Aplicacao } from './../../../Negocio/Aplicacao';\r\nimport { UtilService } from './../../../services/util.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\r\nimport { ServiceAllService } from 'src/app/services/service-all.service';\r\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\r\nimport { AgendaDto } from 'src/app/models/Agenda/modelRetornoAgenda';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AgendaCreateComponent } from '../agenda-create/agenda-create.component';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { AgendaUpdateComponent } from '../agenda-update/agenda-update.component';\r\nimport { AgendaDeleteComponent } from '../agenda-delete/agenda-delete.component';\r\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\r\nimport { UsuarioCreateComponent } from 'src/app/components/usuario/usuario-create/usuario-create.component';\r\nimport { AgendaCadastroUnidadeComponent } from '../Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component';\r\nimport { EventEmitter } from 'events';\r\nimport { stringify } from '@angular/compiler/src/util';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-agenda-read',\r\n  templateUrl: './agenda-read.component.html',\r\n  styleUrls: ['./agenda-read.component.css']\r\n})\r\nexport class AgendaReadComponent implements OnInit {\r\n\r\n  Colunas = ['id', 'NomeAgenda','Funcionario','NomeEmpresa','NomeUnidade','NomeSala',\r\n                      'substituicao','GrupoAgenda','vigenciaInicio','vigenciaFim','considerarFeriado','bloqueado','action']  \r\n  agenda : AgendaDto[];\r\n\r\n  \r\n\r\n  constructor(\r\n              public dialog: MatDialog,\r\n              public overlay : Overlay,\r\n              private servico : UtilService,\r\n              private _repAgenda : ServiceAllService<AgendaDto>,\r\n\r\n             ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servico.AtualizarMenu(Aplicacao.Agenda,'app_registration','');\r\n    this.buscarAgenda();\r\n  }\r\n\r\n \r\n  buscarAgenda(){\r\n    \r\n    let filtroAgenda = (<HTMLSelectElement>document.getElementById('busca')).value;\r\n\r\n    this._repAgenda.read(Endpoint.Agenda).subscribe(ag => {\r\n      this.agenda = filtroAgenda == null ? ag.filter(x => x.empresaId.toString() == this.servico.Sessao().IdEmpresa) \r\n                    :  ag.filter(x => x.nomeAgenda.toLowerCase().includes(filtroAgenda.toLowerCase()) && x.empresaId.toString() == this.servico.Sessao().IdEmpresa)\r\n    });\r\n  }\r\n\r\n  addNovaAgenda() {\r\n   \r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n      this.servico.Popup(\"0\",AgendaCreateComponent, '50%','98%' );\r\n\r\n    }else{\r\n      this.servico.showMessage(\"Solicitar ao um Usuário Master para criar Nova Agenda!\",true);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  AtualizarAgenda(id : string): void {\r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n      let response  =  this.servico.Popup(id, AgendaUpdateComponent, '30%','80%' )\r\n      \r\n      }else{\r\n        this.servico.showMessage(\"Solicitar ao um Usuário Master para Editar os  dados da Agenda!\",true);\r\n      }   \r\n  }\r\n\r\n  ExcluirAgenda(id : string): void {\r\n      \r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n      {\r\n        this.servico.Popup(id, AgendaDeleteComponent,'30%','25%');\r\n      }\r\n      else\r\n      {\r\n        this.servico.showMessage(\"Solicitar ao um Usuário Master para Excluir a Agenda!\",true);\r\n      }\r\n  }\r\n\r\n\r\n  addUnidade(){\r\n    \r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n      this.servico.Popup(\"0\", AgendaCadastroUnidadeComponent, \"800px\", \"600px\", )\r\n    else\r\n      this.servico.showMessage(\"Solicitar ao um Usuário Master cadastrar a Unidade\",true);\r\n  }\r\n\r\n\r\n}\r\n","<mat-dialog-content>\n    <div class=\"mat-elevation-z3\">\n\n        <div class=\"barraMenu\">\n          <button mat-button [matMenuTriggerFor]=\"menu\">Rotina Diária</button>\n            <mat-menu #menu=\"matMenu\">\n              <a mat-menu-item>Agendamento</a>\n              <a mat-menu-item>Consulta de Agenda</a>\n              <a mat-menu-item>Consulta Agendamentos</a>\n            \n            </mat-menu>\n\n            <button mat-button [matMenuTriggerFor]=\"menucadastro\">Cadastro</button>\n              <mat-menu #menucadastro=\"matMenu\">\n                <a (click)=\"addNovaAgenda()\" mat-menu-item>Agenda</a>\n                <a (click)=\"addUnidade()\" mat-menu-item>Unidade</a>              \n              </mat-menu>\n\n\n\n              <span class=\"botaoBusca\" (click)=\"buscarAgenda()\" (keypress)=\"buscarAgenda()\">\n                <i class=\"material-icons\">search</i>\n              </span>\n\n              <input class=\"textBusca\"  name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n          </div>\n          <table class=\"tabelaagenda\" mat-table [dataSource]=\"agenda\">\n            <!-- Id Column -->\n            \n            <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef>Id</th>\n              <td mat-cell id=\"idAgenda\" *matCellDef=\"let row\">{{row.id}}</td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"NomeAgenda\">\n              <th mat-header-cell *matHeaderCellDef>Nome Agenda</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nomeAgenda}}</td>\n            </ng-container>\n      \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"Funcionario\">\n              <th mat-header-cell *matHeaderCellDef>Profissional</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n            </ng-container>\n      \n            <!-- Name Price -->\n            <ng-container matColumnDef=\"NomeEmpresa\">\n              <th mat-header-cell *matHeaderCellDef>Empresa</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n            </ng-container>\n      \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"NomeUnidade\">\n              <th mat-header-cell *matHeaderCellDef>Unidade</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nomeUnidade}}</td>\n            </ng-container>\n      \n            <ng-container matColumnDef=\"NomeSala\">\n                <th mat-header-cell *matHeaderCellDef>Sala</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.nomeSala}}</td>\n              </ng-container>\n    \n              <ng-container matColumnDef=\"GrupoAgenda\">\n                <th mat-header-cell *matHeaderCellDef>Grupo Agenda</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.nomeGrupoAgenda}}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"substituicao\">\n                <th mat-header-cell *matHeaderCellDef>Pode Substituir?</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.substituicao}}</td>\n              </ng-container>\n\n              \n              <ng-container matColumnDef=\"vigenciaInicio\">\n                <th mat-header-cell *matHeaderCellDef>Inicio Agenda</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.vigenciaInicio | date: 'dd/MM/yyyy hh:mm:ss'}} </td>\n              </ng-container>\n\n\n              <ng-container matColumnDef=\"vigenciaFim\">\n                <th mat-header-cell *matHeaderCellDef>Fim Agenda</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.vigenciaFim | date: 'dd/MM/yyyy hh:mm:ss'}}</td>\n              </ng-container>\n\n              \n              <ng-container matColumnDef=\"considerarFeriado\">\n                <th mat-header-cell *matHeaderCellDef>Feriado</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.considerarFeriado}}</td>\n              </ng-container>\n\n            <!-- status -->\n            <ng-container matColumnDef=\"bloqueado\">\n              <th mat-header-cell *matHeaderCellDef>Ativa</th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <div *ngIf=\"row.bloqueado == 'Sim'\" >\n                    <i class=\"material-icons\">\n                      lock\n                    </i>\n                  </div>\n                  <div *ngIf=\"row.bloqueado == 'Não'\" >\n                    <i class=\"material-icons\">  \n                      lock_open\n                    </i>\n                  </div>\n                </td>\n              </ng-container>\n      \n            \n            <!-- Coluna de Ações -->\n            <ng-container matColumnDef=\"action\">\n              <th mat-header-cell *matHeaderCellDef>Ações</th>\n              <td mat-cell *matCellDef=\"let row\">\n                  \n                  <a  (click)=\"AtualizarAgenda(row.id)\" class=\"edit\">\n                      <i class=\"material-icons\">\n                          edit\n                      </i>\n                  </a>\n                  <a (click)=\"ExcluirAgenda(row.id)\" class=\"delete\">\n                      <i class=\"material-icons\">\n                          delete\n                      </i>\n                  </a>\n                  \n              </td>\n            </ng-container>\n                \n        \n            <tr mat-header-row *matHeaderRowDef=\"Colunas\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: Colunas;\"></tr>\n          </table>\n\n      </div>\n\n      <div class=\"row\">\n        <router-outlet></router-outlet>\n      </div>\n</mat-dialog-content>\n  ","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { endWith, filter } from 'rxjs/operators';\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Empresa } from 'src/app/models/empresa/ModelEmpresa';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\nimport { Aplicacao } from 'src/app/Negocio/Aplicacao';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-update',\n  templateUrl: './agenda-update.component.html',\n  styleUrls: ['./agenda-update.component.css']\n})\nexport class AgendaUpdateComponent implements OnInit {\n\n  constructor(\n            private router: Router,\n            private utilService : UtilService,\n            private agendaService : ServiceAllService<Agenda>,\n            private serviceUnidade : ServiceAllService<Unidade>,\n            private serviceSala : ServiceAllService<Sala>,\n            private serviceGrupoAGenda : ServiceAllService<GrupoAgenda>,\n            private serviceEmpresa : ServiceAllService<Empresa>,\n            private serviceUsuario : ServiceAllService<Usuario>,\n            public dialogRef: MatDialogRef <AgendaUpdateComponent>,\n\n\n            ) { }\n\n  comboProfissional  : Usuario[];\n  comboUnidade : Unidade[];\n  comboSala : Sala[];\n  comboTipoGrupoAgenda : GrupoAgenda[];\n\n\n  agenda : Agenda = {  \n    id: null,\n    DtCriacao: new Date, \n    nomeAgenda: null,\n    profissionalid: null,\n    Empresaid: null,\n    unidadeid: null,\n    salaid: null,\n    substituicao: false,\n    grupoAgendaid: null,\n    vigenciaInicio: null,\n    vigenciaFim: null,\n    considerarFeriado: false,\n    bloqueado: false\n  }\n\n  \n  \n  ngOnInit(): void {\n \n    this.buscarAgendaPorId();\n    \n  \n  }\n\n      buscarAgendaPorId(){\n             \n        this.agendaService.readById(this.dialogRef.id, Endpoint.Agenda).subscribe(agId => {\n              this.agenda = agId\n              this.carregaCombos();\n            });\n      }\n\n      carregaCombos(){\n        \n        this.serviceUsuario.read(Endpoint.Usuario).subscribe(pr => {\n          this.comboProfissional = pr.filter(x => x.empresaid == this.utilService.Sessao().IdEmpresa )\n        });\n\n        \n        this.serviceUnidade.read(Endpoint.Unidade).subscribe(un => {\n          this.comboUnidade = un.filter(x => x.empresaid == Number(this.utilService.Sessao().IdEmpresa));\n        });\n\n        this.serviceSala.read(Endpoint.Sala).subscribe(sl =>{\n          this.comboSala = sl.filter(x => x.empresaid == Number(this.utilService.Sessao().IdEmpresa));\n        });\n        \n        this.serviceGrupoAGenda.read(Endpoint.GrupoAgenda).subscribe(ga => {\n          this.comboTipoGrupoAgenda = ga.filter(x => x.empresaid == Number(this.utilService.Sessao().IdEmpresa));\n        });\n       \n      } \n\n      UpdateAgenda(){\n        this.agenda.id = this.dialogRef.id\n        this.agendaService.update(this.agenda, Endpoint.Agenda).subscribe(() => {\n          this.utilService.showMessage(\"Agenda Atualizada com Sucesso!\", false)\n          this.utilService.atualizaRota(Aplicacao.Agenda+\"?\", true)\n          this.fecharPopup();\n      \n        });\n\n      }\n\n      fecharPopup(): void {\n        this.dialogRef.close();\n      }\n\n}\n","<div class=\"container\">\n\n    <mat-card>\n        <mat-card-title>Atualizar Agenda</mat-card-title>\n            <form>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Nome Agenda\" \n                     [(ngModel)]=\"agenda.nomeAgenda\" name=\"nomeAgenda\">\n                </mat-form-field>\n\n                \n                <mat-form-field>\n                        <input matInput placeholder=\"Profissional\" >\n                        <p></p>\n                    <mat-select \n                           [(value)]=\"agenda.profissionalid\" placeholder=\"Unidade Atendimento\">\n                         <mat-option *ngFor=\"let ret of comboProfissional \" [value]=\"ret.id\">\n                               {{ret.nome}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Unidade Atendimento\">\n                    <p></p>\n                    <mat-select [(value)]=\"agenda.unidadeid\" placeholder=\"Unidade Atendimento\" >\n                        <mat-option *ngFor=\"let tipounidade of comboUnidade \" [value]=\"tipounidade.id\">\n                            {{tipounidade.nomeUnidade}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Sala Atendimento\">\n                    <p></p>\n                    <mat-select [(value)]=\"agenda.salaid\" placeholder=\"Sala Atendimento\" >\n                        <mat-option *ngFor=\"let tipoSala of comboSala \" [value]=\"tipoSala.id\">\n                            {{tipoSala.nomeSala}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Substituição\">\n                        <input name=\"substituicao\" [(ngModel)]=\"agenda.substituicao\" [checked]=\"agenda.substituicao\" type=\"checkbox\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Grupo Agenda\">\n                    <p></p>\n                    <mat-select [(value)]=\"agenda.grupoAgendaid\" placeholder=\"Grupo Agenda\" >\n                        <mat-option *ngFor=\"let tipoGrupo of comboTipoGrupoAgenda \" [value]=\"tipoGrupo.id\">\n                            {{tipoGrupo.nomeGrupoAgenda}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Vigência Início\"\n                     [(ngModel)]= \"agenda.vigenciaInicio\" name=\"vigenciaInicio\" type=\"datetime-local\" teste >\n                </mat-form-field>\n\n    \n                <mat-form-field>\n                    <input matInput placeholder=\"Vigência Fim\" \n                     [(ngModel)]=\"agenda.vigenciaFim\" name=\"vigenciaFim\" type=\"datetime-local\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Considera Feriado\">\n                        <input name=\"considerarFeriado\" [(ngModel)]=\"agenda.considerarFeriado\" [checked]=\"agenda.considerarFeriado\" type=\"checkbox\">\n                </mat-form-field>\n\n\n                <mat-form-field>\n                    <input matInput placeholder=\"bloqueado\">\n                        <input name=\"bloqueado\" [(ngModel)]=\"agenda.bloqueado\" [checked]=\"agenda.bloqueado\" type=\"checkbox\">\n                </mat-form-field>\n\n\n            </form>\n    \n            <button *ngIf=\"agenda.nomeAgenda && agenda.vigenciaInicio && agenda.vigenciaFim\"  mat-raised-button (click)=\"UpdateAgenda()\"  color=\"primary\" > \n                Salvar\n            </button>\n            \n            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                Cancelar\n            </button>\n    </mat-card>\n\n</div>","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-agenda',\n  templateUrl: './home-agenda.component.html',\n  styleUrls: ['./home-agenda.component.css']\n})\nexport class HomeAgendaComponent implements OnInit {\n\n  constructor(private route : Router) { }\n\n  ngOnInit(): void {\n    this.route.navigate(['Agenda'])\n  }\n}\n","<app-agenda-read></app-agenda-read>","export enum Aplicacao{\r\n  Agenda = 'Agenda',\r\n  Cartões = 'Cartões',\r\n  Vendas = 'Vendas',\r\n  Octoplex = 'Octoplex',\r\n  \r\n}\r\n\r\nexport const TipoAplicacao = new Map<string, string>([\r\n  ['Agenda', 'Agenda'],\r\n  ['Cartões', 'Cartões'],\r\n  ['FrenteCaixa', 'FrenteCaixa'],\r\n  ['Octoplex', 'Octoplex']\r\n  \r\n])","export enum Endpoint {\r\n    Empresa = '/Empresa',\r\n    GrupoUsuario = '/GrupoUsuario',\r\n    Produto = '/Produto',\r\n    Usuario = '/Usuario',\r\n    Agenda = '/Agenda',\r\n    Unidade = '/Unidade',\r\n    Sala = '/Sala',\r\n    GrupoAgenda = '/GrupoAgenda',\r\n    AgendaHorarios = '/AgendaHorarios',\r\n    Token = '/Token'\r\n\r\n}","import { HomeAgendaComponent } from './Aplicacoes/agenda/home-agenda/home-agenda.component';\nimport { AgendaReadComponent } from './Aplicacoes/agenda/agenda-read/agenda-read.component';\nimport { AgendaDeleteComponent } from './Aplicacoes/agenda/agenda-delete/agenda-delete.component';\nimport { AgendaUpdateComponent } from './Aplicacoes/agenda/agenda-update/agenda-update.component';\nimport { AgendaCreateComponent } from './Aplicacoes/agenda/agenda-create/agenda-create.component';\n\nimport { Aplicacao } from './Negocio/Aplicacao';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\n\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\n\n\n//Rotas de componentes Negócio\n\nconst routes: Routes = [\n  {path : \"\", component:HomeComponent },\n  {path: \"login\", component: LoginComponent },\n  //Rotas de Produtos\n  {path: \"products\", component: ProductCrudComponent },\n\n  //Rotas de usuarios\n  {path: 'usuarios', component : UsuarioCrudComponent },\n\n  //Rotas de chamados\n  {path: \"chamados\", component : ChamadoCrudComponent },\n\n  //Rotas de empresa\n  {path: \"empresa\", component : EmpresaComponent },\n\n  //Rotas das APlicações\n  //Agenda\n  {path: Aplicacao.Agenda , component : HomeAgendaComponent},\n  {path: Aplicacao.Agenda+\"?\" , component : AgendaReadComponent}\n      \n]\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { LoginService } from '../app/'\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\n\n\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './services/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\n\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n import {MatDialogModule} from '@angular/material/dialog';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\n\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { UsuarioReadComponent } from './components/usuario/usuario-read/usuario-read.component';\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\nimport { ChamadoReadComponent } from './components/chamados/chamado-read/chamado-read.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaReadComponent } from './components/empresa/empresa-read/empresa-read.component';\nimport { AgendaUpdateComponent } from './Aplicacoes/agenda/agenda-update/agenda-update.component';\nimport { AgendaDeleteComponent } from './Aplicacoes/agenda/agenda-delete/agenda-delete.component';\nimport { AgendaCreateComponent } from './Aplicacoes/agenda/agenda-create/agenda-create.component';\nimport { AgendaReadComponent } from './Aplicacoes/agenda/agenda-read/agenda-read.component';\nimport { HomeAgendaComponent } from './Aplicacoes/agenda/home-agenda/home-agenda.component';\nimport { AgendaCadastroUnidadeComponent } from './Aplicacoes/agenda/Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component';\nimport { AgendaAlterarUnidadeComponent } from './Aplicacoes/agenda/Unidade/agenda-alterar-unidade/agenda-alterar-unidade.component';\nimport { AgendaExcluirUnidadeComponent } from './Aplicacoes/agenda/Unidade/agenda-excluir-unidade/agenda-excluir-unidade.component';\nimport { UnidadeSalaCadastroComponent } from './Aplicacoes/agenda/Unidade/Sala/unidade-sala-cadastro/unidade-sala-cadastro.component';\nimport { UnidadeSalaUpdateComponent } from './Aplicacoes/agenda/Unidade/Sala/unidade-sala-update/unidade-sala-update.component';\nimport { UnidadeSalaDeleteComponent } from './Aplicacoes/agenda/Unidade/Sala/unidade-sala-delete/unidade-sala-delete.component';\nimport { AgendaGrupoCadastroComponent } from './Aplicacoes/agenda/GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component';\nimport { AgendaGrupoExcluirComponent } from './Aplicacoes/agenda/GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component';\nimport { AgendaGrupoUpdateComponent } from './Aplicacoes/agenda/GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    UsuarioCrudComponent,\n    UsuarioComponent,\n    UsuarioReadComponent,\n    UsuarioCreateComponent,\n    UsuarioDeleteComponent,\n    UsuarioUpdateComponent,\n    ChamadoCrudComponent,\n    ChamadoCreateComponent,\n    ChamadoUpdateComponent,\n    ChamadoDeleteComponent,\n    ChamadoReadComponent,\n    EmpresaComponent,\n    EmpresaCreateComponent,\n    EmpresaUpdateComponent,\n    EmpresaDeleteComponent,\n    EmpresaReadComponent,\n    AgendaUpdateComponent,\n    AgendaDeleteComponent,\n    AgendaCreateComponent,\n    AgendaReadComponent,\n    HomeAgendaComponent,\n    AgendaCadastroUnidadeComponent,\n    AgendaAlterarUnidadeComponent,\n    AgendaExcluirUnidadeComponent,\n    UnidadeSalaCadastroComponent,\n    UnidadeSalaUpdateComponent,\n    UnidadeSalaDeleteComponent,\n    AgendaGrupoCadastroComponent,\n    AgendaGrupoExcluirComponent,\n    AgendaGrupoUpdateComponent,\n  \n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatDividerModule,\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-create',\n  templateUrl: './chamado-create.component.html',\n  styleUrls: ['./chamado-create.component.css']\n})\nexport class ChamadoCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-delete',\n  templateUrl: './chamado-delete.component.html',\n  styleUrls: ['./chamado-delete.component.css']\n})\nexport class ChamadoDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-read',\n  templateUrl: './chamado-read.component.html',\n  styleUrls: ['./chamado-read.component.css']\n})\nexport class ChamadoReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-update',\n  templateUrl: './chamado-update.component.html',\n  styleUrls: ['./chamado-update.component.css']\n})\nexport class ChamadoUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-update works!</p>\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from './../../../services/util.service';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { ContatoService } from './../../../services/contato.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { cnpj } from 'cpf-cnpj-validator';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-empresa-create',\n  templateUrl: './empresa-create.component.html',\n  styleUrls: ['./empresa-create.component.css']\n})\nexport class EmpresaCreateComponent implements OnInit {\n\n \nempresa : Empresa = {\n    dtCriacao : null,\n    cnpj: null,\n    razaoSocial: null,\n    nomeFantasia: null,\n    inscricaoEstadual: null,\n    inscricaoMunicipal: null,\n    cnes : null,\n    codPIS : null,\n    observacao : null,\n    codCnae : null,\n    empresaPai : null,\n    criadoPor : null,\n    bloqueado : null\n    \n}\n\n\n\n  constructor(private utilService : UtilService,\n              private router : Router,\n              private servicoEmpresa : ServiceAllService<Empresa>,\n              public dialofRef : MatDialogRef<EmpresaCreateComponent>,\n   \n\n\n              )\n             { }\n\n  ngOnInit(): void {\n   \n  }\n\n  cadastrarEmpresa(){\n    \n    let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n    let empPai = Number(this.utilService.Sessao().IdEmpresa);\n    this.empresa.criadoPor  = Number(this.utilService.Sessao().UsuarioId);\n    this.empresa.dtCriacao = new Date;\n    this.empresa.empresaPai = empPai;\n       \n    this.empresa.bloqueado = false;\n    \n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.utilService.showMessage(\"Você não possui permissão para cadastro de empresas\", false)\n\n    }else\n    {\n     if(cnpj.isValid(this.empresa.cnpj)){\n       this.servicoEmpresa.read(Endpoint.Empresa).subscribe(bemp => {\n          bemp = bemp;\n         let retornoEmp = bemp.filter(x => x.cnpj == this.empresa.cnpj)\n         let retornomaster = bemp.filter(x => x.id == empPai);\n\n          if (retornoEmp.length == 0 ){\n            \n            if(grpId == TipoUsuario.Administrador){\n\n                this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                  emp = emp;\n                        \n                  let empresaPai = emp.id;\n                         \n                              emp.empresaPai = empresaPai;\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                         \n                          this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                          this.utilService.atualizaRota(\"empresa\");\n                          this.empresa = null;\n                        })\n                }else if (grpId == TipoUsuario.Master && retornomaster.filter(x => x.empresaPai == empPai).length > 0)\n                {\n                  \n                  this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                    emp = emp;\n                          \n                    let empresaPai = emp.id;\n                          \n                              emp.bloqueado = true;\n                              emp.empresaPai = Number(localStorage.getItem(\"empId\"));\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                       \n                            this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                            this.utilService.atualizaRota(\"empresa\");\n                            this.empresa = null;\n                          })\n                }else{\n                  this.utilService.showMessage(\"Para criação de uma empresa precisa está logado com a Matriz.!\",false);\n                }\n          }\n          else\n           this.utilService.showMessage(\"Cnpj já cadastrado!\",false);\n        });  \n      }\n      else{\n        this.utilService.showMessage(\"Cnpj inválido\",false);\n      }\n    }\n  }\n\n  fecharPopup(){\n    this.dialofRef.close()\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Empresa\">\n        <section>\n\n        <div class=\"container\">\n\n            <mat-card>\n                <mat-card-title>Nova Empresa</mat-card-title>\n                    <form>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cnpj\" \n                             [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Nome\"\n                            [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Razão Social\"\n                            [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Estadual\"\n                            [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Municipal\"\n                            [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"CNES\"\n                            [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. PIS\"\n                            [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. CNAE\"\n                            [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Observação\"\n                            [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n                        </mat-form-field>\n            \n                    </form>\n            \n                    <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"cadastrarEmpresa()\" color=\"primary\" > \n                        Salvar\n                    </button>\n                    \n                    <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                        Cancelar\n                    </button>\n            </mat-card>\n\n        </div>\n\n        </section>\n</mat-tab>\n<mat-tab label=\"Contato\"> Contatos</mat-tab>\n<mat-tab label=\"Endereços\">Endereços </mat-tab>\n</mat-tab-group>","import { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { CanActivate, Router, ActivatedRoute } from '@angular/router';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-empresa-delete',\n  templateUrl: './empresa-delete.component.html',\n  styleUrls: ['./empresa-delete.component.css']\n})\nexport class EmpresaDeleteComponent implements OnInit {\n\n\n  empresa : Empresa\n  constructor(private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private mensagem : UtilService,\n              public dialogRef : MatDialogRef<EmpresaDeleteComponent>,\n              private utilservice : UtilService\n\n            ) { }\n\n  ngOnInit(): void {\n    this.BuscarEmpresa();\n  }\n\n\n  excluirEmpresa(){\n    \n    let existeUsuario = null;\n    \n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(usr => {\n        usr = usr;\n        existeUsuario = usr.filter(x => x.empresaid == this.empresa.id.toString())\n       \n        if (existeUsuario.length > 0)\n        {\n          this.mensagem.showMessage(\"Empresa não pode ser excluida porque possui Dependências de usuários.\", false)\n        }    \n        else\n        {\n            if (Number(this.utilservice.Sessao().GrupoUsuario) == TipoUsuario.Administrador){\n              this.serviceEmpresa.delete(this.empresa.id, Endpoint.Empresa).subscribe(()=>{\n                this.mensagem.showMessage(\"Empresa excluida com sucesso !\", false);\n               this.utilservice.atualizaRota(\"empresa\")\n              })\n            }\n              else{\n                this.mensagem.showMessage(\"Permissão de exclusão negada !\", false);\n                this.utilservice.atualizaRota(\"empresa\")\n              }\n        }\n    });\n  }\n\n  fecharPopup(){\n    this.dialogRef.close();\n  }\n\n   BuscarEmpresa(){\n    \n    \n    this.serviceEmpresa.readById(this.dialogRef.id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n\n    })\n\n   }\n\n\n}\n","<mat-card>\n    <mat-card-title>Excluir Empresa</mat-card-title>\n        <form>\n                       \n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\" disabled=\"true\">\n            </mat-form-field>\n           \n            <mat-form-field>\n                <input matInput placeholder=\"Nome Fantasia\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\" disabled=\"true\">\n            </mat-form-field>\n           \n           \n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\" disabled=\"true\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"excluirEmpresa()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\r\nimport { Endpoint } from './../../../Negocio/Endpoint';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceAllService } from './../../../services/service-all.service';\r\nimport { Endereco } from './../../../models/endereco/modelEndereco';\r\nimport { Contato } from './../../../models/contato/modelContato';\r\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { elementAt } from 'rxjs/operators';\r\nimport { TipoUsuarioSistema } from 'src/app/models/usuarios/enumUsuarios';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EmpresaCreateComponent } from '../empresa-create/empresa-create.component';\r\nimport { UtilService } from 'src/app/services/util.service';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { EmpresaUpdateComponent } from '../empresa-update/empresa-update.component';\r\nimport { EmpresaDeleteComponent } from '../empresa-delete/empresa-delete.component';\r\n\r\n@Component({\r\n  selector: 'app-empresa-read',\r\n  templateUrl: './empresa-read.component.html',\r\n  styleUrls: ['./empresa-read.component.css']\r\n})\r\nexport class EmpresaReadComponent implements OnInit {\r\n\r\n  \r\n  empresa: Empresa[];\r\n  empresas: Empresa[];\r\n  contato : Contato;\r\n  endereco : Endereco;\r\n  displayedColumns = ['id','cnpj', 'razaoSocial','nomeFantasia','inscricaoEstadual','inscricaoMunicipal','bloqueado','action']  \r\n\r\n  constructor(private router : Router,\r\n              private serviceEmpresa : ServiceAllService<Empresa>,\r\n              public dialog : MatDialog,\r\n              private _utilService : UtilService,\r\n              private overlay : Overlay\r\n             ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.buscarEmpresa();\r\n\r\n  }\r\n\r\n  buscarEmpresa(): void \r\n  {\r\n    let filtroEmpresa = (<HTMLSelectElement>document.getElementById('busca')).value;\r\n    let empId = localStorage.getItem(\"empId\");\r\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\r\n\r\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\r\n      emp = emp;\r\n\r\n      \r\n      this.empresa =  new Array();\r\n\r\n          if(grpId == TipoUsuario.Administrador)\r\n          {\r\n            emp.forEach(element => {\r\n            this.empresa.push(element)\r\n             });\r\n          }\r\n          else if(grpId == TipoUsuario.Master)\r\n          {\r\n            emp.forEach(master => {\r\n              if(master.empresaPai.toString()== empId) \r\n              this.empresa.push(master)\r\n            });\r\n\r\n          }\r\n\r\n      let empresaFIltrada = new Array();\r\n      if (filtroEmpresa){\r\n           \r\n        for (let index = 0; index < this.empresa.length; index++) {\r\n          const element = this.empresa[index];\r\n            if (element.nomeFantasia.toLowerCase().includes(filtroEmpresa.toLowerCase()))\r\n            empresaFIltrada.push(element);\r\n        }\r\n        this.empresa = new Array();\r\n        this.empresa = empresaFIltrada;    \r\n      }else{\r\n        this.empresa = this.empresa;\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n\r\n  addEmpresa(){\r\n\r\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\r\n        const dialogRef = this.dialog.open(EmpresaCreateComponent, {\r\n          width : '700px',\r\n          height : '730px',\r\n          scrollStrategy\r\n\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n    }else{\r\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  editarEmpresa(id : string){\r\n\r\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\r\n        const dialogRef = this.dialog.open(EmpresaUpdateComponent, {\r\n          width : '700px',\r\n          height : '750px',\r\n          scrollStrategy,\r\n          id\r\n\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n    }else{\r\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  excluirEmpresa(id : string){\r\n\r\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\r\n        const dialogRef = this.dialog.open(EmpresaDeleteComponent, {\r\n          width : '500',\r\n          height : '200px',\r\n          scrollStrategy,\r\n          id\r\n\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n    }else{\r\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n  \r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n","<div>\n  <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n   \n   <span (click)=\"buscarEmpresa()\">\n     <i class=\"material-icons\">search</i>\n   </span>\n</div>\n\n<div class=\"footer\">\n  <span (click)=\"addEmpresa()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"empresa\">\n      <!-- Id Column -->\n      \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"cnpj\">\n        <th mat-header-cell *matHeaderCellDef>Cnpj</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.cnpj}}</td>\n      </ng-container>\n      \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"razaoSocial\">\n        <th mat-header-cell *matHeaderCellDef>Razão Social</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.razaoSocial}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"nomeFantasia\">\n        <th mat-header-cell *matHeaderCellDef>Nome Fantasia</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n      </ng-container>\n\n      <!-- Name Price -->\n      <ng-container matColumnDef=\"inscricaoEstadual\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Estadual</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoEstadual}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"inscricaoMunicipal\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Municipal</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoMunicipal}}</td>\n      </ng-container>\n\n      <!-- status -->\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n          </td>\n        </ng-container>\n\n       \n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a (click)=\"editarEmpresa(row.id)\"  class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a (click)=\"excluirEmpresa(row.id)\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n\n\n\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { cnpj } from 'cpf-cnpj-validator';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-empresa-update',\n  templateUrl: './empresa-update.component.html',\n  styleUrls: ['./empresa-update.component.css']\n})\nexport class EmpresaUpdateComponent implements OnInit {\n\n  empresa : Empresa;\n  usuariologado : boolean;\n  constructor(\n              private empresaService : ServiceAllService<Empresa>,\n              private utilservice : UtilService,\n              public dialog : MatDialogRef<EmpresaUpdateComponent>\n              ) { }\n\n  ngOnInit(): void {\n \n  if (Number(this.utilservice.Sessao().GrupoUsuario) == TipoUsuario.Administrador)\n     this.usuariologado = true;\n  \n  this.ObterEmpresa();\n  \n  }\n\n\n  atualizarEmpresa() : void {\n    \n    let grpId = Number(this.utilservice.Sessao().GrupoUsuario);\n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.utilservice.showMessage(\"Você não possui permissão para editar o cadastro de empresas\", false)\n\n    }else\n    {\n     if (cnpj.isValid(this.empresa.cnpj)){\n               try {\n                        this.empresaService.update(this.empresa, Endpoint.Empresa).subscribe(()=>{\n                        this.utilservice.showMessage(\"Empresa atualizada com sucesso\", false)\n                        this.utilservice.atualizaRota(\"empresa\");\n                      });\n\n                    } catch (error) {\n                      this.utilservice.showMessage(\"Erro na atualização dos dados \" + error, true);\n                    }\n\n      }else{\n        this.utilservice.showMessage(\"Cnpj Inválido \" , false);\n      }\n      }\n  }\n\n  fecharPopup(){\n    this.dialog.close();\n  }\n\n  \n  ObterEmpresa() {\n    this.empresaService.readById(this.dialog.id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })    \n       \n  }\n  \n\n}\n\n\n","<mat-card>\n    <mat-card-title>Atualizar dados da Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" disabled=\"true\" name=\"cnpj\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Razão Social\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Estadual\"\n                [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Municipal\"\n                [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"CNES\"\n                [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. PIS\"\n                [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. CNAE\"\n                [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n            </mat-form-field>\n            \n            <div *ngIf=\"usuariologado\">\n                <mat-form-field >\n                            <input matInput placeholder=\"Bloqueado\">\n                                        <input name=\"status\" [(ngModel)]=\"empresa.bloqueado\" [checked]=\"empresa.bloqueado\" type=\"checkbox\">\n                </mat-form-field>\n            </div>\n          \n            <mat-form-field>\n    \n                <input matInput placeholder=\"Observação\"\n                [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"atualizarEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Endpoint } from './../../Negocio/Endpoint';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Acesso } from '../../models/acessoModel';\nimport { UtilService } from './../../services/util.service';\nimport { LoginService } from './../../services/login.service';\n\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\nacesso : Acesso = new Acesso();\n\n\n\nconstructor(private router :Router,\n             private authservice : LoginService,\n             ) { }\n\n  ngOnInit(): void {\n  \n  }\n  \n  logarSistema(keyEvent : any){\n\n    if (keyEvent.which === 13 || keyEvent.which == 1)\n      this.authservice.logarSistema(this.acesso);\n\n  }\n  \n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field > \n                <input matInput placeholder=\"Chave Empresa\" \n                 [(ngModel)]=\"acesso.nome\" name=\"name\" placeholder=\"Empresa\">\n                 \n            </mat-form-field>\n\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"acesso.login\" name=\"name\" placeholder=\"login\">\n                 \n            </mat-form-field>\n           \n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"acesso.senha\" type=\"password\" name=\"senha\" (keypress)=\"logarSistema($event)\">\n                \n            </mat-form-field>\n        </form>\n        \n            <div *ngIf=\"acesso.login && acesso.senha && acesso.nome\">\n                <button mat-raised-button (click)=\"logarSistema($event)\"  color=\"primary\"> \n                    Login\n                </button> \n            </div>\n          \n   \n       \n        \n\n</mat-card>        \n","import { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Aplicacao, TipoAplicacao } from './../../../Negocio/Aplicacao';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\nimport { stringify } from 'querystring';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  comboProduto =  [];\n  empresa : Empresa[];\n  comboEmpresa : Empresa;\n\n    product : Product = {  \n    dtCriacao : null,\n    criadoPor : null,\n    nome : null,\n    valor : 0,\n    empresaid : null,\n    bloqueado : false,\n    }\n\n  constructor(\n              private utilService : UtilService,\n              private router : Router,\n              private ProdutoEmpresa : ServiceAllService<Product>,\n              private ServiceEmpresa : ServiceAllService<Empresa>,\n              public matDialogref : MatDialogRef<ProductCreateComponent>\n               ) { }\n\n  ngOnInit(): void {\n    this.buscarProduto();\n    this.buscarEmpresa()\n  }\n\n  associarProdutoEmpresa() : void {\n\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.product.dtCriacao = new Date;\n    this.product.bloqueado = false;\n    \n    this.ProdutoEmpresa.read(Endpoint.Produto).subscribe(p => {\n      p = p;\n\n      let ativo = p.filter(x => x.nome == this.product.nome && x.empresaid == this.product.empresaid )\n      \n      if (ativo.length == 0)\n      {\n        this.ProdutoEmpresa.create(this.product, Endpoint.Produto).subscribe(() => {\n          this.utilService.showMessage('o Produto Criado!');\n          this.utilService.atualizaRota(\"products\")\n          })\n      \n      }else{\n        this.utilService.showMessage('Esse Produto Já foi cadastrado para essa empresa!');\n      }\n\n    })\n    \n  }\n\n  fecharPopup() : void {\n    this.matDialogref.close();\n  }\n\n  buscarProduto(){\n    \n      TipoAplicacao.forEach(element => {\n        this.comboProduto.push(element)\n      });\n     return this.comboProduto;\n  }\n  buscarEmpresa(){\n    this.ServiceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })\n  }\n  \n}\n","<mat-card>\n    <mat-card-title>Habilitar - Produto Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Produto\">\n                <p></p>\n                <mat-select [(value)]=\"product.nome\" placeholder=\"productId\" >\n                    <mat-option *ngFor=\"let produto of comboProduto \" [value]=\"produto\">\n                         {{produto}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"product.empresaid\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let comboEmpresa of empresa\" [value]=\"comboEmpresa.id\">\n                            {{comboEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"associarProdutoEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product = {\n    id: null,\n    dtCriacao : null,\n    criadoPor : null,\n    nome: null,\n    valor : 0,\n    empresaid : null,\n    bloqueado : null,\n  }\n\n  constructor(private productService : ProductService,\n              private utilService : UtilService,\n              private deleteProduto : ServiceAllService<Product>,\n              public dialogRef : MatDialogRef<ProductDeleteComponent> \n              ) { }\n\n  ngOnInit(): void {\n    this.buscarProduto();\n  }\n  \n  deleteProduct():void{\n      \n    this.deleteProduto.delete(Number(this.dialogRef.id), Endpoint.Produto).subscribe(() => {\n        this.utilService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.utilService.atualizaRota(\"products\", true);\n      })\n    \n  }\n\n  buscarProduto(){\n    this.productService.readById(this.dialogRef.id).subscribe(product => {\n      this.product = product;\n    });\n  }\n\n  fecharPopup():void{\n    this.dialogRef.close();\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                [(ngModel)]=\"product.nome\" name=\"nome\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { stringify } from 'querystring';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router } from '@angular/router';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../models/produtos/product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ProductCreateComponent } from '../product-create/product-create.component';\nimport { ProductUpdateComponent } from '../product-update/product-update.component';\nimport { ProductDeleteComponent } from '../product-delete/product-delete.component';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\nvlrProduto : string = null;\n\ndisplayedColumns = ['id','nome', 'valor','empresaid','bloqueado','action']  \n\n  constructor(private router : Router,\n              private serviceProduto : ServiceAllService<Product>,\n              private serviceEmpresa : ServiceAllService<Empresa>,\n              private _utilService : UtilService,\n              public dialog : MatDialog, \n              private overlay : Overlay\n             ) { }\n\n  ngOnInit(): void {\n      this.buscarProduto()\n  }\n\n  addProduto(){\n\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(ProductCreateComponent, {\n          width : '500',\n          height : '400px',\n          scrollStrategy,\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\n    }\n\n\n  }\n\n  editarProduto(id : string){\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(ProductUpdateComponent, {\n          width : '400px',\n          height : '360px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para associar produtos a uma empresa\",true);\n    }\n  }\n\n\n  excluirProdutoEmpresa(id : string){\n\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(ProductDeleteComponent, {\n          width : '400px',\n          height : '240px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para associar produtos a uma empresa\",true);\n    }\n\n\n  }\n\n\n  buscarProduto() : void {\n\n    this.serviceProduto.read(Endpoint.Produto).subscribe(product => {\n        product = this.vlrProduto == null ?  product : product.filter(x => x.nome.toLowerCase().includes(this.vlrProduto.toLowerCase()))\n\n        this.products = new Array();\n        product.forEach(element => {\n          \n            this.serviceEmpresa.readById(element.empresaid.toString(), Endpoint.Empresa).subscribe(emp => {\n              emp = emp\n              \n              if (emp)\n                element.empresaid = emp.razaoSocial;\n                \n            })\n            \n            this.products.push(element);\n   \n        });\n    })\n  }\n\n  selecionarProduto(KeyEvent : any){\n\n    if (KeyEvent.which == 13 || KeyEvent.which == 1){\n      this.vlrProduto =  (<HTMLInputElement>document.getElementById('txtbusca')).value;\n    \n      this.buscarProduto();\n    \n    }\n  }\n  \n}\n","<div class=\"mat-elevation-z4\">\n\n  <div>\n    <span (click)=\"addProduto()\">\n      <i class=\"material-icons\">person_add</i>\n    </span>\n  \n    <span class=\"botaoBusca\" (click)=\"selecionarProduto($event)\" (keypress)=\"selecionarProduto($event)\">\n      <i class=\"material-icons\">search</i>\n    </span>\n    \n    <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarProduto($event)\"  value=\"\">\n  \n  </div>\n\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n       <!-- Name Price -->\n       <ng-container matColumnDef=\"valor\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.valor | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"empresaid\">\n        <th mat-header-cell *matHeaderCellDef>Empresa</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.empresaid}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Status</th>\n        <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n        </td>\n      </ng-container>\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a (click)=\"editarProduto(row.id)\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a (click)=\"excluirProdutoEmpresa(row.id)\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n\n","import { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\nproduct: Product = new Product()\n  \n\n  constructor(\n              private utilService : UtilService,\n              private ProdutoService : ServiceAllService<Product>,\n              public matdialogRef : MatDialogRef<ProductUpdateComponent>,\n              private route : Router\n              ) { }\n\n\n  ngOnInit(): void {\n    \n    this.buscarProduto();\n   \n  }\n\n  updateProduct(): void {\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n      this.ProdutoService.update(this.product, Endpoint.Produto).subscribe(() => {\n      this.utilService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.utilService.atualizaRota(\"products\", true);\n      this.fecharPopup();\n    })\n\n  }\n\n  fecharPopup(): void {\n    \n    this.matdialogRef.close();\n   \n  }\n  buscarProduto() : void {\n      this.ProdutoService.readById(this.matdialogRef.id, Endpoint.Produto).subscribe(product => {\n          this.product = product;\n      })\n  }  \n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.nome\" name=\"nome\" disabled=\"true\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"product.bloqueado\" [checked]=\"product.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>\n\n","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\nopened = false;\nlock = false;  \n  constructor(private auth: LoginService) { }\n\n  ngOnInit(): void {\n  this.validarAcesso();\n  }\n\n  sairSistema(){\n    \n    this.auth.sairSistema();\n    \n  }\nvalidarAcesso(){\n  this.lock = Number(localStorage.getItem(\"grpUs\")) == TipoUsuario.Administrador ? true : false;\n}\n \n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" \n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" [(opened)]=\"opened\">\n            <mat-nav-list class=\"nav-list\">\n            \n                <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <!--Menus de cadastro-->    \n            <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menuColor\" >\n                <i class=\"material-icons\">storefront</i>\n                \n                <mat-menu #menu=\"matMenu\">\n                        <a mat-list-item routerLink=\"empresa\" >\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Empresa\n                        </a>\n                        <a *ngIf=\"lock\" mat-list-item routerLink=\"products\" >\n                            <i class=\"material-icons\">\n                                storefront\n                            </i>\n                            Produto - Empresa\n                        </a>\n                        <a mat-list-item routerLink=\"chamados\">\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Solicitações\n                        </a>\n                        <a mat-list-item routerLink=\"usuarios\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Usuários\n                        </a>\n                </mat-menu>\n            </button>\n\n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <div *ngIf=\"!opened\">\n            <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                navigate_next\n            </i>\n        </div>\n            \n        <div *ngIf=\"opened\">\n                <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                    navigate_before\n                </i>\n        </div>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { stringify } from 'querystring';\nimport { UsuarioReadComponent } from './../usuario-read/usuario-read.component';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-usuario-create',\n  templateUrl: './usuario-create.component.html',\n  styleUrls: ['./usuario-create.component.css']\n})\nexport class UsuarioCreateComponent implements OnInit {\n\ntipoLogin : boolean = false;\nempresa : Empresa[];\n\ndadosEmpresa : Empresa;\nusuario : Usuario = new Usuario();\n\ngrupousuario : GrupoUsuario[];\n\ncriargrupousuario : GrupoUsuario = new GrupoUsuario()\n\ncomboTipousuario = [];\n\nconstructor(  private serviceUsuario : ServiceAllService<Usuario>,\n              private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceGrupoUsuario : ServiceAllService<GrupoUsuario>,\n              private utilService : UtilService,\n              private serviceLogin : LoginService,\n              public dialogRef: MatDialogRef <UsuarioCreateComponent>, \n              \n              private router : Router) { }\n\n  ngOnInit(): void {\n      let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n      \n      if (grpId == TipoUsuario.Administrador)\n         this.tipoLogin=true;\n\n      this.alimentarCombo();\n      this.buscarEmpresa();\n  }\n  \n  createUsuario() : void {\n    \n    this.usuario.criadoPor  = Number(this.utilService.Sessao().UsuarioId);\n    this.usuario.dtCriacao = new Date;\n   \n    this.usuario.grupoUsuarioid = this.usuario.grupoUsuarioid.toString().trim() == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                : this.usuario.grupoUsuarioid.toString().trim() == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                : this.usuario.grupoUsuarioid.toString().trim() == \"Master\" ? TipoUsuario.Master.toString()\n                                : this.usuario.grupoUsuarioid.toString() == \"Usuario\" ? TipoUsuario.Usuario.toString() : null;\n    \n    \n\n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(user => {\n      user = user;\n\n      let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaid == this.usuario.empresaid);\n           \n            if (ativo.length > 0)\n            {\n              this.utilService.showMessage('Esse Usuário já existe para essa Empresa');\n              this.usuario.login =  null; \n              user =  new Array();\n            }else{\n           \n              this.serviceEmpresa.readById(this.usuario.empresaid, Endpoint.Empresa).subscribe(emp => {\n                emp = emp;\n                if (!emp.bloqueado){\n                  this.serviceUsuario.create(this.usuario, Endpoint.Usuario).subscribe(() => {\n                    this.utilService.showMessage('Usuário Criado!');\n                  });\n                }\n                else\n                {\n                  this.utilService.showMessage(`Não pode ser criado Usuário para empresa ${emp.razaoSocial} porque essa empresa está bloqueada.`, false);\n                }\n              });\n              \n              user =  new Array();\n            }\n\n    })\n  }\n\n  fecharPopup(): void{\n    this.dialogRef.close();\n  }\n\n  buscarEmpresa() {\n   \n    let empId = this.utilService.Sessao().IdEmpresa\n    let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n        emp = emp; \n\n        this.empresa =  new Array()\n\n          emp.forEach(empresasCarregadas => {\n        \n            if(grpId == TipoUsuario.Administrador)\n              this.empresa.push(empresasCarregadas)\n            else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.empresaPai.toString())\n                this.empresa.push(empresasCarregadas)\n            });\n    })\n  }\n\n  alimentarCombo() : void  {\n\n    let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n\n    for (var tipo in TipoUsuario) {\n      if (TipoUsuario.hasOwnProperty(tipo) &&\n        (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n\n          this.comboTipousuario.push(tipo)\n          \n      }\n      else if (TipoUsuario.hasOwnProperty(tipo) &&\n      (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n\n        if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n            this.comboTipousuario.push(tipo);\n        }\n    }\n  }\n\n  createGrupoUsuario(){\n    this.criargrupousuario.criadoPor  = Number(this.utilService.Sessao().UsuarioId);\n    this.criargrupousuario.dtCriacao = new Date;\n    this.criargrupousuario.empresaId = Number(this.utilService.Sessao().IdEmpresa);\n\n      this.serviceGrupoUsuario.create(this.criargrupousuario, Endpoint.GrupoUsuario).subscribe(() => {\n        this.utilService.showMessage('Grupo de Usuário Criado!');\n      })\n  }\n}\n","<mat-card>\n    <h1>Cadastro de Usuário</h1>\n    <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Crachá\"\n                [(ngModel)]=\"usuario.cracha\" name=\"cracha\">\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"tipoLogin\">\n                <input matInput placeholder=\"Usuario de Sistema\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"usuario.bolSistema\" [checked]=\"usuario.bolSistema\" type=\"checkbox\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Reseta Senha\">\n                    <input name=\"usuariresetasenha\" [(ngModel)]=\"usuario.bolResetaSenha\" [checked]=\"usuario.bolResetaSenha\" type=\"checkbox\">\n            </mat-form-field>\n\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioid\" placeholder=\"tipousuario\" >\n                    <mat-option *ngFor=\"let tipo of comboTipousuario \" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaid\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                    {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Profissional\">\n                    <input name=\"usuarioProfissional\" [(ngModel)]=\"usuario.profissional\" [checked]=\"usuario.profissional\" type=\"checkbox\">\n            </mat-form-field>\n\n    </form>\n            <button *ngIf=\"usuario.nome && usuario.login && usuario.senha && usuario.grupoUsuarioid && usuario.empresaid\" mat-raised-button (click)=\"createUsuario()\" color=\"primary\" > \n                Salvar\n            </button>\n  \n            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                Voltar\n            </button>\n  \n \n</mat-card>","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-usuario-delete',\n  templateUrl: './usuario-delete.component.html',\n  styleUrls: ['./usuario-delete.component.css']\n})\nexport class UsuarioDeleteComponent implements OnInit {\nempresa : Empresa\nusuario : Usuario;\n\n  constructor(private usuarioService : ServiceAllService<Usuario>,\n              private empresaService : ServiceAllService<Empresa>,\n              private utilService : UtilService,\n              private route : ActivatedRoute,\n              public dialogRef : MatDialogRef<UsuarioDeleteComponent>\n             ) { }\n\n  ngOnInit(): void {\n    this.carregaUsuario()\n  }\n\ncarregaUsuario(){\n\n  \n  this.usuarioService.readById(this.dialogRef.id, Endpoint.Usuario).subscribe(usuario => {\n    this.usuario = usuario;\n    \n    this.buscarEmpresa().subscribe(empresa =>{\n      this.empresa = empresa;\n      this.usuario.empresaid = this.empresa.nomeFantasia;\n     \n    });\n  })\n\n}\n\n  deleteUsuario(): void{\n      this.usuarioService.delete(this.usuario.id , Endpoint.Usuario).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Excluído com Sucesso!\")\n      this.fecharPopup();\n      this.utilService.atualizaRota(\"usuario\", true);\n\n\n    })\n  }\n  fecharPopup():void{\n    this.dialogRef.close();\n  }\n\n  buscarEmpresa(){\n    return this.empresaService.readById(this.usuario.empresaid, Endpoint.Empresa);\n  }\n}\n","<mat-card>\n    <mat-card-title>Excluir Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\" disabled = \"true\" > \n\n            </mat-form-field>\n            \n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\" disabled=\"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"usuario.empresaid\" name=\"empresaid\" disabled=\"true\" >\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteUsuario()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { map, catchError, take, tap, elementAt } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { __await } from 'tslib';\nimport { FooterComponent } from '../../template/footer/footer.component';\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { UsuarioCreateComponent } from '../usuario-create/usuario-create.component';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { UsuarioUpdateComponent } from '../usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from '../usuario-delete/usuario-delete.component';\n\n\n@Component({\n  selector: 'app-usuario-read',\n  templateUrl: './usuario-read.component.html',\n  styleUrls: ['./usuario-read.component.css']\n})\n\n\nexport class UsuarioReadComponent implements OnInit {\n\n  usuario : Usuario[];\n  userAutenticado : boolean = false; \n  \n  displayedColumns = ['id','nome','login','empresaid','grupoUsuarioid','bloqueado','action']  \n \n  constructor(\n              public dialog : MatDialog,\n              public overlay : Overlay,\n              private serviceEmpresa: ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private _utilService : UtilService, \n              private router : Router,\n\n             ) \n             { }\n\n\n  ngOnInit(): void {\n     this.getUser();\n  }\n  \n\n\n  addUsuario(): void{\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(UsuarioCreateComponent, {\n          width : '700px',\n          height : '820px',\n          scrollStrategy\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de usuários\",true);\n    }\n  }\n\n\n  editarUsuario(id : string): void{\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(UsuarioUpdateComponent, {\n          width : '700px',\n          height : '670px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de usuários\",true);\n    }\n  }\n\n\n  deletarUsuario(id : string): void{\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(UsuarioDeleteComponent, {\n          width : '500px',\n          height : '260px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de usuários\",true);\n    }\n  }\n\n\n  async getUser() {\n      \n      let filtroUsuario = (<HTMLSelectElement>document.getElementById('busca')).value;\n\n      let empId = this._utilService.Sessao().IdEmpresa;\n      let grpId = Number(this._utilService.Sessao().GrupoUsuario);\n      let logado =  Number(this._utilService.Sessao().UsuarioId);\n      this.userAutenticado = grpId == TipoUsuario.Usuario ? false : true;\n  \n      this.serviceUsuario.read(Endpoint.Usuario).subscribe(u =>{\n        u = u;\n        let responseUsuarios = u;\n\n        let usuarioFIltrados = new Array();\n         \n        if (filtroUsuario){\n           \n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const element = responseUsuarios[index];\n              if (element.nome.toLowerCase().includes(filtroUsuario.toLowerCase()))\n                usuarioFIltrados.push(element);\n          }\n          responseUsuarios = new Array();\n          responseUsuarios = usuarioFIltrados;    \n        }\n\n        this.serviceEmpresa.read(Endpoint.Empresa).subscribe(e => {\n          e = e;     \n          let responseEmpresa = e;\n\n          this.usuario = new Array();\n          let empresaID = null;\n          let idEmpresa = null;\n          let IdEmpresaPai = null;\n\n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const usr = responseUsuarios[index];\n            \n                  for (let index = 0; index <  responseEmpresa.length; index++) {\n                    const emp =  responseEmpresa[index];\n                    \n                    if(usr.empresaid == emp.id.toString().trim())\n                    {\n                      empresaID = emp.id;\n                      usr.empresaid = emp.razaoSocial;\n                      usr.grupoUsuarioid = usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpAdm\") ? \"Administrador\"\n                                         : usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpsis\") ? \"Sistema\" \n                                         : usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpUs\") ? \"Usuario\" \n                                         : usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpMs\") ? \"Master\" \n                                         : usr.grupoUsuarioid;\n\n                      idEmpresa = emp.id;\n                      IdEmpresaPai = emp.empresaPai;\n                      \n                        if(grpId == TipoUsuario.Administrador)\n                        {\n                          this.usuario.push(usr);\n                            break;  \n                          }\n                          else if(grpId == TipoUsuario.Master)\n                          { \n                            if(idEmpresa == empId || IdEmpresaPai == empId && usr.grupoUsuarioid != \"Administrador\")\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                          }\n                          else if(grpId == TipoUsuario.Usuario)\n                          { \n                            \n                            if(idEmpresa == empId && usr.id == logado)\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                            \n                          }\n\n                        }\n                  }\n          }\n      })\n  })\n   \n  \n }\n  \n\n}\n\n\n\n","\n<div>\n   <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n    \n    <span (click)=\"getUser()\">\n      <i class=\"material-icons\">search</i>\n    </span>\n</div>\n<div>\n  <span (click)=\"addUsuario()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"usuario\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Nome -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n\n        <!-- Login -->\n        <ng-container matColumnDef=\"login\">\n            <th mat-header-cell *matHeaderCellDef>Login</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.login}}</td>\n        </ng-container> \n\n\n        <!-- Empresa -->\n        <ng-container matColumnDef=\"empresaid\">\n          <th mat-header-cell *matHeaderCellDef>Empresa</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.empresaid}}</td>\n      </ng-container> \n       \n      <ng-container matColumnDef=\"grupoUsuarioid\">\n        <th mat-header-cell *matHeaderCellDef>Tipo de Usuário</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.grupoUsuarioid}}</td>\n    </ng-container> \n\n\n <!-- status -->\n <ng-container matColumnDef=\"bloqueado\">\n  <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n    <td mat-cell *matCellDef=\"let row\">\n      <div *ngIf=\"row.bloqueado\" >\n        <i class=\"material-icons\">\n          lock\n        </i>\n      </div>\n      <div *ngIf=\"!row.bloqueado\" >\n        <i class=\"material-icons\">  \n          lock_open\n        </i>\n      </div>\n    </td>\n  </ng-container>\n\n\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n      \n         \n          <a (click)=\"editarUsuario(row.id )\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            \n            <a *ngIf=\"userAutenticado\" (click)=\"deletarUsuario(row.id)\"  class=\"delete\">\n              \n                <i class=\"material-icons\">\n                    delete \n                           \n                </i>\n              \n            </a>\n           \n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\">teste</tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n      \n\n    </table>\n\n</div>\n","import { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UsuarioReadComponent } from '../usuario-read/usuario-read.component';\n\n\n\n@Component({\n  selector: 'app-usuario-update',\n  templateUrl: './usuario-update.component.html',\n  styleUrls: ['./usuario-update.component.css']\n})\nexport class UsuarioUpdateComponent implements OnInit {\n\n  empresa : Empresa[];\n  dadosEmpresa : Empresa;\n  usuario : Usuario ;\n  userAutenticado : boolean = false; \n  \n  comboTipousuario = [];\n  UsuarioReadComponent: any;\n\n\n  constructor(private usarioService : ServiceAllService<Usuario>,\n             private empresaService : ServiceAllService<Empresa>,\n             private utilService: UtilService,\n             private router : Router,\n             public dialogRef : MatDialogRef<UsuarioUpdateComponent>,\n             ) { }\n\n  ngOnInit(): void {\n    this.buscarUsuario();\n    this.buscarEmpresa();\n\n  }\n\n  updateUsuario() : void {\n  \n        let grpId = Number(localStorage.getItem(\"grpUs\"));\n        this.usuario.grupoUsuarioid = this.usuario.grupoUsuarioid == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                        :this.usuario.grupoUsuarioid == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                        : this.usuario.grupoUsuarioid == \"Usuario\" ? TipoUsuario.Usuario.toString()\n                                        : this.usuario.grupoUsuarioid == \"Master\" ? TipoUsuario.Master.toString()\n                                        : null \n          \n            this.usarioService.read(Endpoint.Usuario).subscribe(user => {\n              user = user;\n                                    \n              let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaid == this.usuario.empresaid && x.id == this.usuario.id);\n          \n                if (ativo.length > 0 )\n                {\n                    this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                      this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                      this.fecharPopup();\n                      this.utilService.atualizaRota(\"usuario\");\n                    })\n                    user =  new Array();\n                  }else if(grpId == TipoUsuario.Administrador){\n                      \n                    this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                        this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                        this.fecharPopup();\n                        this.utilService.atualizaRota(\"usuario\", true);\n                        \n                      })\n                      user =  new Array();\n                  }else{\n\n                    this.utilService.showMessage('A empresa do Usuário não pode ser Alterada', false);\n                    this.usuario.login =  null; \n                    user =  new Array();\n                }\n            })\n\n  }\n\n  buscarEmpresa() {\n    \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.empresaService.read(Endpoint.Empresa).subscribe(emp => {\n      emp = emp;\n\n      this.empresa =  new Array()\n\n       grpId==TipoUsuario.Administrador ? this.empresa = emp : \n                      grpId == TipoUsuario.Master && emp.filter(x => x.id == Number(empId))\n                      || grpId == TipoUsuario.Usuario && emp.filter(x => x.id == Number(empId))\n                      || emp.filter(x => x.empresaPai == Number(empId));\n                   \n    \n      \n    /*  emp.forEach(empresasCarregadas => {\n        \n        if(grpId == TipoUsuario.Administrador)\n          this.empresa.push(empresasCarregadas)\n        else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.id.toString() || grpId == TipoUsuario.Usuario && empId == empresasCarregadas.id.toString() || empId == empresasCarregadas.empresaPai.toString())\n            this.empresa.push(empresasCarregadas)\n        });\n      */  \n\n    });\n  }\n\n  buscarUsuario(){\n\n      this.usarioService.readById(this.dialogRef.id, Endpoint.Usuario).subscribe(usuario => {\n      this.usuario = usuario;\n\n      let tipousuario = usuario.grupoUsuarioid;\n      this.usuario.grupoUsuarioid = this.usuario.grupoUsuarioid == TipoUsuario.Administrador.toString() ? \"Administrador\"\n                                   :this.usuario.grupoUsuarioid == TipoUsuario.Sistema.toString()  ? \"Sistema\"\n                                   : this.usuario.grupoUsuarioid == TipoUsuario.Usuario.toString()  ? \"Usuario\" \n                                   : this.usuario.grupoUsuarioid == TipoUsuario.Master.toString()  ? \"Master\" \n                                   : null \n     \n     this.carregarComboTipoUsuario(this.usuario.grupoUsuarioid, tipousuario); \n    });\n  }\n\n  carregarComboTipoUsuario(usuario : string, tipousuario : string) : void  {\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    \n      for (var tipo in TipoUsuario) {\n      \n           if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n    \n              this.comboTipousuario.push(tipo)\n              \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n    \n            if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                this.comboTipousuario.push(tipo);\n          \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Usuario ){\n      \n              if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                  this.comboTipousuario.push(tipo);\n            \n            }\n      }\n  }\n\n  fecharPopup(): void{\n    this.dialogRef.close();\n  }\n\n\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioid\" placeholder=\"GrupoUsuarioID\">\n                         <mat-option *ngFor=\"let tipo of comboTipousuario\" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaid\" placeholder=\"EmpresaID\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"status\" [(ngModel)]=\"usuario.bloqueado\" [checked]=\"usuario.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Profissional\">\n                    <input name=\"profissional\" [(ngModel)]=\"usuario.profissional\" [checked]=\"usuario.profissional\" type=\"checkbox\">\n            </mat-form-field>\n\n      \n        </form>\n\n        <button *ngIf=\"usuario.nome && usuario.login && usuario.grupoUsuarioid && usuario.empresaid\" mat-raised-button (click)=\"updateUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>usuario works!</p>\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","export class Agenda {\r\n    id ?: string\r\n    DtCriacao: Date \r\n    nomeAgenda: string\r\n    profissionalid: string\r\n    Empresaid: number\r\n    unidadeid: string\r\n    salaid: string\r\n    substituicao: Boolean\r\n    grupoAgendaid: string\r\n    vigenciaInicio: Date\r\n    vigenciaFim: Date\r\n    considerarFeriado: Boolean\r\n    bloqueado: Boolean\r\n}\r\n\r\n","export class GrupoAgenda {\r\n\r\n    id? : number\r\n    dtCriacao : Date\r\n    nomeGrupoAgenda : string\r\n    empresaid : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n}","import { Time } from \"@angular/common\"\r\n\r\nexport class HorarioAgenda{\r\n    id: number\r\n    dtCriacao : Date\r\n    id_agenda : number\r\n    id_empresa : number\r\n    intervalo : string\r\n    tipoHorario : number\r\n    diaDasemana : number\r\n    hora : string\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n    naoDisponivel : boolean\r\n    horainicio : Time\r\n    horafim : Time\r\n}","\r\n\r\nexport class Sala {\r\n    id? : null\r\n    dtCriacao : Date\r\n    nomeSala     : string\r\n    empresaid : number\r\n    unidadeid : number\r\n    criadoPor : number\r\n    ativo : boolean\r\n}","export class Unidade {\r\n    id? : number\r\n    dtCriacao : Date\r\n    nomeUnidade : string\r\n    empresaid : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n}","export class Acesso{\r\n    login : string\r\n    senha : string\r\n    nome : string\r\n}","export class Product {\r\n    id ?: number\r\n    dtCriacao : Date\r\n    criadoPor : number\r\n    nome: string\r\n    valor : number\r\n    empresaid : string\r\n    bloqueado : boolean\r\n}","export class GrupoUsuario{\r\n    id? : number\r\n    dtCriacao : Date\r\n    nome : string\r\n    usuarioApp : boolean\r\n    empresaId : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n\r\n}","import { convertActionBinding, ConvertActionBindingResult } from '@angular/compiler/src/compiler_util/expression_converter';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport enum TipoUsuario {\r\n    \r\n    Administrador =  Number(localStorage.getItem(\"grpUsGrpAdm\")),\r\n    Sistema = Number(localStorage.getItem(\"grpUsGrpsis\")),\r\n    Usuario = Number(localStorage.getItem(\"grpUsGrpUs\")),\r\n    Master = Number(localStorage.getItem(\"grpUsGrpMs\")),\r\n}\r\n\r\nexport const TipoUsuarioSistema = new Map<string, number>([\r\n['Administrador', Number(localStorage.getItem(\"grpUsGrpAdm\"))],\r\n['Sistema', Number(localStorage.getItem(\"grpUsGrpsis\"))],\r\n['Usuario', Number(localStorage.getItem(\"grpUsGrpUs\"))],\r\n['Master', Number(localStorage.getItem(\"grpUsGrpMs\"))]\r\n])\r\n","export class Usuario {\r\nid ? : number\r\ndtCriacao : Date\r\nnome : string\r\nlogin : string\r\nsenha : string\r\ncracha : string\r\nbolSistema: boolean\r\nbolResetaSenha : boolean\r\ndataTrocaSenha : Date\r\ncriadoPor : number\r\nbloqueado : boolean\r\nempresaid : string\r\ngrupoUsuarioid : string\r\nprofissional : boolean\r\n}\r\n","import { GrupoUsuario } from './../models/usuarios/GrupoUsuarios';\nimport { ServiceAllService } from './service-all.service';\nimport { Endpoint } from './../Negocio/Endpoint';\nimport { TipoUsuario, TipoUsuarioSistema } from './../models/usuarios/enumUsuarios';\nimport { ObjetoToken } from './../models/Token/ObjetoToken';\nimport { Empresa } from './../models/empresa/ModelEmpresa';\nimport { Acesso } from '../models/acessoModel';\nimport { UtilService } from './util.service';\n\nimport { environment } from './../../environments/environment';\n\nimport { map, catchError, take, retry } from 'rxjs/operators';\nimport { Observable, EMPTY, from, empty, pipe } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\nimport { stringify } from 'querystring';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\nimport { STRING_TYPE } from '@angular/compiler';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n  acesso : Acesso = new Acesso();\n  objetoToken : ObjetoToken []\n\n  private tipoUsuarios = [];\n\n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n  \n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService,\n               \n              ) { \n                this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL;\n              }\n\n  async logarSistema(acesso: Acesso) {\n    \n    try {\n      let response = await this.http.post<ObjetoToken>(this.environmentUrl + Endpoint.Token, acesso).toPromise()\n     \n\n       if (response != null && !response.bloqueado && !response.statusEmpresa && !response.erroLogin )\n          {\n\n            this.mostrarMenuEmitter.emit(true);\n            this.mostrarLoginEmitter.emit(false)\n            this.usuarioAutenticado = true;\n            this.router.navigate(['/']);\n\n            localStorage.setItem(\"tId\", response.token )\n            localStorage.setItem(\"usId\", response.id)\n            localStorage.setItem(\"grpUs\", response.grupoUsuarioid)\n           \n            localStorage.setItem(\"stUs\", response.bloqueado);\n            localStorage.setItem(\"empId\", response.empresaid);\n            this.utilService.showMessage(\"Seja Bem Vindo!  \" + acesso.login , false);\n\n            response.gruposUsuarios.forEach(element => {\n\n              if (element.nome == \"Administrador\")\n                  localStorage.setItem(\"grpUsGrpAdm\", element.id.toString())\n              else if (element.nome == \"Sistema\")\n                  localStorage.setItem(\"grpUsGrpsis\", element.id.toString())\n              else if (element.nome == \"Usuario\")\n                  localStorage.setItem(\"grpUsGrpUs\", element.id.toString())\n              else if (element.nome == \"Master\")\n                  localStorage.setItem(\"grpUsGrpMs\", element.id.toString())\n            });\n            \n          }\n          else\n          {\n            this.usuarioAutenticado = false;\n            this.mostrarMenuEmitter.emit(false);\n            this.mostrarLoginEmitter.emit(true);\n            \n            if (response.bloqueado)\n              this.utilService.showMessage(\"Usuário bloqueado!\", true);\n            else if (response.statusEmpresa)\n              this.utilService.showMessage(\"Empresa bloqueada!\", true);\n            else \n              this.utilService.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n      \n      } catch (e) {\n     \n          this.utilService.showMessage(\"Erro de acesso a API\" + e.message, true);\n      }\n    \n  }\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n    localStorage.removeItem(\"tId\");\n    localStorage.removeItem(\"usId\");\n    localStorage.removeItem(\"grpUs\");\n    localStorage.removeItem(\"stUs\");\n    localStorage.removeItem(\"empId\");\n    this.utilService.showMessage(\"Até logo! \", false);\n    this.router.navigate(['/login']);\n  }\n\n  header(){\n    var reqHeader = new HttpHeaders({ \n        'Content-Type' : 'application/json; charset=utf-8',\n        'Accept'       : 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('tId')\n    })\n    return { headers: reqHeader };\n  }\n\n  TipoUsuarioSistema(){\n    \n    TipoUsuarioSistema.forEach(element => {\n      this.tipoUsuarios.push(element)\n    });\n   return this.tipoUsuarios;\n  }\n  \n}\n\n\n\n\n\n","import { LoginService } from 'src/app/services/login.service';\n\nimport { UtilService } from './util.service';\nimport { environment } from '../../environments/environment';\nimport { Component } from '@angular/core';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from '../models/produtos/product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n   \nconstructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              \n             ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL + '/Produto';\n             }\n\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.environmentUrl, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`\n\n      return this.http.get<Product>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto \n   update(product: Product): Observable<Product> {    \n    return this.http.put<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Product>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n\n   }\n\n}\n","import { map, catchError, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UtilService } from './util.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAllService <T>{\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(\n    private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              ) {\n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.BASE_URL;\n              }\n\n\n    //Criar Cadastro\n    create(T : T, tipo: string) : Observable <T>{\n      return this.http.post<T>(this.environmentUrl + tipo , T, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Buscar todos Get All\n    read(tipo: string): Observable<T[]>{\n      return this.http.get<T[]>(this.environmentUrl + tipo, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n    //Buscar um cadastro por id\n    readById(id: string, tipo: string): Observable<T>{\n    const url = `${this.environmentUrl + tipo}/${id}`\n\n      return this.http.get<T>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Atualizar Produto \n    update(T: T, tipo: string): Observable<T> {    \n    return this.http.put<T>(this.environmentUrl + tipo, T, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    delete(id: number, tipo : string) : Observable<T>{\n      const url = `${this.environmentUrl + tipo}/${id}`      \n      return this.http.delete<T>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n\n    }\n\n}\n","import { HeaderService } from './../components/template/header/header.service';\nimport { ObjetoToken } from './../models/Token/ObjetoToken';\n\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Component, EventEmitter, Injectable } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TipoUsuario } from '../models/usuarios/enumUsuarios';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { MatDialog } from '@angular/material/dialog';\nimport { isNull } from '@angular/compiler/src/output/output_ast';\nimport { isNullOrUndefined } from 'util';\nimport { Output } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(private snackbar : MatSnackBar,\n             private http : HttpClient,\n             private headerService : HeaderService,\n             private router : Router,\n             public overlay : Overlay,\n             public dialog : MatDialog,\n             ) { }\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n\n}\n\n  erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY \n  }\n\n  convertToBase64(txt : string){\n    return btoa(txt);\n  }\n\n  convertBase64toText(txt: string){\n    return atob(txt);\n\n  }\n\n  AtualizarMenu(titulo : string, icone : string, urlIcone : string ) {\n      this.headerService.headerData.title = titulo ;\n      this.headerService.headerData.icon = icone\n      this.headerService.headerData.routeUrl = urlIcone\n  \n  }\n\n  Sessao(){\n    \n    let chaveEntrada = this.convertBase64toText(\"123\");\n    \n    var dados =  {\n        IdEmpresa : localStorage.getItem(\"empId\"),\n        GrupoUsuario : Number(localStorage.getItem(\"grpUs\")),\n        UsuarioId : Number(localStorage.getItem(\"usId\")),\n        StatusUsuario : localStorage.getItem(\"stUs\"),\n        TokenSessao : chaveEntrada \n\n    }\n    return dados\n  }\n\n\n  atualizaRota(rota : string, reload : boolean = false) {\n      \n    if (reload) {\n        this.router.navigateByUrl('', { skipLocationChange: true }).then(() => {\n          this.router.navigate([rota]);\n          reload = false;\n        });\n      }\n  \n    }\n\n  Popup(id : string, T : any, largura : string, altura: string ) {\n   \n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n    const dialogRef = this.dialog.open(T, {\n        width : largura,\n        height : altura,\n        scrollStrategy,\n        id\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(`Dialog result: ${result}`);\n      \n      });\n\n  }\n\n}","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-crud',\n  templateUrl: './chamado-crud.component.html',\n  styleUrls: ['./chamado-crud.component.css']\n})\nexport class ChamadoCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToChamadoCreate():void{\n    this.router.navigate(['chamados/read'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToChamadoCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-chamado-read></app-chamado-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToEmpresaCreate() : void {\n    this.router.navigate(['empresa/create'])\n  }\n\n\n}\n","<app-empresa-read></app-empresa-read>\n\n","import { UtilService } from './../../services/util.service';\nimport { TipoUsuario } from './../../models/usuarios/enumUsuarios';\nimport { Endpoint } from './../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ok } from 'assert';\nimport { Product } from 'src/app/models/produtos/product.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\nprodutos : Product[];\n\n\n  constructor(private serviceProdutos : ServiceAllService<Product>,\n              private headerService : HeaderService,\n              private utilService : UtilService\n              ) \n              {\n               // this.headerService.headerData = {\n               //  title : 'Início',\n              //    icon : 'home',\n              //    routeUrl : ''\n               // }\n              }\n\n  ngOnInit(): void {\n    this.ObterComponentes();\n    this.utilService.AtualizarMenu(\"Início\",\"home\",'');\n  }\n  \n  \n  ObterComponentes(){\n     \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.serviceProdutos.read(Endpoint.Produto).subscribe(prod => {\n      prod = prod;\n\n      this.produtos = new Array();\n        prod.forEach(element => {\n          if (empId == element.empresaid)\n              this.produtos.push(element)\n        });\n    });\n  }\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n</mat-card>\n\n<div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"10%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\"  *ngFor=\"let prod of produtos\">\n        <mat-card  class=\"tamanhoCard\">\n            <mat-card-header></mat-card-header>\n                <mat-card-title>\n                    {{prod.nome}} \n                    <a *ngIf=\"!prod.bloqueado\" mat-list-item routerLink=\"{{prod.nome}}\" >\n                        <i class=\"material-icons\" >\n                            schedule\n                        </i>\n                    </a>\n                    <a *ngIf=\"prod.bloqueado\" >\n                        <i class=\"material-icons\" >\n                            block\n                        </i>\n                    </a>\n                </mat-card-title>\n            <mat-card-footer  >\n            </mat-card-footer>\n\n        </mat-card>\n      </div>\n    </div>\n  </div>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router,\n             private headerService : HeaderService\n             ) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<app-product-read></app-product-read>\n\n","import { stringify } from 'querystring';\nimport { query } from '@angular/animations';\nimport { UsuarioReadComponent } from './../../components/usuario/usuario-read/usuario-read.component';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { Endpoint } from './../../Negocio/Endpoint';\nimport { UsuarioService } from './../../services/usuario.service';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-usuario-crud',\n  templateUrl: './usuario-crud.component.html',\n  styleUrls: ['./usuario-crud.component.css']\n})\nexport class UsuarioCrudComponent implements OnInit {\n\n  constructor(\n              private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  \n}\n","<app-usuario-read></app-usuario-read>\n\n\n\n\n\n","export const environment = {\n  production: false,\n  environmentName: \"QA\",\n  apiUrl:  'http://localhost:5000',\n  BASE_URL : '/api'\n\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}