{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.conponent.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/product/product-create/product-create.component.ts","webpack:///src/app/components/product/product-create/product-create.component.html","webpack:///src/app/components/product/product-delete/product-delete.component.ts","webpack:///src/app/components/product/product-delete/product-delete.component.html","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","webpack:///src/app/components/product/product-read/product-read.component.ts","webpack:///src/app/components/product/product-read/product-read.component.html","webpack:///src/app/components/product/product-update/product-update.component.ts","webpack:///src/app/components/product/product-update/product-update.component.html","webpack:///src/app/components/product/product.service.ts","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/components/template/header/header.service.ts","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/diretivas/red.directive.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.service.ts","webpack:///src/app/login/modelLogin.ts","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/product-crud/product-crud.component.ts","webpack:///src/app/views/product-crud/product-crud.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","authService","nome","mostrarMenu","mostrarlogin","mostrarMenuEmitter","subscribe","mostrar","mostrarLoginEmitter","mostrarLogin","selector","templateUrl","AppModule","provide","useValue","declarations","providers","bootstrap","ProductCreateComponent","ProductService","router","product","name","price","create","showMessage","navigate","createProduct","cancel","styleUrls","ProductDeleteComponent","productService","route","snapshot","paramMap","get","readById","deleteProduct","EXAMPLE_DATA","ProductReadTableprodutosDataSource","data","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","ProductReadTableprodutosComponent","displayedColumns","dataSource","table","ProductReadComponent","read","products","console","log","ProductUpdateComponent","update","updateProduct","snackbar","http","baseUrl","msg","isErro","open","duration","horizontalPosition","verticalPosition","panelClass","post","obj","erroHandler","url","put","providedIn","FooterComponent","HeaderComponent","headerService","headerData","title","icon","routeUrl","HeaderService","_headerData","value","next","NavComponent","auth","sairSistema","RedDirective","el","nativeElement","style","color","LoginComponent","authservice","usuario","buscarUsuario","usuariosSistema","forEach","element","login","senha","loginTemp","passwordTemp","logarSistema","LoginService","UrlUsuario","usuarioAutenticado","emit","Usuario","HomeComponent","ProductCrudComponent","navigateToProductsCreate","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { LoginComponent } from './login/login.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nconst routes: Routes = [\n  {\n    path : \"\",\n    component:HomeComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"products\",\n    component: ProductCrudComponent\n  },\n  {\n    path: \"products/create\",\n    component : ProductCreateComponent\n  },\n  {\n    path: \"products/update/:id\",\n    component : ProductUpdateComponent\n  },\n  {\n    path: \"products/delete/:id\",\n    component : ProductDeleteComponent\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { LoginService } from './login/login.service';\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './login/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './login/login.component';\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    \n\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Product } from './../product.model';\nimport { ProductService } from './../product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n    product : Product = {\n    name : '',\n    price : null\n    \n    }\n    \n\n\n  constructor(private ProductService : ProductService,\n              private router : Router ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  createProduct() : void {\n\n      this.ProductService.create(this.product).subscribe(() => {\n      \n        this.ProductService.showMessage('Produto Criado!');\n      \n        this.router.navigate(['products']);\n      \n    })\n    \n  }\n\n  cancel() : void {\n\n    this.router.navigate(['products'])\n  }\n\n  \n  \n\n}\n","<mat-card>\n    <mat-card-title>Novo Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.name\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.price\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"createProduct()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../product.service';\nimport { Product } from './../product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product;\n  \n  constructor(private productService : ProductService,\n              private router : Router,\n              private route : ActivatedRoute ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n  deleteProduct():void{\n  \n    \n      \n      this.productService.delete(this.product.id).subscribe(() => {\n        this.productService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.router.navigate(['/products'])\n      })\n    \n  }\n\n  cancel():void{\n    this.router.navigate(['/products'])\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                 [value]=\"product.name\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\" disabled\n                [value]=\"product.price\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { ProductService } from './../product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\ndisplayedColumns = ['id', 'imagem' ,'name', 'price', 'action']  \n\n  constructor(private productService : ProductService) { }\n\n  ngOnInit(): void {\n    \n    \n      this.productService.read().subscribe(products => {\n        this.products = products;\n        console.log(products)\n      })\n    \n    \n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n      </ng-container>\n      \n      <!-- Name Price -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.price | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/products/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>","import { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../product.service';\nimport { Product } from './../product.model';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\n\n  product: Product = {\n    id: null,\n    name: null,\n    price: 0\n  }\n\n  constructor(private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n\n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n\n  updateProduct(): void {\n    this.productService.update(this.product).subscribe(() => {\n      this.productService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.router.navigate(['/products'])\n    })\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.name\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.price\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { map, catchError } from 'rxjs/operators';\nimport { Product } from './product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  baseUrl = \"http://localhost:3001/products\";\n\n  constructor(private snackbar : MatSnackBar,\n              private http : HttpClient\n             ) { }\n\n    showMessage(msg : string, isErro: boolean = false) : void { \n        this.snackbar.open(msg, 'X' , { \n          duration : 3000,\n          horizontalPosition: \"right\",\n          verticalPosition : \"top\",\n          panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n        })\n\n    }\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.baseUrl, product).pipe(\n        map(obj => obj),\n        catchError(e => this.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.baseUrl).pipe(\n        map(obj => obj),\n        catchError(e => this.erroHandler(e))\n      );\n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.baseUrl}/${id}`      \n      return this.http.get<Product>(url).pipe(\n        map(obj => obj),\n        catchError(e => this.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto por ID\n   update(product: Product): Observable<Product> {\n    const url = `${this.baseUrl}/${product.id}`      \n    return this.http.put<Product>(url, product).pipe(\n      map(obj => obj),\n      catchError(e => this.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.baseUrl}/${id}`      \n    return this.http.delete<Product>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.erroHandler(e))\n    );\n\n   }\n    \n   erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY  \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/login/login.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(private auth: LoginService) { }\n\n  ngOnInit(): void {\n  \n  }\n\n  sairSistema(){\n    \n    this.auth.sairSistema();\n    \n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" opened\n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" >\n            <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n                \n            \n                    <a mat-list-item routerLink=\"products\">\n                        <i class=\"material-icons\">\n                            storefront\n                        </i>\n                        Produtos\n\n                    </a>\n           \n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","import { Router } from '@angular/router';\nimport { Usuario } from './modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\npublic usuario: Usuario = new Usuario();\n\nusuariosSistema: Usuario[]\n\nconstructor(private router :Router,\n             private authservice : LoginService\n            \n             ) { }\n\n  ngOnInit(): void {\n  \n  }\n  \n  logarSistema(){\n    \n    this.authservice.buscarUsuario().subscribe(usuariosSistema => {\n      this.usuariosSistema = usuariosSistema;\n      //console.log(usuariosSistema);\n\n      usuariosSistema.forEach(element => {\n        \n        if(element.login === this.usuario.login  && element.senha == this.usuario.senha)\n        {\n          this.usuario.loginTemp = element.login;\n          this.usuario.passwordTemp = element.senha\n\n          this.usuario.loginTemp =  (this.usuario.loginTemp);\n          this.authservice.logarSistema(this.usuario);\n          this.usuario === null;\n\n        }\n        else{\n          this.authservice.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n\n      });\n\n  });\n\n  }\n\n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"usuario.login\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"usuario.senha\" type=\"password\" name=\"senha\">\n\n            </mat-form-field>\n        </form>\n\n        <button mat-raised-button (click)=\"logarSistema()\" color=\"primary\" > \n            Login\n        </button>\n        \n\n</mat-card>        \n","import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Usuario } from './modelLogin';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  UrlUsuario = \"http://localhost:3001/usuarios\"\n  \n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient\n              ) { }\n\n\n  logarSistema(usuario: Usuario) {\n\n\n    if(usuario.login === usuario.loginTemp &&\n      usuario.senha === usuario.passwordTemp){\n        this.usuarioAutenticado = true;\n\n        this.mostrarMenuEmitter.emit(true);\n        this.mostrarLoginEmitter.emit(false)\n        this.router.navigate(['/']);\n        this.showMessage(\"Seja Bem Vindo!  \" + usuario.login , false);\n      }else{\n        this.usuarioAutenticado = false;\n        this.mostrarMenuEmitter.emit(false);\n        this.mostrarLoginEmitter.emit(true)\n        this.showMessage(\"Usuário ou senha Inválido!\", true);\n    }\n  }\n\n  buscarUsuario(): Observable<Usuario[]>{\n    return this.http.get<Usuario[]>(this.UrlUsuario);\n  }\n\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n\n    this.router.navigate(['/login']);\n    this.showMessage(\"Até logo! \", false);\n  }\n\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n    \n    \n\n}\n\n\n}\n\n\n\n\n\n","export class Usuario {\r\n    login : string\r\n    senha : string\r\n    dominio : string\r\n    loginTemp : string\r\n    passwordTemp : string\r\n}","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService :HeaderService) {\n    this.headerService.headerData = {\n      title : 'Início',\n      icon : 'home',\n      routeUrl : ''\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n    <mat-card-subtitle>\n            Sistema para exemplificar o cadastro em angular! \n    </mat-card-subtitle>\n\n</mat-card>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router, private headerService : HeaderService) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<button mat-raised-button (click)=\"navigateToProductsCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-product-read></app-product-read>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}