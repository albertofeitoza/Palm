{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.conponent.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.html","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.ts","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.html","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.ts","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.html","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.ts","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.html","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.ts","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.html","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.ts","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.html","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.ts","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.html","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.ts","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/product/product-create/product-create.component.ts","webpack:///src/app/components/product/product-create/product-create.component.html","webpack:///src/app/components/product/product-delete/product-delete.component.ts","webpack:///src/app/components/product/product-delete/product-delete.component.html","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","webpack:///src/app/components/product/product-read/product-read.component.ts","webpack:///src/app/components/product/product-read/product-read.component.html","webpack:///src/app/components/product/product-update/product-update.component.ts","webpack:///src/app/components/product/product-update/product-update.component.html","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/components/template/header/header.service.ts","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.ts","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.html","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.ts","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.html","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.ts","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.html","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.ts","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.html","webpack:///src/app/components/usuario/usuario.component.ts","webpack:///src/app/components/usuario/usuario.component.html","webpack:///src/app/diretivas/red.directive.ts","webpack:///src/app/models/acessoModel.ts","webpack:///src/app/models/modelLogin.ts","webpack:///src/app/services/empresa.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/service-all.service.ts","webpack:///src/app/services/usuario.service.ts","webpack:///src/app/services/util.service.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.html","webpack:///src/app/views/empresa/empresa.component.ts","webpack:///src/app/views/empresa/empresa.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/product-crud/product-crud.component.ts","webpack:///src/app/views/product-crud/product-crud.component.html","webpack:///src/app/views/usuario-crud/usuario-crud.component.ts","webpack:///src/app/views/usuario-crud/usuario-crud.component.html","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","authService","nome","mostrarMenu","mostrarlogin","mostrarMenuEmitter","subscribe","mostrar","mostrarLoginEmitter","mostrarLogin","selector","templateUrl","AppModule","provide","useValue","declarations","providers","bootstrap","ChamadoCreateComponent","styleUrls","ChamadoDeleteComponent","ChamadoReadComponent","ChamadoUpdateComponent","EmpresaCreateComponent","utilService","router","servicoEmpresa","empresa","Id","DtCriacao","Cnpj","RazaoSocial","NomeFantasia","InscricaoEstadual","InscricaoMunicipal","Cnes","CodPIS","Observacao","CodCnae","EmpresaPai","CriadoPor","Bloqueado","Number","localStorage","getItem","Date","tipo","create","showMessage","navigate","cadastrarEmpresa","cancel","EmpresaDeleteComponent","EmpresaReadComponent","serviceEmpresa","displayedColumns","buscarEmpresa","read","EmpresaUpdateComponent","LoginComponent","authservice","acesso","logarSistema","ProductCreateComponent","ProductService","cadastrarProduto","product","Nome","Preco","EmpresaId","createProduct","ProductDeleteComponent","productService","route","deleteProduto","snapshot","paramMap","get","readById","deleteProduct","EXAMPLE_DATA","name","ProductReadTableprodutosDataSource","data","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","ProductReadTableprodutosComponent","dataSource","table","ProductReadComponent","serviceProduto","products","ProductUpdateComponent","ProdutoService","buscarProduto","update","updateProduct","FooterComponent","HeaderComponent","headerService","headerData","title","icon","routeUrl","HeaderService","_headerData","value","next","providedIn","NavComponent","auth","opened","sairSistema","UsuarioCreateComponent","usuarioService","empresaService","usuario","createUsuario","UsuarioDeleteComponent","Senha","deleteUsuario","UsuarioReadComponent","usuarioRead","forEach","element","ngAfterViewInit","UsuarioUpdateComponent","usarioService","updateUsuario","UsuarioComponent","RedDirective","el","nativeElement","style","color","Acesso","Usuario","EmpresaService","snackbar","http","environmentName","environmentUrl","apiUrl","post","obj","erroHandler","url","put","httpOptions","headers","LoginService","usuarioAutenticado","BASE_URL","toPromise","response","emit","setItem","token","grupoUsuarioId","bloqueado","empresaId","login","removeItem","reqHeader","loginservice","header","ServiceAllService","T","UsuarioService","UtilService","msg","isErro","open","duration","horizontalPosition","verticalPosition","panelClass","txt","btoa","atob","ChamadoCrudComponent","navigateToChamadoCreate","EmpresaComponent","navigateToEmpresaCreate","HomeComponent","ProductCrudComponent","navigateToProductsCreate","UsuarioCrudComponent","navigateToUsuarioCreate","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\n\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\n\n\nconst routes: Routes = [\n  {\n    path : \"\",\n    component:HomeComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"products\",\n    component: ProductCrudComponent\n  },\n  {\n    path: \"products/create\",\n    component : ProductCreateComponent\n  },\n  {\n    path: \"products/update/:id\",\n    component : ProductUpdateComponent\n  },\n  {\n    path: \"products/delete/:id\",\n    component : ProductDeleteComponent\n  },\n  {\n    path: \"usuarios\",\n    component : UsuarioCrudComponent\n  },\n  {\n    path: \"usuarios/create\",\n    component : UsuarioCreateComponent\n  },\n  {\n    path: \"usuarios/update/:id\",\n    component : UsuarioUpdateComponent\n  },\n  {\n    path: \"usuarios/delete/:id\",\n    component : UsuarioDeleteComponent\n  },\n  {\n    path: \"chamados\",\n    component : ChamadoCrudComponent\n  },\n  {\n    path: \"chamados/create\",\n    component : ChamadoCreateComponent\n  },\n  {\n    path: \"chamados/update/:id\",\n    component : ChamadoUpdateComponent\n  },\n  {\n    path: \"chamados/delete/:id\",\n    component : ChamadoDeleteComponent\n  },\n\n  //Rotas de empresa\n  {\n    path: \"empresa\",\n    component : EmpresaComponent\n  },\n  {\n    path: \"empresa/create\",\n    component : EmpresaCreateComponent\n  },\n  {\n    path: \"empresa/update/:id\",\n    component : EmpresaUpdateComponent\n  },\n  {\n    path: \"empresa/delete/:id\",\n    component : ChamadoDeleteComponent\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { LoginService } from '../app/'\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\n\n\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './services/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\n\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs';\n\n\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { UsuarioReadComponent } from './components/usuario/usuario-read/usuario-read.component';\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\nimport { ChamadoReadComponent } from './components/chamados/chamado-read/chamado-read.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaReadComponent } from './components/empresa/empresa-read/empresa-read.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    UsuarioCrudComponent,\n    UsuarioComponent,\n    UsuarioReadComponent,\n    UsuarioCreateComponent,\n    UsuarioDeleteComponent,\n    UsuarioUpdateComponent,\n    ChamadoCrudComponent,\n    ChamadoCreateComponent,\n    ChamadoUpdateComponent,\n    ChamadoDeleteComponent,\n    ChamadoReadComponent,\n    EmpresaComponent,\n    EmpresaCreateComponent,\n    EmpresaUpdateComponent,\n    EmpresaDeleteComponent,\n    EmpresaReadComponent,\n   \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n\n\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-create',\n  templateUrl: './chamado-create.component.html',\n  styleUrls: ['./chamado-create.component.css']\n})\nexport class ChamadoCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-delete',\n  templateUrl: './chamado-delete.component.html',\n  styleUrls: ['./chamado-delete.component.css']\n})\nexport class ChamadoDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-read',\n  templateUrl: './chamado-read.component.html',\n  styleUrls: ['./chamado-read.component.css']\n})\nexport class ChamadoReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-update',\n  templateUrl: './chamado-update.component.html',\n  styleUrls: ['./chamado-update.component.css']\n})\nexport class ChamadoUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-update works!</p>\n","import { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from './../../../services/util.service';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { ContatoService } from './../../../services/contato.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-empresa-create',\n  templateUrl: './empresa-create.component.html',\n  styleUrls: ['./empresa-create.component.css']\n})\nexport class EmpresaCreateComponent implements OnInit {\n\n \nempresa : Empresa = {\n    Id :null,\n    DtCriacao : null,\n    Cnpj: null,\n    RazaoSocial: null,\n    NomeFantasia: null,\n    InscricaoEstadual: null,\n    InscricaoMunicipal: null,\n    Cnes : null,\n    CodPIS : null,\n    Observacao : null,\n    CodCnae : null,\n    EmpresaPai : null,\n    CriadoPor : null,\n    Bloqueado : null\n    \n}\n\n\n\n  constructor(private utilService : UtilService,\n              private router : Router,\n              private servicoEmpresa : ServiceAllService<Empresa>\n              )\n             { }\n\n  ngOnInit(): void {\n   \n  }\n\n  cadastrarEmpresa(){\n    this.empresa.CriadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.empresa.DtCriacao = new Date;\n    const tipo = `${\"/Empresa\"}`\n\n    this.servicoEmpresa.create(this.empresa, tipo).subscribe(() => {\n      this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n    })\n  \n  }\n\n  cancel(){\n    this.router.navigate(['empresa'])\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Empresa\">\n        <section>\n\n        <div class=\"container\">\n\n            <mat-card>\n                <mat-card-title>Nova Empresa</mat-card-title>\n                    <form>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cnpj\" \n                             [(ngModel)]=\"empresa.Cnpj\" name=\"cnpj\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Nome\"\n                            [(ngModel)]=\"empresa.NomeFantasia\" name=\"nomeFantasia\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Razão Social\"\n                            [(ngModel)]=\"empresa.RazaoSocial\" name=\"razaoSocial\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Estadual\"\n                            [(ngModel)]=\"empresa.InscricaoEstadual\" name=\"inscricaoEstadual\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Municipal\"\n                            [(ngModel)]=\"empresa.InscricaoMunicipal\" name=\"inscricaoMunicipal\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"CNES\"\n                            [(ngModel)]=\"empresa.Cnes\" name=\"cnes\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. PIS\"\n                            [(ngModel)]=\"empresa.CodPIS\" name=\"codPIS\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. CNAE\"\n                            [(ngModel)]=\"empresa.CodCnae\" name=\"codCnae\">\n                        </mat-form-field>\n            \n                    </form>\n            \n                    <button mat-raised-button (click)=\"cadastrarEmpresa()\" color=\"primary\" > \n                        Salvar\n                    </button>\n                    \n                    <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n                        Cancelar\n                    </button>\n            </mat-card>\n\n        </div>\n\n        </section>\n</mat-tab>\n<mat-tab label=\"Contato\"> Contatos</mat-tab>\n<mat-tab label=\"Endereços\">Endereços </mat-tab>\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-delete',\n  templateUrl: './empresa-delete.component.html',\n  styleUrls: ['./empresa-delete.component.css']\n})\nexport class EmpresaDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-delete works!</p>\n","import { ServiceAllService } from './../../../services/service-all.service';\nimport { Endereco } from './../../../models/endereco/modelEndereco';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-read',\n  templateUrl: './empresa-read.component.html',\n  styleUrls: ['./empresa-read.component.css']\n})\nexport class EmpresaReadComponent implements OnInit {\n\n  \n  empresa: Empresa[];\n  contato : Contato;\n  endereco : Endereco;\n  displayedColumns = ['id','cnpj', 'razaoSocial','nomeFantasia','inscricaoEstadual','inscricaoMunicipal','action']  \n\n  constructor(private serviceEmpresa : ServiceAllService<Empresa>\n             ) { }\n\n  ngOnInit(): void {\n    \n    this.buscarEmpresa();\n\n  }\n\n  buscarEmpresa(): void {\n    const tipo = `${\"/Empresa\"}`\n    this.serviceEmpresa.read(tipo).subscribe(empresa => {\n      this.empresa = empresa;\n\n  })\n  }\n\n}\n","  <div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"empresa\">\n      <!-- Id Column -->\n      \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"cnpj\">\n        <th mat-header-cell *matHeaderCellDef>Cnpj</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.cnpj}}</td>\n      </ng-container>\n      \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"razaoSocial\">\n        <th mat-header-cell *matHeaderCellDef>Razão Social</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.razaoSocial}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"nomeFantasia\">\n        <th mat-header-cell *matHeaderCellDef>Nome Fantasia</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n      </ng-container>\n\n      <!-- Name Price -->\n      <ng-container matColumnDef=\"inscricaoEstadual\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Estadual</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoEstadual}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"inscricaoMunicipal\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Municipal</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoMunicipal}}</td>\n      </ng-container>\n\n       \n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/empresa/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/empresa/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-update',\n  templateUrl: './empresa-update.component.html',\n  styleUrls: ['./empresa-update.component.css']\n})\nexport class EmpresaUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-update works!</p>\n","import { Acesso } from '../../models/acessoModel';\nimport { UtilService } from './../../services/util.service';\nimport { LoginService } from './../../services/login.service';\n\nimport { Usuario } from '../../models/modelLogin';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\nacesso : Acesso = new Acesso();\n\n\n\nconstructor(private router :Router,\n             private authservice : LoginService,\n             private utilService : UtilService, \n            \n             ) { }\n\n  ngOnInit(): void {\n  \n  }\n  \n  logarSistema(){\n      \n          this.authservice.logarSistema(this.acesso);\n          \n      }    \n\n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"acesso.login\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"acesso.senha\" type=\"password\" name=\"senha\">\n\n            </mat-form-field>\n        </form>\n\n        <button mat-raised-button (click)=\"logarSistema()\" color=\"primary\" > \n            Login\n        </button>\n        \n\n</mat-card>        \n","import { ServiceAllService } from './../../../services/service-all.service';\nimport { Usuario } from 'src/app/models/modelLogin';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\nimport { stringify } from 'querystring';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n    product : Product = {\n    Id : null,  \n    DtCriacao : null,\n    Nome : null,\n    Preco : null,\n    CriadoPor : null,\n    Bloqueado : false,\n    EmpresaId : null\n    }\n\n  constructor(private ProductService : ProductService,\n              private utilService : UtilService,\n              private router : Router,\n              private cadastrarProduto : ServiceAllService<Product>\n               ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  createProduct() : void {\n\n    this.product.CriadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.product.EmpresaId = Number(localStorage.getItem(\"empId\"));\n    this.product.DtCriacao = new Date;\n    this.product.Bloqueado = false;\n    const tipo = `${\"/Produto\"}`\n    this.cadastrarProduto.create(this.product, tipo).subscribe(() => {\n    this.utilService.showMessage('Produto Criado!');\n    this.router.navigate(['products']);\n      \n    })\n    \n  }\n\n  cancel() : void {\n\n    this.router.navigate(['products'])\n  }\n\n  \n  \n\n}\n","<mat-card>\n    <mat-card-title>Novo Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.Nome\" name=\"Nome\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.Preco\" name=\"Preco\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"createProduct()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product = {\n    Id: null,\n    DtCriacao : null,\n    Nome: null,\n    Preco: null,\n    CriadoPor : null,\n    Bloqueado : null,\n    EmpresaId :null\n  }\n\n  constructor(private productService : ProductService,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute,\n              private deleteProduto : ServiceAllService<Product> ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('Id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n  deleteProduct():void{\n      const tipo = `${\"/Produto\"}`\n    //this.productService.delete(this.product.id).subscribe(() => {\n      this.deleteProduto.delete(this.product.Id, tipo).subscribe(() => {\n        this.utilService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.router.navigate(['/products'])\n      })\n    \n  }\n\n  cancel():void{\n    this.router.navigate(['/products'])\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                [(ngModel)]=\"product.Nome\" name=\"Nome\">\n\n            </mat-form-field>\n \n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\" disabled\n                [(ngModel)]=\"product.Preco\" name=\"Preco\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../models/produtos/product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\n\ndisplayedColumns = ['id','nome', 'preco','action']  \n\n  constructor(private serviceProduto : ServiceAllService<Product>\n             ) { }\n\n  ngOnInit(): void {\n       \n      const tipo = `${\"/Produto\"}`;\n      this.serviceProduto.read(tipo).subscribe(products => {\n        this.products = products;\n        \n      })\n    \n    \n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n       <!-- Name Price -->\n       <ng-container matColumnDef=\"preco\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.preco | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/products/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>","\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\nproduct: Product = {\n    Id : null,\n    DtCriacao : null,\n    Nome: null,\n    Preco: null,\n    CriadoPor : null, \n    Bloqueado : null, \n    EmpresaId :null\n    \n  }\n  \n\n  constructor(\n              private router: Router,\n              private utilService : UtilService,\n              private route: ActivatedRoute,\n              private ProdutoService : ServiceAllService<Product>\n              ) { }\n\n\n  ngOnInit(): void {\n    \n    this.buscarProduto();\n   \n  }\n\n  updateProduct(): void {\n    this.product.CriadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.product.EmpresaId = Number(localStorage.getItem(\"empId\"));\n    const tipo = `${\"/Produto\"}`;\n\n      this.ProdutoService.update(this.product, tipo).subscribe(() => {\n      this.utilService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.router.navigate(['/products'])\n    })\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n\n  }\nbuscarProduto() : void {\n\n  const id = this.route.snapshot.paramMap.get('id')\n  const tipo = `${\"/Produto\"}`\n    this.ProdutoService.readById(id, tipo).subscribe(product => {\n        this.product = product;\n    })\n\n}  \n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.Nome\" name=\"Nome\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.Preco\" name=\"Preco\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>\n\n","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\nopened = false;\n  \n  constructor(private auth: LoginService) { }\n\n  ngOnInit(): void {\n  \n  }\n\n  sairSistema(){\n    \n    this.auth.sairSistema();\n    \n  }\n\n \n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" \n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" [(opened)]=\"opened\">\n            <mat-nav-list class=\"nav-list\">\n            \n                <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <!--Menus de cadastro-->    \n            <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menuColor\" >\n                <i class=\"material-icons\">storefront</i>\n                \n                <mat-menu #menu=\"matMenu\">\n                        <a mat-list-item routerLink=\"empresa\" >\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Empresa\n                        </a>\n                        <a mat-list-item routerLink=\"products\" >\n                            <i class=\"material-icons\">\n                                storefront\n                            </i>\n                            Produtos\n                        </a>\n                        <a mat-list-item routerLink=\"chamados\">\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Solicitações\n                        </a>\n                        <a mat-list-item routerLink=\"usuarios\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Usuários\n                        </a>\n\n                        \n                </mat-menu>\n            </button>\n\n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <div *ngIf=\"!opened\">\n            <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                navigate_next \n            </i>\n        </div>\n            \n        <div *ngIf=\"opened\">\n                <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                    navigate_before \n                </i>\n        </div>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from './../../../models/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\n\n\n\n@Component({\n  selector: 'app-usuario-create',\n  templateUrl: './usuario-create.component.html',\n  styleUrls: ['./usuario-create.component.css']\n})\nexport class UsuarioCreateComponent implements OnInit {\n  \nempresa : Observable<Empresa[]>;\ndadosEmpresa : Empresa;\nusuario : Usuario = new Usuario();\n\n  constructor(private usuarioService : UsuarioService,\n              private empresaService :EmpresaService,\n              private utilService : UtilService,\n              private router : Router) { }\n\n  ngOnInit(): void {\n      this.buscarEmpresa();\n  }\n  createUsuario() : void {\n    this.usuarioService.create(this.usuario).subscribe(() => {\n      this.utilService.showMessage('Usuário Criado!');\n      this.router.navigate(['usuarios']);\n    })\n\n  }\n  cancel() : void {\n\n    this.router.navigate(['usuarios'])\n  }\n\n  buscarEmpresa() {\n    this.empresa = this.empresaService.read();\n  }\n}\n","<mat-card>\n    <mat-card-title>Novo Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.Nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.contato.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.contato.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.Login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.Senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.EmpresaId\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa | async\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        \n            </form>\n\n        <button mat-raised-button (click)=\"createUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/modelLogin';\n\n@Component({\n  selector: 'app-usuario-delete',\n  templateUrl: './usuario-delete.component.html',\n  styleUrls: ['./usuario-delete.component.css']\n})\nexport class UsuarioDeleteComponent implements OnInit {\nempresa : Empresa\nusuario : Usuario;\n\n  constructor(private usuarioService : UsuarioService,\n              private empresaService : EmpresaService,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.usuarioService.readById(id).subscribe(usuario => {\n      this.usuario = usuario;\n      \n      this.buscarEmpresa().subscribe(empresa =>{\n        this.empresa = empresa;\n        this.usuario.EmpresaId = this.empresa.NomeFantasia;\n        this.usuario.Senha = '******';\n      });\n    })\n  }\n\n  deleteUsuario(): void{\n      this.usuarioService.delete(this.usuario.Id).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Excluído com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n  }\n  cancel():void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa(){\n    return this.empresaService.readById(this.usuario.EmpresaId);\n  }\n}\n","Search\n\n<mat-card>\n    <mat-card-title>Novo Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.contato.nome\" name=\"nome\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.contato.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.contato.telefone.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.Login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(value)]=\"usuario.Senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"usuario.EmpresaId\" name=\"empresaId\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteUsuario()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Usuario } from 'src/app/models/modelLogin';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n\n@Component({\n  selector: 'app-usuario-read',\n  templateUrl: './usuario-read.component.html',\n  styleUrls: ['./usuario-read.component.css']\n})\nexport class UsuarioReadComponent implements OnInit {\n  usuario: Usuario[]\n  empresa: Empresa\n  displayedColumns = ['id','nome','email','telefone','login', 'senha', 'empresaId','action']  \n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<UsuarioReadComponent>;\n  dataSource: UsuarioReadComponent;\n\n\n  \n  constructor(private usuarioService: UsuarioService,\n              private empresaService: EmpresaService,\n              private usuarioRead : ServiceAllService<Usuario>\n             ) \n             { }\n\n  ngOnInit(): void {\n    \n    const tipo = `${\"Usuario\"}`\n    this.usuarioRead.read(tipo).subscribe(usuario => {\n      this.usuario = usuario;\n      \n      usuario.forEach(element => {\n        const tipo = `${\"Usuario\"}`\n        this.usuarioRead.readById(element.EmpresaId, tipo ).subscribe(empresa => {\n          this.empresa = this.empresa;\n          element.EmpresaId  = this.empresa.RazaoSocial;\n          element.Senha = '******';\n        });\n        \n\n      });\n      \n    \n    })\n    this.ngAfterViewInit();\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"usuario\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Nome -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n      <!-- email -->\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef>E-mail</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.email}}</td>\n      </ng-container>\n\n        <!-- telefone -->\n        <ng-container matColumnDef=\"telefone\">\n            <th mat-header-cell *matHeaderCellDef>Tel:</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.telefone}}</td>\n        </ng-container>\n\n        <!-- Login -->\n        <ng-container matColumnDef=\"login\">\n            <th mat-header-cell *matHeaderCellDef>Login</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.login}}</td>\n        </ng-container>\n\n        <!-- senha -->\n        <ng-container matColumnDef=\"senha\">\n            <th mat-header-cell *matHeaderCellDef>Senha</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.senha}}</td>\n        </ng-container>   \n        \n        <!-- Empresa -->\n        <ng-container matColumnDef=\"empresaId\">\n            <th mat-header-cell *matHeaderCellDef>Empresa</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.empresaId}}</td>\n        </ng-container>  \n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/usuarios/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/usuarios/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    \n    <mat-paginator #paginator\n      [length]=\"usuario.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"5\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from './../../../models/modelLogin';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-update',\n  templateUrl: './usuario-update.component.html',\n  styleUrls: ['./usuario-update.component.css']\n})\nexport class UsuarioUpdateComponent implements OnInit {\n\n  empresa : Observable<Empresa[]>;\n  dadosEmpresa : Empresa;\n  usuario : Usuario = new Usuario();\n\n  constructor(private usarioService : UsuarioService,\n             private empresaService : EmpresaService,\n             private utilService: UtilService,\n             private router : Router,\n             private route: ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.usarioService.readById(id).subscribe(usuario => {\n      this.usuario = usuario;\n      this.usuario.Senha = '*****';\n\n      this.buscarEmpresa();\n    });\n\n  }\n\n  updateUsuario(): void {\n    this.usarioService.update(this.usuario).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n\n  }\n\n\n  cancel(): void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa() {\n    this.empresa = this.empresaService.read();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.contato.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.contato.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.contato.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.Login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.Senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.EmpresaId\" placeholder=\"EmpresaID\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa | async\" [value]=\"dadosEmpresa.Id\">\n                       {{dadosEmpresa.NomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>usuario works!</p>\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","export class Acesso{\r\n    login : string\r\n    senha : string\r\n}","import { Empresa } from './empresa/ModelEmpresa';\r\nimport { Contato } from './contato/modelContato';\r\nexport class Usuario {\r\nId ? :string\r\nDtCriacao : Date\r\nNome : string\r\nLogin : string\r\nSenha : string\r\nCracha : string\r\nBolSistema: boolean\r\nBolResetaSenha : boolean\r\nDataTrocaSenha : Date\r\nCriadoPor : number\r\nBloqueado : boolean\r\nEmpresaId : string\r\nGrupoUsuarioId : number\r\ncontato : Contato\r\n\r\n}\r\n","import { UtilService } from './util.service';\nimport { Empresa } from './../models/empresa/ModelEmpresa';\nimport { environment } from './../../environments/environment.prod';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService : UtilService\n              ) \n              { \n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.apiUrl + '/empresa';\n              }\n//Criar empresa\ncreate(empresa : Empresa): Observable<Empresa>{\n  return this.http.post<Empresa>(this.environmentUrl, empresa).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n}\n\n // Buscar todos Get All\n read(): Observable<Empresa[]>{\n  return this.http.get<Empresa[]>(this.environmentUrl).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n}\n\n\n//Buscar um produto por id\nreadById(id: string): Observable<Empresa>{\n  const url = `${this.environmentUrl}/${id}`      \n    return this.http.get<Empresa>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n }\n\n // Atualizar Produto por ID\n update(empresa: Empresa): Observable<Empresa> {\n  const url = `${this.environmentUrl}/${empresa.Id}`      \n  return this.http.put<Empresa>(url, empresa).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n }\n\n delete(id: number) : Observable<Empresa>{\n  const url = `${this.environmentUrl}/${id}`      \n  return this.http.delete<Empresa>(url).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n\n }\n\n}\n","import { ObjetoToken } from './../models/Token/ObjetoToken';\nimport { Empresa } from './../models/empresa/ModelEmpresa';\nimport { Acesso } from '../models/acessoModel';\nimport { Usuario } from './../models/modelLogin';\nimport { UtilService } from './util.service';\n\nimport { environment } from './../../environments/environment';\n\nimport { map, catchError, take, retry } from 'rxjs/operators';\nimport { Observable, EMPTY, from, empty, pipe } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\nimport { stringify } from 'querystring';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n  acesso : Acesso = new Acesso();\n  objetoToken : ObjetoToken []\n  \n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService,\n               \n              ) { \n                this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL;\n              }\n\n  async logarSistema(acesso: Acesso) {\n    \n    try {\n      let response = await this.http.post<ObjetoToken>(this.environmentUrl + '/Token', acesso).toPromise()\n   \n       if (response != null)\n          {\n            this.usuarioAutenticado = true;\n            this.mostrarMenuEmitter.emit(true);\n            this.mostrarLoginEmitter.emit(false)\n            this.router.navigate(['/']);\n                        \n            localStorage.setItem(\"tId\", response.token)\n            localStorage.setItem(\"usId\", response.id)\n            localStorage.setItem(\"grpUs\", response.grupoUsuarioId)\n            localStorage.setItem(\"stUs\", response.bloqueado);\n            localStorage.setItem(\"empId\", response.empresaId);\n            this.utilService.showMessage(\"Seja Bem Vindo!  \" + acesso.login , false);\n\n          }\n          else\n          {\n            this.usuarioAutenticado = false;\n            this.mostrarMenuEmitter.emit(false);\n            this.mostrarLoginEmitter.emit(true)\n            this.utilService.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n      \n      } catch (error) {\n        this.utilService.showMessage(\"Erro de acesso a API\", true);\n      }\n    \n  }\n\n \n\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n    localStorage.removeItem(\"tId\");\n    localStorage.removeItem(\"usId\");\n    localStorage.removeItem(\"grpUs\");\n    localStorage.removeItem(\"stUs\");\n    localStorage.removeItem(\"empId\");\n    this.router.navigate(['/login']);\n    this.utilService.showMessage(\"Até logo! \", false);\n  }\n\n  header(){\n    var reqHeader = new HttpHeaders({ \n        'Content-Type' : 'application/json; charset=utf-8',\n        'Accept'       : 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('tId')\n    })\n    return { headers: reqHeader };\n  }\n\n  \n}\n\n\n\n\n\n","import { LoginService } from 'src/app/services/login.service';\n\nimport { UtilService } from './util.service';\nimport { environment } from '../../environments/environment';\nimport { Component } from '@angular/core';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from '../models/produtos/product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n   \nconstructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              \n             ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL + '/Produto';\n             }\n\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.environmentUrl, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`\n\n      return this.http.get<Product>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto \n   update(product: Product): Observable<Product> {    \n    return this.http.put<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Product>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n\n   }\n\n}\n","import { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UtilService } from './util.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAllService <T>{\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(\n    private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              ) {\n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.BASE_URL;\n              }\n\n\n    //Criar Cadasto\n    create(T : T, tipo: string) : Observable <T>{\n      return this.http.post<T>(this.environmentUrl + tipo , T, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Buscar todos Get All\n    read(tipo: string): Observable<T[]>{\n      return this.http.get<T[]>(this.environmentUrl + tipo, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n    //Buscar um cadastro por id\n    readById(id: string, tipo: string): Observable<T>{\n    const url = `${this.environmentUrl + tipo}/${id}`\n\n      return this.http.get<T>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Atualizar Produto \n    update(T: T, tipo: string): Observable<T> {    \n    return this.http.put<T>(this.environmentUrl + tipo, T, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    delete(id: number, tipo : string) : Observable<T>{\n      const url = `${this.environmentUrl + tipo}/${id}`      \n      return this.http.delete<T>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n\n    }\n\n}\n","import { UtilService } from './util.service';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Usuario } from './../models/modelLogin';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { Route } from '@angular/compiler/src/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n\n  constructor(\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService\n             ) {\n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.apiUrl + '/usuarios';\n              }\n\n      // Buscar todos Get All\n      read(): Observable<Usuario[]>{\n        return this.http.get<Usuario[]>(this.environmentUrl).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        );\n      }\n\n      // Criar usuario\n      create(usuario : Usuario) : Observable<Usuario>{\n        return this.http.post<Usuario>(this.environmentUrl, usuario).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        )};\n\n      // Atualizar usuario por ID\n      update(usuario: Usuario): Observable<Usuario> {\n        const url = `${this.environmentUrl}/${usuario.Id}`      \n        return this.http.put<Usuario>(url, usuario).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        );\n      }\n     \n      //Buscar um usuario por id\n      readById(id: string): Observable<Usuario>{\n        const url = `${this.environmentUrl}/${id}`      \n          return this.http.get<Usuario>(url).pipe(\n            map(obj => obj),\n            catchError(e => this.utilService.erroHandler(e))\n          );\n       }\n\n      //Delete por ID\n       delete(id: string) : Observable<Usuario>{\n        const url = `${this.environmentUrl}/${id}`      \n        return this.http.delete<Usuario>(url).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        );\n       }\n\n       \n\n}\n","import { ObjetoToken } from './../models/Token/ObjetoToken';\n\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(private snackbar : MatSnackBar,\n             private http : HttpClient\n             ) { }\n\n\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n\n}\n\n  erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY \n  }\n\nconvertToBase64(txt : string){\n  return btoa(txt);\n}\n\nconvertBase64toText(txt: string){\n  return atob(txt);\n\n}\n\n}","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-crud',\n  templateUrl: './chamado-crud.component.html',\n  styleUrls: ['./chamado-crud.component.css']\n})\nexport class ChamadoCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToChamadoCreate():void{\n    this.router.navigate(['chamados/read'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToChamadoCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-chamado-read></app-chamado-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToEmpresaCreate() : void {\n    this.router.navigate(['empresa/create'])\n  }\n\n\n}\n","<button mat-raised-button (click)=\"navigateToEmpresaCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-empresa-read></app-empresa-read>\n\n","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService :HeaderService) {\n    this.headerService.headerData = {\n      title : 'Início',\n      icon : 'home',\n      routeUrl : ''\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n    <mat-card-subtitle>\n            Sistema para exemplificar o cadastro em angular! \n    </mat-card-subtitle>\n\n</mat-card>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router,\n             private headerService : HeaderService\n             ) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<button mat-raised-button (click)=\"navigateToProductsCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-product-read></app-product-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-crud',\n  templateUrl: './usuario-crud.component.html',\n  styleUrls: ['./usuario-crud.component.css']\n})\nexport class UsuarioCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToUsuarioCreate(): void{\n    this.router.navigate(['usuarios/create']);\n  }\n}\n","<button mat-raised-button (click)=\"navigateToUsuarioCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n\n<app-usuario-read></app-usuario-read>\n\n","export const environment = {\n  production: true,\n  environmentName: \"Prod\",\n  apiUrl:'http://localhost:5000/api',\n  BASE_URL : '/api'\n};\n","export const environment = {\n  production: false,\n  environmentName: \"QA\",\n  apiUrl:  'http://localhost:5000',\n  BASE_URL : '/api'\n\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}