{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/@angular/compiler/src sync","webpack:///node_modules/@angular/compiler/src/aot sync","webpack:///node_modules/@angular/compiler/src/ml_parser sync","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.conponent.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.html","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.ts","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.html","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.ts","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.html","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.ts","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.html","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.ts","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.html","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.ts","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.html","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.ts","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.html","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.ts","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/product/product-create/product-create.component.ts","webpack:///src/app/components/product/product-create/product-create.component.html","webpack:///src/app/components/product/product-delete/product-delete.component.ts","webpack:///src/app/components/product/product-delete/product-delete.component.html","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","webpack:///src/app/components/product/product-read/product-read.component.ts","webpack:///src/app/components/product/product-read/product-read.component.html","webpack:///src/app/components/product/product-update/product-update.component.ts","webpack:///src/app/components/product/product-update/product-update.component.html","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/components/template/header/header.service.ts","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.ts","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.html","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.ts","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.html","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.ts","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.html","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.ts","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.html","webpack:///src/app/components/usuario/usuario.component.ts","webpack:///src/app/components/usuario/usuario.component.html","webpack:///src/app/diretivas/red.directive.ts","webpack:///src/app/models/loginModel.ts","webpack:///src/app/models/modelLogin.ts","webpack:///src/app/services/contato.service.ts","webpack:///src/app/services/empresa.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/usuario.service.ts","webpack:///src/app/services/util.service.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.html","webpack:///src/app/views/empresa/empresa.component.ts","webpack:///src/app/views/empresa/empresa.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/product-crud/product-crud.component.ts","webpack:///src/app/views/product-crud/product-crud.component.html","webpack:///src/app/views/usuario-crud/usuario-crud.component.ts","webpack:///src/app/views/usuario-crud/usuario-crud.component.html","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","webpackEmptyContext","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","authService","nome","mostrarMenu","mostrarlogin","mostrarMenuEmitter","subscribe","mostrar","mostrarLoginEmitter","mostrarLogin","selector","templateUrl","AppModule","provide","useValue","declarations","providers","bootstrap","ChamadoCreateComponent","styleUrls","ChamadoDeleteComponent","ChamadoReadComponent","ChamadoUpdateComponent","EmpresaCreateComponent","formbuilder","servicoContato","utilService","configurarFormulario","formulario","group","required","email","emailsecundario","criar","value","contato","reset","showMessage","EmpresaDeleteComponent","EmpresaReadComponent","displayedColumns","EmpresaUpdateComponent","LoginComponent","router","authservice","acesso","logarSistema","ProductCreateComponent","ProductService","product","dtCriacao","preco","idUsuarioCriacao","create","navigate","createProduct","cancel","ProductDeleteComponent","productService","route","snapshot","paramMap","get","readById","deleteProduct","EXAMPLE_DATA","name","ProductReadTableprodutosDataSource","data","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","ProductReadTableprodutosComponent","dataSource","table","ProductReadComponent","read","products","console","log","ProductUpdateComponent","update","updateProduct","FooterComponent","HeaderComponent","headerService","headerData","title","icon","routeUrl","HeaderService","_headerData","next","providedIn","NavComponent","auth","opened","sairSistema","UsuarioCreateComponent","usuarioService","empresaService","usuario","buscarEmpresa","empresa","createUsuario","UsuarioDeleteComponent","empresaId","nomeFantasia","senha","deleteUsuario","UsuarioReadComponent","forEach","element","razaoSocial","passwordTemp","ngAfterViewInit","UsuarioUpdateComponent","usarioService","updateUsuario","UsuarioComponent","RedDirective","el","nativeElement","style","color","Acesso","Usuario","ContatoService","snackbar","http","environmentName","environmentUrl","apiUrl","post","obj","erroHandler","url","put","EmpresaService","httpOptions","headers","LoginService","usuarioAutenticado","BASE_URL","toPromise","token","emit","localStorage","setItem","JSON","stringify","getItem","login","UsuarioService","UtilService","msg","isErro","open","duration","horizontalPosition","verticalPosition","panelClass","txt","btoa","atob","ChamadoCrudComponent","navigateToChamadoCreate","EmpresaComponent","navigateToEmpresaCreate","HomeComponent","ProductCrudComponent","navigateToProductsCreate","UsuarioCrudComponent","navigateToUsuarioCreate","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@angular/compiler/src sync recursive\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@angular/compiler/src/aot sync recursive\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@angular/compiler/src/ml_parser sync recursive\";","import { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\n\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\n\n\nconst routes: Routes = [\n  {\n    path : \"\",\n    component:HomeComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"products\",\n    component: ProductCrudComponent\n  },\n  {\n    path: \"products/create\",\n    component : ProductCreateComponent\n  },\n  {\n    path: \"products/update/:id\",\n    component : ProductUpdateComponent\n  },\n  {\n    path: \"products/delete/:id\",\n    component : ProductDeleteComponent\n  },\n  {\n    path: \"usuarios\",\n    component : UsuarioCrudComponent\n  },\n  {\n    path: \"usuarios/create\",\n    component : UsuarioCreateComponent\n  },\n  {\n    path: \"usuarios/update/:id\",\n    component : UsuarioUpdateComponent\n  },\n  {\n    path: \"usuarios/delete/:id\",\n    component : UsuarioDeleteComponent\n  },\n  {\n    path: \"chamados\",\n    component : ChamadoCrudComponent\n  },\n  {\n    path: \"chamados/create\",\n    component : ChamadoCreateComponent\n  },\n  {\n    path: \"chamados/update/:id\",\n    component : ChamadoUpdateComponent\n  },\n  {\n    path: \"chamados/delete/:id\",\n    component : ChamadoDeleteComponent\n  },\n\n  //Rotas de empresa\n  {\n    path: \"empresa\",\n    component : EmpresaComponent\n  },\n  {\n    path: \"empresa/create\",\n    component : EmpresaCreateComponent\n  },\n  {\n    path: \"empresa/update/:id\",\n    component : EmpresaUpdateComponent\n  },\n  {\n    path: \"empresa/delete/:id\",\n    component : ChamadoDeleteComponent\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { LoginService } from '../app/'\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\n\n\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './services/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\n\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\n\n\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { UsuarioReadComponent } from './components/usuario/usuario-read/usuario-read.component';\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\nimport { ChamadoReadComponent } from './components/chamados/chamado-read/chamado-read.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaReadComponent } from './components/empresa/empresa-read/empresa-read.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    UsuarioCrudComponent,\n    UsuarioComponent,\n    UsuarioReadComponent,\n    UsuarioCreateComponent,\n    UsuarioDeleteComponent,\n    UsuarioUpdateComponent,\n    ChamadoCrudComponent,\n    ChamadoCreateComponent,\n    ChamadoUpdateComponent,\n    ChamadoDeleteComponent,\n    ChamadoReadComponent,\n    EmpresaComponent,\n    EmpresaCreateComponent,\n    EmpresaUpdateComponent,\n    EmpresaDeleteComponent,\n    EmpresaReadComponent,\n   \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n\n\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-create',\n  templateUrl: './chamado-create.component.html',\n  styleUrls: ['./chamado-create.component.css']\n})\nexport class ChamadoCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-delete',\n  templateUrl: './chamado-delete.component.html',\n  styleUrls: ['./chamado-delete.component.css']\n})\nexport class ChamadoDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-read',\n  templateUrl: './chamado-read.component.html',\n  styleUrls: ['./chamado-read.component.css']\n})\nexport class ChamadoReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-update',\n  templateUrl: './chamado-update.component.html',\n  styleUrls: ['./chamado-update.component.css']\n})\nexport class ChamadoUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-update works!</p>\n","import { UtilService } from './../../../services/util.service';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { ContatoService } from './../../../services/contato.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-empresa-create',\n  templateUrl: './empresa-create.component.html',\n  styleUrls: ['./empresa-create.component.css']\n})\nexport class EmpresaCreateComponent implements OnInit {\n\n  contato : Contato\n  formulario : FormGroup;\n\n\n\n  constructor(private formbuilder: FormBuilder,\n              private servicoContato : ContatoService,\n              private utilService : UtilService) { }\n\n  ngOnInit(): void {\n\n      this.configurarFormulario();\n\n    \n\n  }\n\n  configurarFormulario(){\n\n    this.formulario = this.formbuilder.group({\n      nome : [null, Validators.required],\n      email : [null,[Validators.required, Validators.email]],\n      emailsecundario : [null, Validators.email],\n\n    })\n\n  }\n\n  criar(){\n  \n    this.servicoContato.criar(this.formulario.value).subscribe(contato => {\n      this.contato = contato;\n      this.formulario.reset();\n      this.utilService.showMessage(\"Contato Criado com sucesso!\",false);\n    })\n  \n  }\n\n\n}\n","<section>\n\n\n<div class=\"container\">\n\n    <form method=\"post\" (ngSubmit)=\"criar()\" [formGroup]=\"formulario\">\n\n        <div class=\"form-group\">\n            <label for=\"nome\">Nome</label>\n            <input type=\"text\" id=\"nome\" name=\"nome\"\n            class=\"form-control\" placeholder=\"Nome\"\n            formControlName=\"nome\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"email\">E-mail</label>\n            <input type=\"email\" id=\"email\" name=\"email\"\n            class=\"form-control\" placeholder=\"E-mail\"\n            formControlName=\"email\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"email\">E-mail Secundário</label>\n            <input type=\"email\" id=\"emailsecundario\" name=\"emailsecundario\"\n            class=\"form-control\" placeholder=\"E-mail Secundário\"\n            formControlName=\"emailsecundario\">\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\"\n            [disabled]=\"formulario.invalid\">Salvar</button>\n\n    </form>\n\n</div>\n\n\n\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-delete',\n  templateUrl: './empresa-delete.component.html',\n  styleUrls: ['./empresa-delete.component.css']\n})\nexport class EmpresaDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-delete works!</p>\n","import { Endereco } from './../../../models/endereco/modelEndereco';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-read',\n  templateUrl: './empresa-read.component.html',\n  styleUrls: ['./empresa-read.component.css']\n})\nexport class EmpresaReadComponent implements OnInit {\n\n  displayedColumns = ['id','cnpj', 'inscricaoEstadual', 'inscricaoMunicipal','nomeFantasia', 'razaoSocial','action']  \n  empresa: Empresa;\n  contato : Contato;\n  endereco : Endereco;\n\n  constructor() { }\n\n\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"empresa\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>cnpj</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.cnpj}}</td>\n      </ng-container>\n      \n      <!-- Name Price -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>inscricaoEstadual</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoEstadual}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>inscricaoMunicipal</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoMunicipal}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>nomeFantasia</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>razaoSocial</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.razaoSocial}}</td>\n      </ng-container>\n\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/empresa/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/empresa/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-update',\n  templateUrl: './empresa-update.component.html',\n  styleUrls: ['./empresa-update.component.css']\n})\nexport class EmpresaUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-update works!</p>\n","import { Acesso } from '../../models/loginModel';\nimport { UtilService } from './../../services/util.service';\nimport { LoginService } from './../../services/login.service';\n\nimport { Usuario } from '../../models/modelLogin';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\nacesso : Acesso = new Acesso();\n\n\n\nconstructor(private router :Router,\n             private authservice : LoginService,\n             private utilService : UtilService, \n            \n             ) { }\n\n  ngOnInit(): void {\n  \n  }\n  \n  logarSistema(){\n      \n          this.authservice.logarSistema(this.acesso);\n          \n      }    \n\n \n\n\n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"acesso.login\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"acesso.senha\" type=\"password\" name=\"senha\">\n\n            </mat-form-field>\n        </form>\n\n        <button mat-raised-button (click)=\"logarSistema()\" color=\"primary\" > \n            Login\n        </button>\n        \n\n</mat-card>        \n","import { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n    product : Product = {\n    nome : '',\n    dtCriacao : null,\n    preco : null,\n    idUsuarioCriacao : null\n\n    \n    }\n\n  constructor(private ProductService : ProductService,\n              private utilService : UtilService,\n              private router : Router ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  createProduct() : void {\n\n      this.ProductService.create(this.product).subscribe(() => {\n      \n        this.utilService.showMessage('Produto Criado!');\n      \n        this.router.navigate(['products']);\n      \n    })\n    \n  }\n\n  cancel() : void {\n\n    this.router.navigate(['products'])\n  }\n\n  \n  \n\n}\n","<mat-card>\n    <mat-card-title>Novo Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.preco\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"createProduct()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product;\n  \n  constructor(private productService : ProductService,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n  deleteProduct():void{\n  \n    this.productService.delete(this.product.id).subscribe(() => {\n        this.utilService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.router.navigate(['/products'])\n      })\n    \n  }\n\n  cancel():void{\n    this.router.navigate(['/products'])\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                 [value]=\"product.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\" disabled\n                [value]=\"product.preco\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../models/product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\n\ndisplayedColumns = ['id','dtCriacao','nome', 'preco','idUsuarioCriacao', 'action']  \n\n  constructor(private productService : ProductService,\n             ) { }\n\n  ngOnInit(): void {\n    \n    \n      this.productService.read().subscribe(products => {\n        this.products = products;\n        console.log(products)\n      })\n    \n    \n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"dtCriacao\">\n        <th mat-header-cell *matHeaderCellDef>DataCriação</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.dtCriacao}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n      <!-- Name Price -->\n      <ng-container matColumnDef=\"idUsuarioCriacao\">\n        <th mat-header-cell *matHeaderCellDef>Criado Por</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.idUsuarioCriacao}}</td>\n      </ng-container>\n       <!-- Name Price -->\n       <ng-container matColumnDef=\"preco\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.preco | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/products/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>","import { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\n\n  product: Product = {\n    id: null,\n    dtCriacao : null,\n    nome: null,\n    preco: 0,\n    idUsuarioCriacao : 0\n    \n\n  }\n\n  constructor(private productService: ProductService,\n    private router: Router,\n    private utilService : UtilService,\n    private route: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n\n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n\n  updateProduct(): void {\n    this.productService.update(this.product).subscribe(() => {\n      this.utilService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.router.navigate(['/products'])\n    })\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.preco\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>\n\n","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\nopened = false;\n  \n  constructor(private auth: LoginService) { }\n\n  ngOnInit(): void {\n  \n  }\n\n  sairSistema(){\n    \n    this.auth.sairSistema();\n    \n  }\n\n \n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" \n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" [(opened)]=\"opened\">\n            <mat-nav-list class=\"nav-list\">\n            \n                <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <!--Menus de cadastro-->    \n            <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menuColor\" >\n                <i class=\"material-icons\">storefront</i>\n                \n                <mat-menu #menu=\"matMenu\">\n                        <a mat-list-item routerLink=\"empresa\" >\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Empresa\n                        </a>\n                        <a mat-list-item routerLink=\"products\" >\n                            <i class=\"material-icons\">\n                                storefront\n                            </i>\n                            Produtos\n                        </a>\n                        <a mat-list-item routerLink=\"chamados\">\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Solicitações\n                        </a>\n                        <a mat-list-item routerLink=\"usuarios\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Usuários\n                        </a>\n\n                        \n                </mat-menu>\n            </button>\n\n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <div *ngIf=\"!opened\">\n            <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                navigate_next \n            </i>\n        </div>\n            \n        <div *ngIf=\"opened\">\n                <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                    navigate_before \n                </i>\n        </div>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from './../../../models/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\n\n\n\n@Component({\n  selector: 'app-usuario-create',\n  templateUrl: './usuario-create.component.html',\n  styleUrls: ['./usuario-create.component.css']\n})\nexport class UsuarioCreateComponent implements OnInit {\n  \nempresa : Observable<Empresa[]>;\ndadosEmpresa : Empresa;\nusuario : Usuario = new Usuario();\n\n  constructor(private usuarioService : UsuarioService,\n              private empresaService :EmpresaService,\n              private utilService : UtilService,\n              private router : Router) { }\n\n  ngOnInit(): void {\n      this.buscarEmpresa();\n  }\n  createUsuario() : void {\n    this.usuarioService.create(this.usuario).subscribe(() => {\n      this.utilService.showMessage('Usuário Criado!');\n      this.router.navigate(['usuarios']);\n    })\n\n  }\n  cancel() : void {\n\n    this.router.navigate(['usuarios'])\n  }\n\n  buscarEmpresa() {\n    this.empresa = this.empresaService.read();\n  }\n}\n","<mat-card>\n    <mat-card-title>Novo Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaId\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa | async\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        \n            </form>\n\n        <button mat-raised-button (click)=\"createUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/modelLogin';\n\n@Component({\n  selector: 'app-usuario-delete',\n  templateUrl: './usuario-delete.component.html',\n  styleUrls: ['./usuario-delete.component.css']\n})\nexport class UsuarioDeleteComponent implements OnInit {\nempresa : Empresa\nusuario : Usuario;\n\n  constructor(private usuarioService : UsuarioService,\n              private empresaService : EmpresaService,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.usuarioService.readById(id).subscribe(usuario => {\n      this.usuario = usuario;\n      \n      this.buscarEmpresa().subscribe(empresa =>{\n        this.empresa = empresa;\n        this.usuario.empresaId = this.empresa.nomeFantasia;\n        this.usuario.senha = '******';\n      });\n    })\n  }\n\n  deleteUsuario(): void{\n      this.usuarioService.delete(this.usuario.id).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Excluído com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n  }\n  cancel():void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa(){\n    return this.empresaService.readById(this.usuario.empresaId);\n  }\n}\n","Search\n\n<mat-card>\n    <mat-card-title>Novo Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(value)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"usuario.empresaId\" name=\"empresaId\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteUsuario()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { DataSource } from '@angular/cdk/collections';\nimport { MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from '../../../models/modelLogin';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n\n@Component({\n  selector: 'app-usuario-read',\n  templateUrl: './usuario-read.component.html',\n  styleUrls: ['./usuario-read.component.css']\n})\nexport class UsuarioReadComponent implements OnInit {\n  usuario: Usuario[]\n  empresa: Empresa\n  displayedColumns = ['id','nome','email','telefone','login', 'senha', 'empresaId','action']  \n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<UsuarioReadComponent>;\n  dataSource: UsuarioReadComponent;\n\n\n  \n  constructor(private usuarioService: UsuarioService,\n              private empresaService: EmpresaService\n             ) \n             { }\n\n  ngOnInit(): void {\n    this.usuarioService.read().subscribe(usuario => {\n      this.usuario = usuario;\n      \n\n      usuario.forEach(element => {\n        \n        this.empresaService.readById(element.empresaId).subscribe(empresa => {\n          this.empresa = empresa;\n          element.empresaId  = this.empresa.razaoSocial;\n          element.senha = '******';\n          element.passwordTemp = '******'\n\n        });\n        \n\n      });\n      \n    \n    })\n    this.ngAfterViewInit();\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"usuario\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Nome -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n      <!-- email -->\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef>E-mail</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.email}}</td>\n      </ng-container>\n\n        <!-- telefone -->\n        <ng-container matColumnDef=\"telefone\">\n            <th mat-header-cell *matHeaderCellDef>Tel:</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.telefone}}</td>\n        </ng-container>\n\n        <!-- Login -->\n        <ng-container matColumnDef=\"login\">\n            <th mat-header-cell *matHeaderCellDef>Login</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.login}}</td>\n        </ng-container>\n\n        <!-- senha -->\n        <ng-container matColumnDef=\"senha\">\n            <th mat-header-cell *matHeaderCellDef>Senha</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.senha}}</td>\n        </ng-container>   \n        \n        <!-- Empresa -->\n        <ng-container matColumnDef=\"empresaId\">\n            <th mat-header-cell *matHeaderCellDef>Empresa</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.empresaId}}</td>\n        </ng-container>  \n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/usuarios/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/usuarios/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    \n    <mat-paginator #paginator\n      [length]=\"usuario.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"5\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from './../../../models/modelLogin';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-update',\n  templateUrl: './usuario-update.component.html',\n  styleUrls: ['./usuario-update.component.css']\n})\nexport class UsuarioUpdateComponent implements OnInit {\n\n  empresa : Observable<Empresa[]>;\n  dadosEmpresa : Empresa;\n  usuario : Usuario = new Usuario();\n\n  constructor(private usarioService : UsuarioService,\n             private empresaService : EmpresaService,\n             private utilService: UtilService,\n             private router : Router,\n             private route: ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.usarioService.readById(id).subscribe(usuario => {\n      this.usuario = usuario;\n      this.usuario.senha = '*****';\n      this.usuario.passwordTemp = '';\n\n      this.buscarEmpresa();\n    });\n\n  }\n\n  updateUsuario(): void {\n    this.usarioService.update(this.usuario).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n\n  }\n\n\n  cancel(): void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa() {\n    this.empresa = this.empresaService.read();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaId\" placeholder=\"EmpresaID\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa | async\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>usuario works!</p>\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","export class Acesso{\r\n    id ? :number\r\n    dtCriacao : Date\r\n    login : string\r\n    senha : string\r\n    cracha : string\r\n    bolBloqueado : boolean\r\n    bolSistema: boolean\r\n    bolResetaSenha : boolean\r\n    idUsuarioCriacao : number\r\n    idGrupoUsuario : number\r\n    idEmpresa : number\r\n    dataTrocaSenha : Date\r\n\r\n\r\n}","export class Usuario {\r\n    id ? :string\r\n    dataCriacao : Date\r\n    nome: string\r\n    email: string\r\n    telefone:number\r\n    login : string\r\n    senha : string\r\n    empresaId : string\r\n    loginTemp : string\r\n    passwordTemp : string\r\n}\r\n","import { UtilService } from './util.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Contato } from './../models/contato/modelContato';\nimport { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContatoService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(private snackbar : MatSnackBar,\n    private http : HttpClient,\n    private utilService : UtilService\n    ) {\n      this.environmentName = environment .environmentName;\n      this.environmentUrl =  environment.apiUrl + '/contato';\n      }\n\n    //Criar um contato\n    criar(contato : Contato): Observable<Contato>{\n      return this.http.post<Contato>(this.environmentUrl, contato).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    buscarTodos(): Observable<Contato[]>{\n      return this.http.get<Contato[]>(this.environmentUrl).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n   //Buscar um contato por id\n   buscarPorId(id: string): Observable<Contato>{\n    const url = `${this.environmentUrl}/${id}`      \n      return this.http.get<Contato>(url).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n   }\n\n   // Atualizar contato por ID\n   update(contato: Contato): Observable<Contato> {\n    const url = `${this.environmentUrl}/${contato.id}`      \n    return this.http.put<Contato>(url, contato).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Contato>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Contato>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n\n   }\n\n}\n","import { UtilService } from './util.service';\nimport { Empresa } from './../models/empresa/ModelEmpresa';\nimport { environment } from './../../environments/environment.prod';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService : UtilService\n              ) \n              { \n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.apiUrl + '/empresa';\n              }\n//Criar empresa\ncreate(empresa : Empresa): Observable<Empresa>{\n  return this.http.post<Empresa>(this.environmentUrl, empresa).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n}\n\n // Buscar todos Get All\n read(): Observable<Empresa[]>{\n  return this.http.get<Empresa[]>(this.environmentUrl).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n}\n\n\n//Buscar um produto por id\nreadById(id: string): Observable<Empresa>{\n  const url = `${this.environmentUrl}/${id}`      \n    return this.http.get<Empresa>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n }\n\n // Atualizar Produto por ID\n update(empresa: Empresa): Observable<Empresa> {\n  const url = `${this.environmentUrl}/${empresa.id}`      \n  return this.http.put<Empresa>(url, empresa).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n }\n\n delete(id: number) : Observable<Empresa>{\n  const url = `${this.environmentUrl}/${id}`      \n  return this.http.delete<Empresa>(url).pipe(\n    map(obj => obj),\n    catchError(e => this.utilService.erroHandler(e))\n  );\n\n }\n\n}\n","import { Acesso } from './../models/loginModel';\nimport { Usuario } from './../models/modelLogin';\nimport { UtilService } from './util.service';\n\nimport { environment } from './../../environments/environment';\n\nimport { map, catchError, take, retry } from 'rxjs/operators';\nimport { Observable, EMPTY, from } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\nimport { stringify } from 'querystring';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n  acesso : Acesso = new Acesso();\n \n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService,\n               \n              ) { \n                this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL;\n              }\n\n  async logarSistema(acesso: Acesso) {\n    \n    try {\n      var token = await this.http.post(this.environmentUrl + '/Token', acesso, httpOptions).toPromise()\n      \n      if(token != null)\n          {\n            this.usuarioAutenticado = true;\n            this.mostrarMenuEmitter.emit(true);\n            this.mostrarLoginEmitter.emit(false)\n            this.router.navigate(['/']);\n            \n            // salvei o meu nome\n           \n            localStorage.setItem('teste', JSON.stringify(Token))\n            console.log(localStorage.getItem('teste'))\n\n            localStorage.setItem('teste', JSON.stringify(Token) + \"OK\")\n            console.log(localStorage.getItem('teste'))\n\n            \n            this.utilService.showMessage(\"Seja Bem Vindo!  \" + acesso.login , false);\n          }else{\n            this.usuarioAutenticado = false;\n            this.mostrarMenuEmitter.emit(false);\n            this.mostrarLoginEmitter.emit(true)\n            this.utilService.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n      \n      } catch (error) {\n        this.utilService.showMessage(\"Usuário ou senha Inválido!\", true);\n      }\n    \n  }\n\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n\n    this.router.navigate(['/login']);\n    this.utilService.showMessage(\"Até logo! \", false);\n  }\n\n  \n}\n\n\n\n\n\n","import { UtilService } from './util.service';\nimport { environment } from '../../environments/environment';\nimport { Component } from '@angular/core';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from './../models/product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              \n             ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL + '/Produto';\n             }\n\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.environmentUrl, product).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.environmentUrl).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n      return this.http.get<Product>(url).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto por ID\n   update(product: Product): Observable<Product> {\n    const url = `${this.environmentUrl}/${product.id}`      \n    return this.http.put<Product>(url, product).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Product>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n\n   }\n\n}\n","import { UtilService } from './util.service';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Usuario } from './../models/modelLogin';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { Route } from '@angular/compiler/src/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n\n  constructor(\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService\n             ) {\n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.apiUrl + '/usuarios';\n              }\n\n      // Buscar todos Get All\n      read(): Observable<Usuario[]>{\n        return this.http.get<Usuario[]>(this.environmentUrl).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        );\n      }\n\n      // Criar usuario\n      create(usuario : Usuario) : Observable<Usuario>{\n        return this.http.post<Usuario>(this.environmentUrl, usuario).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        )};\n\n      // Atualizar usuario por ID\n      update(usuario: Usuario): Observable<Usuario> {\n        const url = `${this.environmentUrl}/${usuario.id}`      \n        return this.http.put<Usuario>(url, usuario).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        );\n      }\n     \n      //Buscar um usuario por id\n      readById(id: string): Observable<Usuario>{\n        const url = `${this.environmentUrl}/${id}`      \n          return this.http.get<Usuario>(url).pipe(\n            map(obj => obj),\n            catchError(e => this.utilService.erroHandler(e))\n          );\n       }\n\n      //Delete por ID\n       delete(id: string) : Observable<Usuario>{\n        const url = `${this.environmentUrl}/${id}`      \n        return this.http.delete<Usuario>(url).pipe(\n          map(obj => obj),\n          catchError(e => this.utilService.erroHandler(e))\n        );\n       }\n\n}\n","import { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(private snackbar : MatSnackBar) { }\n\n\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n\n}\n\n  erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY \n  }\n\nconvertToBase64(txt : string){\n  return btoa(txt);\n}\n\nconvertBase64toText(txt: string){\n  return atob(txt);\n\n\n  \n}\n\n\n}\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-crud',\n  templateUrl: './chamado-crud.component.html',\n  styleUrls: ['./chamado-crud.component.css']\n})\nexport class ChamadoCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToChamadoCreate():void{\n    this.router.navigate(['chamados/read'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToChamadoCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-chamado-read></app-chamado-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToEmpresaCreate() : void {\n    this.router.navigate(['empresa/create'])\n  }\n\n\n}\n","<button mat-raised-button (click)=\"navigateToEmpresaCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-empresa-read></app-empresa-read>\n\n","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService :HeaderService) {\n    this.headerService.headerData = {\n      title : 'Início',\n      icon : 'home',\n      routeUrl : ''\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n    <mat-card-subtitle>\n            Sistema para exemplificar o cadastro em angular! \n    </mat-card-subtitle>\n\n</mat-card>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router,\n             private headerService : HeaderService\n             ) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<button mat-raised-button (click)=\"navigateToProductsCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-product-read></app-product-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-crud',\n  templateUrl: './usuario-crud.component.html',\n  styleUrls: ['./usuario-crud.component.css']\n})\nexport class UsuarioCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToUsuarioCreate(): void{\n    this.router.navigate(['usuarios/create']);\n  }\n}\n","<button mat-raised-button (click)=\"navigateToUsuarioCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n\n<app-usuario-read></app-usuario-read>\n\n","export const environment = {\n  production: true,\n  environmentName: \"Prod\",\n  apiUrl:'http://localhost:5000/api',\n  BASE_URL : '/api'\n};\n","export const environment = {\n  production: false,\n  environmentName: \"QA\",\n  apiUrl:  'http://localhost:5000',\n  BASE_URL : '/api'\n\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}