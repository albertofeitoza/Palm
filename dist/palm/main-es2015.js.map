{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.conponent.html","./src/app/app.module.ts","./src/app/components/chamados/chamado-create/chamado-create.component.ts","./src/app/components/chamados/chamado-create/chamado-create.component.html","./src/app/components/chamados/chamado-delete/chamado-delete.component.ts","./src/app/components/chamados/chamado-delete/chamado-delete.component.html","./src/app/components/chamados/chamado-read/chamado-read.component.ts","./src/app/components/chamados/chamado-read/chamado-read.component.html","./src/app/components/chamados/chamado-update/chamado-update.component.ts","./src/app/components/chamados/chamado-update/chamado-update.component.html","./src/app/components/empresa/empresa-create/empresa-create.component.ts","./src/app/components/empresa/empresa-create/empresa-create.component.html","./src/app/components/empresa/empresa-delete/empresa-delete.component.ts","./src/app/components/empresa/empresa-delete/empresa-delete.component.html","./src/app/components/empresa/empresa-read/empresa-read.component.ts","./src/app/components/empresa/empresa-read/empresa-read.component.html","./src/app/components/empresa/empresa-update/empresa-update.component.ts","./src/app/components/empresa/empresa-update/empresa-update.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/product/product-create/product-create.component.ts","./src/app/components/product/product-create/product-create.component.html","./src/app/components/product/product-delete/product-delete.component.ts","./src/app/components/product/product-delete/product-delete.component.html","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","./src/app/components/product/product-read/product-read.component.ts","./src/app/components/product/product-read/product-read.component.html","./src/app/components/product/product-update/product-update.component.ts","./src/app/components/product/product-update/product-update.component.html","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/template/header/header.service.ts","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/components/usuario/usuario-create/usuario-create.component.ts","./src/app/components/usuario/usuario-create/usuario-create.component.html","./src/app/components/usuario/usuario-delete/usuario-delete.component.ts","./src/app/components/usuario/usuario-delete/usuario-delete.component.html","./src/app/components/usuario/usuario-read/usuario-read.component.ts","./src/app/components/usuario/usuario-read/usuario-read.component.html","./src/app/components/usuario/usuario-update/usuario-update.component.ts","./src/app/components/usuario/usuario-update/usuario-update.component.html","./src/app/components/usuario/usuario.component.ts","./src/app/components/usuario/usuario.component.html","./src/app/diretivas/red.directive.ts","./src/app/models/empresa/ModelEmpresa.ts","./src/app/models/modelLogin.ts","./src/app/services/empresa.service.ts","./src/app/services/login.service.ts","./src/app/services/product.service.ts","./src/app/services/usuario.service.ts","./src/app/views/chamado-crud/chamado-crud.component.ts","./src/app/views/chamado-crud/chamado-crud.component.html","./src/app/views/empresa/empresa.component.ts","./src/app/views/empresa/empresa.component.html","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/views/product-crud/product-crud.component.ts","./src/app/views/product-crud/product-crud.component.html","./src/app/views/usuario-crud/usuario-crud.component.ts","./src/app/views/usuario-crud/usuario-crud.component.html","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\n\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\n\n\nconst routes: Routes = [\n  {\n    path : \"\",\n    component:HomeComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"products\",\n    component: ProductCrudComponent\n  },\n  {\n    path: \"products/create\",\n    component : ProductCreateComponent\n  },\n  {\n    path: \"products/update/:id\",\n    component : ProductUpdateComponent\n  },\n  {\n    path: \"products/delete/:id\",\n    component : ProductDeleteComponent\n  },\n  {\n    path: \"usuarios\",\n    component : UsuarioCrudComponent\n  },\n  {\n    path: \"usuarios/create\",\n    component : UsuarioCreateComponent\n  },\n  {\n    path: \"usuarios/update/:id\",\n    component : UsuarioUpdateComponent\n  },\n  {\n    path: \"usuarios/delete/:id\",\n    component : UsuarioDeleteComponent\n  },\n  {\n    path: \"chamados\",\n    component : ChamadoCrudComponent\n  },\n  \n\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { LoginService } from '../app/'\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\n\n\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './services/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\n\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\n\n\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { UsuarioReadComponent } from './components/usuario/usuario-read/usuario-read.component';\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\nimport { ChamadoReadComponent } from './components/chamados/chamado-read/chamado-read.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaReadComponent } from './components/empresa/empresa-read/empresa-read.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    UsuarioCrudComponent,\n    UsuarioComponent,\n    UsuarioReadComponent,\n    UsuarioCreateComponent,\n    UsuarioDeleteComponent,\n    UsuarioUpdateComponent,\n    ChamadoCrudComponent,\n    ChamadoCreateComponent,\n    ChamadoUpdateComponent,\n    ChamadoDeleteComponent,\n    ChamadoReadComponent,\n    EmpresaComponent,\n    EmpresaCreateComponent,\n    EmpresaUpdateComponent,\n    EmpresaDeleteComponent,\n    EmpresaReadComponent,\n   \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSelectModule,\n\n \n\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-create',\n  templateUrl: './chamado-create.component.html',\n  styleUrls: ['./chamado-create.component.css']\n})\nexport class ChamadoCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-delete',\n  templateUrl: './chamado-delete.component.html',\n  styleUrls: ['./chamado-delete.component.css']\n})\nexport class ChamadoDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-read',\n  templateUrl: './chamado-read.component.html',\n  styleUrls: ['./chamado-read.component.css']\n})\nexport class ChamadoReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-update',\n  templateUrl: './chamado-update.component.html',\n  styleUrls: ['./chamado-update.component.css']\n})\nexport class ChamadoUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-update works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-create',\n  templateUrl: './empresa-create.component.html',\n  styleUrls: ['./empresa-create.component.css']\n})\nexport class EmpresaCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-delete',\n  templateUrl: './empresa-delete.component.html',\n  styleUrls: ['./empresa-delete.component.css']\n})\nexport class EmpresaDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-read',\n  templateUrl: './empresa-read.component.html',\n  styleUrls: ['./empresa-read.component.css']\n})\nexport class EmpresaReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa-update',\n  templateUrl: './empresa-update.component.html',\n  styleUrls: ['./empresa-update.component.css']\n})\nexport class EmpresaUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa-update works!</p>\n","import { LoginService } from './../../services/login.service';\n\nimport { Usuario } from '../../models/modelLogin';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\npublic usuario: Usuario = new Usuario();\n\nusuariosSistema: Usuario[]\n\nconstructor(private router :Router,\n             private authservice : LoginService\n            \n             ) { }\n\n  ngOnInit(): void {\n  \n  }\n  \n  logarSistema(){\n    \n    \n   \n    \n    this.authservice.buscarUsuario().subscribe(usuariosSistema => {\n      this.usuariosSistema = usuariosSistema;\n\n\n      for (let index = 0; index < usuariosSistema.length; index++) {\n               \n        const element = usuariosSistema[index];\n\n        if(element.login === this.usuario.login  && element.senha == this.usuario.senha)\n        {\n          this.usuario.loginTemp = element.login;\n          this.usuario.passwordTemp = element.senha\n\n          this.usuario.loginTemp =  (this.usuario.loginTemp);\n          this.authservice.logarSistema(this.usuario);\n          this.usuario === null;\n          break;\n          \n        }\n        else{\n          this.authservice.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n\n      }    \n\n  });\n\n  }\n\n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"usuario.login\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"usuario.senha\" type=\"password\" name=\"senha\">\n\n            </mat-form-field>\n        </form>\n\n        <button mat-raised-button (click)=\"logarSistema()\" color=\"primary\" > \n            Login\n        </button>\n        \n\n</mat-card>        \n","import { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n    product : Product = {\n    name : '',\n    price : null\n    \n    }\n    \n\n\n  constructor(private ProductService : ProductService,\n              private router : Router ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  createProduct() : void {\n\n      this.ProductService.create(this.product).subscribe(() => {\n      \n        this.ProductService.showMessage('Produto Criado!');\n      \n        this.router.navigate(['products']);\n      \n    })\n    \n  }\n\n  cancel() : void {\n\n    this.router.navigate(['products'])\n  }\n\n  \n  \n\n}\n","<mat-card>\n    <mat-card-title>Novo Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.name\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.price\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"createProduct()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product;\n  \n  constructor(private productService : ProductService,\n              private router : Router,\n              private route : ActivatedRoute ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n  deleteProduct():void{\n  \n    this.productService.delete(this.product.id).subscribe(() => {\n        this.productService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.router.navigate(['/products'])\n      })\n    \n  }\n\n  cancel():void{\n    this.router.navigate(['/products'])\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                 [value]=\"product.name\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\" disabled\n                [value]=\"product.price\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { ProductService } from './../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../models/product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\ndisplayedColumns = ['id','name', 'price', 'action']  \n\n  constructor(private productService : ProductService) { }\n\n  ngOnInit(): void {\n    \n    \n      this.productService.read().subscribe(products => {\n        this.products = products;\n        console.log(products)\n      })\n    \n    \n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n      </ng-container>\n      \n      <!-- Name Price -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.price | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/products/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>","import { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\n\n  product: Product = {\n    id: null,\n    name: null,\n    price: 0\n  }\n\n  constructor(private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n\n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n\n  updateProduct(): void {\n    this.productService.update(this.product).subscribe(() => {\n      this.productService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.router.navigate(['/products'])\n    })\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.name\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.price\" name=\"price\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(private auth: LoginService) { }\n\n  ngOnInit(): void {\n  \n  }\n\n  sairSistema(){\n    \n    this.auth.sairSistema();\n    \n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" opened\n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" >\n            <mat-nav-list class=\"nav-list\">\n            \n                <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <!--Menus de cadastro-->    \n            <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menuColor\" >\n                <i class=\"material-icons\">storefront</i>\n                \n                <mat-menu #menu=\"matMenu\">\n                        <a mat-list-item routerLink=\"products\" >\n                            <i class=\"material-icons\">\n                                storefront\n                            </i>\n                            Produtos\n                        </a>\n                        <a mat-list-item routerLink=\"usuarios\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Usuários\n                        </a>\n\n                        <a mat-list-item routerLink=\"chamados\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Solicitações\n                        </a>\n                </mat-menu>\n            </button>\n\n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from './../../../models/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\n\n\n\n@Component({\n  selector: 'app-usuario-create',\n  templateUrl: './usuario-create.component.html',\n  styleUrls: ['./usuario-create.component.css']\n})\nexport class UsuarioCreateComponent implements OnInit {\n  \nempresa : Observable<Empresa[]>;\ndadosEmpresa : Empresa = new Empresa();\nusuario : Usuario = new Usuario();\n\n  constructor(private usuarioService : UsuarioService,\n              private empresaService :EmpresaService,\n              private router : Router) { }\n\n  ngOnInit(): void {\n  \n    this.buscarEmpresa();\n  }\n  createUsuario() : void {\n    this.usuario.empresaId = this.dadosEmpresa.id;\n    this.usuarioService.create(this.usuario).subscribe(() => {\n      this.usuarioService.showMessage('Usuário Criado!');\n      this.router.navigate(['usuarios']);\n    })\n\n  }\n  cancel() : void {\n\n    this.router.navigate(['usuarios'])\n  }\n\n  buscarEmpresa() {\n    this.empresa = this.empresaService.read();\n  }\n}\n","<mat-card>\n    <mat-card-title>Novo Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"dadosEmpresa.id\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa | async\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        \n            </form>\n\n        <button mat-raised-button (click)=\"createUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/modelLogin';\n\n@Component({\n  selector: 'app-usuario-delete',\n  templateUrl: './usuario-delete.component.html',\n  styleUrls: ['./usuario-delete.component.css']\n})\nexport class UsuarioDeleteComponent implements OnInit {\nempresa : Empresa\nusuario : Usuario;\n\n  constructor(private usuarioService : UsuarioService,\n              private empresaService : EmpresaService,\n              private router : Router,\n              private route : ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.usuarioService.readById(id).subscribe(usuario => {\n      this.usuario = usuario;\n      \n      this.buscarEmpresa().subscribe(empresa =>{\n        this.empresa = empresa;\n        this.usuario.empresaId = this.empresa.nomeFantasia;\n        this.usuario.senha = '******';\n      });\n    })\n  }\n\n  deleteUsuario(): void{\n    this.usuarioService.delete(this.usuario.id).subscribe(() => {\n      this.usuarioService.showMessage(\"Usuário Excluído com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n  }\n  cancel():void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa(){\n    return this.empresaService.readById(this.usuario.empresaId);\n  }\n}\n","Search\n\n<mat-card>\n    <mat-card-title>Novo Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(value)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"usuario.empresaId\" name=\"empresaId\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteUsuario()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { DataSource } from '@angular/cdk/collections';\nimport { MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from '../../../models/modelLogin';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n\n@Component({\n  selector: 'app-usuario-read',\n  templateUrl: './usuario-read.component.html',\n  styleUrls: ['./usuario-read.component.css']\n})\nexport class UsuarioReadComponent implements OnInit {\n  usuario: Usuario[]\n  empresa: Empresa\n  displayedColumns = ['id','nome','email','telefone','login', 'senha', 'empresaId','action']  \n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<UsuarioReadComponent>;\n  dataSource: UsuarioReadComponent;\n\n\n  \n  constructor(private usuarioService: UsuarioService,\n              private empresaService: EmpresaService\n             ) \n             { }\n\n  ngOnInit(): void {\n    this.usuarioService.read().subscribe(usuario => {\n      this.usuario = usuario;\n      \n\n      usuario.forEach(element => {\n        \n        this.empresaService.readById(element.empresaId).subscribe(empresa => {\n          this.empresa = empresa;\n          element.empresaId  = this.empresa.razaoSocial;\n          element.senha = '******';\n          element.passwordTemp = '******'\n\n        });\n        \n\n      });\n      \n    \n    })\n    this.ngAfterViewInit();\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"usuario\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Nome -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n      <!-- email -->\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef>E-mail</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.email}}</td>\n      </ng-container>\n\n        <!-- telefone -->\n        <ng-container matColumnDef=\"telefone\">\n            <th mat-header-cell *matHeaderCellDef>Tel:</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.telefone}}</td>\n        </ng-container>\n\n        <!-- Login -->\n        <ng-container matColumnDef=\"login\">\n            <th mat-header-cell *matHeaderCellDef>Login</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.login}}</td>\n        </ng-container>\n\n        <!-- senha -->\n        <ng-container matColumnDef=\"senha\">\n            <th mat-header-cell *matHeaderCellDef>Senha</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.senha}}</td>\n        </ng-container>   \n        \n        <!-- Empresa -->\n        <ng-container matColumnDef=\"empresaId\">\n            <th mat-header-cell *matHeaderCellDef>Empresa</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.empresaId}}</td>\n        </ng-container>  \n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/usuarios/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/usuarios/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    \n    <mat-paginator #paginator\n      [length]=\"usuario.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"5\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from './../../../models/modelLogin';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-update',\n  templateUrl: './usuario-update.component.html',\n  styleUrls: ['./usuario-update.component.css']\n})\nexport class UsuarioUpdateComponent implements OnInit {\n\n  empresa : Observable<Empresa[]>;\n  dadosEmpresa : Empresa = new Empresa();\n  usuario : Usuario = new Usuario();\n\n  constructor(private usarioService : UsuarioService,\n              private empresaService : EmpresaService,\n             private router : Router,\n             private route: ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.usarioService.readById(id).subscribe(usuario => {\n      this.usuario = usuario;\n      this.usuario.senha = '*****';\n      this.usuario.passwordTemp = '';\n\n      this.buscarEmpresa();\n    });\n\n  }\n\n  updateUsuario(): void {\n    this.usarioService.update(this.usuario).subscribe(() => {\n      this.usarioService.showMessage(\"Usuário Atualizado com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n\n  }\n\n\n  cancel(): void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa() {\n    this.empresa = this.empresaService.read();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\"\n                [(ngModel)]=\"usuario.email\" name=\"email\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Telefone\"\n                [(ngModel)]=\"usuario.telefone\" name=\"telefone\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaId\" placeholder=\"EmpresaID\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa | async\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>usuario works!</p>\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","export class Empresa {\r\n    id ? :string\r\n    cnpj: string\r\n    inscricaoEstadual: string\r\n    inscricaoMunicipal: string\r\n    razaoSocial: string\r\n    nomeFantasia: string\r\n}\r\n","export class Usuario {\r\n    id ? :number\r\n    nome: string\r\n    email: string\r\n    telefone:number\r\n    login : string\r\n    senha : string\r\n    empresaId : string\r\n    loginTemp : string\r\n    passwordTemp : string\r\n}\r\n","import { Empresa } from './../models/empresa/ModelEmpresa';\nimport { environment } from './../../environments/environment.prod';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(private snackbar : MatSnackBar,\n              private http : HttpClient\n              ) \n              { \n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.apiUrl + '/empresa';\n              }\n\n\n   showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n}\n\n//Criar empresa\ncreate(empresa : Empresa): Observable<Empresa>{\n  return this.http.post<Empresa>(this.environmentUrl, empresa).pipe(\n    map(obj => obj),\n    catchError(e => this.erroHandler(e))\n  );\n}\n\n // Buscar todos Get All\n read(): Observable<Empresa[]>{\n  return this.http.get<Empresa[]>(this.environmentUrl).pipe(\n    map(obj => obj),\n    catchError(e => this.erroHandler(e))\n  );\n}\n\n\n//Buscar um produto por id\nreadById(id: string): Observable<Empresa>{\n  const url = `${this.environmentUrl}/${id}`      \n    return this.http.get<Empresa>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.erroHandler(e))\n    );\n }\n\n // Atualizar Produto por ID\n update(empresa: Empresa): Observable<Empresa> {\n  const url = `${this.environmentUrl}/${empresa.id}`      \n  return this.http.put<Empresa>(url, empresa).pipe(\n    map(obj => obj),\n    catchError(e => this.erroHandler(e))\n  );\n }\n\n delete(id: number) : Observable<Empresa>{\n  const url = `${this.environmentUrl}/${id}`      \n  return this.http.delete<Empresa>(url).pipe(\n    map(obj => obj),\n    catchError(e => this.erroHandler(e))\n  );\n\n }\n\n\nerroHandler(e: any) : Observable<any>{\n  this.showMessage(\"Erro ao Acessar a API!\", true )\n  return EMPTY  \n}\n\n\n}\n","\nimport { environment } from './../../environments/environment';\nimport { Usuario } from '../models/modelLogin';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n \n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n               \n              ) { \n                this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.apiUrl + '/usuarios';\n              }\n\n\n  logarSistema(usuario: Usuario) {\n\n    if(usuario.login === usuario.loginTemp &&\n      usuario.senha === usuario.passwordTemp){\n        this.usuarioAutenticado = true;\n\n        this.mostrarMenuEmitter.emit(true);\n        this.mostrarLoginEmitter.emit(false)\n        this.router.navigate(['/']);\n        this.showMessage(\"Seja Bem Vindo!  \" + usuario.login , false);\n      }else{\n        this.usuarioAutenticado = false;\n        this.mostrarMenuEmitter.emit(false);\n        this.mostrarLoginEmitter.emit(true)\n        this.showMessage(\"Usuário ou senha Inválido!\", true);\n    }\n  }\n\n \n  readByIdSenha(login: string, senha: string): Observable<Usuario>{\n    const url = `${this.environmentUrl}/${login}/${senha}`      \n      return this.http.get<Usuario>(url).pipe(\n        map(obj => obj),\n        catchError(e => this.erroHandler(e))\n      );\n   }\n \n \n  buscarUsuario(): Observable<Usuario[]>{\n    return this.http.get<Usuario[]>(this.environmentUrl).pipe(\n      map(obj => obj),\n      catchError(e => this.erroHandler(e))\n    );\n    \n  }\n\n  erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY\n  }\n\n\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n\n    this.router.navigate(['/login']);\n    this.showMessage(\"Até logo! \", false);\n  }\n\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n    \n      \n\n}\n\n\n}\n\n\n\n\n\n","import { environment } from '../../environments/environment';\nimport { Component } from '@angular/core';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from './../models/product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(private snackbar : MatSnackBar,\n              private http : HttpClient\n              \n             ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.apiUrl + '/products';\n             }\n\n    showMessage(msg : string, isErro: boolean = false) : void { \n        this.snackbar.open(msg, 'X' , { \n          duration : 3000,\n          horizontalPosition: \"right\",\n          verticalPosition : \"top\",\n          panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n        })\n\n    }\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.environmentUrl, product).pipe(\n        map(obj => obj),\n        catchError(e => this.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.environmentUrl).pipe(\n        map(obj => obj),\n        catchError(e => this.erroHandler(e))\n      );\n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n      return this.http.get<Product>(url).pipe(\n        map(obj => obj),\n        catchError(e => this.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto por ID\n   update(product: Product): Observable<Product> {\n    const url = `${this.environmentUrl}/${product.id}`      \n    return this.http.put<Product>(url, product).pipe(\n      map(obj => obj),\n      catchError(e => this.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Product>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.erroHandler(e))\n    );\n\n   }\n    \n   erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY  \n  }\n\n}\n","import { catchError, map } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Usuario } from './../models/modelLogin';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { Route } from '@angular/compiler/src/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n\n  constructor(\n              private snackbar : MatSnackBar,\n              private http: HttpClient\n             ) {\n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.apiUrl + '/usuarios';\n              }\n\n      // Buscar todos Get All\n      read(): Observable<Usuario[]>{\n        return this.http.get<Usuario[]>(this.environmentUrl).pipe(\n          map(obj => obj),\n          catchError(e => this.erroHandler(e))\n        );\n      }\n\n      // Criar usuario\n      create(usuario : Usuario) : Observable<Usuario>{\n        return this.http.post<Usuario>(this.environmentUrl, usuario).pipe(\n          map(obj => obj),\n          catchError(e => this.erroHandler(e))\n        )};\n\n      // Atualizar usuario por ID\n      update(usuario: Usuario): Observable<Usuario> {\n        const url = `${this.environmentUrl}/${usuario.id}`      \n        return this.http.put<Usuario>(url, usuario).pipe(\n          map(obj => obj),\n          catchError(e => this.erroHandler(e))\n        );\n      }\n     \n      //Buscar um usuario por id\n      readById(id: string): Observable<Usuario>{\n        const url = `${this.environmentUrl}/${id}`      \n          return this.http.get<Usuario>(url).pipe(\n            map(obj => obj),\n            catchError(e => this.erroHandler(e))\n          );\n       }\n\n      //Delete por ID\n       delete(id: number) : Observable<Usuario>{\n        const url = `${this.environmentUrl}/${id}`      \n        return this.http.delete<Usuario>(url).pipe(\n          map(obj => obj),\n          catchError(e => this.erroHandler(e))\n        );\n       }\n\n\n\n      erroHandler(e: any) : Observable<any>{\n        this.showMessage(\"Erro ao Acessar a API!\", true )\n        return EMPTY\n      }\n\n\n      showMessage(msg : string, isErro: boolean = false) : void { \n        this.snackbar.open(msg, 'X' , { \n          duration : 3000,\n          horizontalPosition: \"right\",\n          verticalPosition : \"top\",\n          panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n        })\n\n      }\n}\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-crud',\n  templateUrl: './chamado-crud.component.html',\n  styleUrls: ['./chamado-crud.component.css']\n})\nexport class ChamadoCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToChamadoCreate():void{\n    this.router.navigate(['chamados/read'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToChamadoCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-chamado-read></app-chamado-read>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>empresa works!</p>\n","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService :HeaderService) {\n    this.headerService.headerData = {\n      title : 'Início',\n      icon : 'home',\n      routeUrl : ''\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n    <mat-card-subtitle>\n            Sistema para exemplificar o cadastro em angular! \n    </mat-card-subtitle>\n\n</mat-card>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router,\n             private headerService : HeaderService\n             ) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<button mat-raised-button (click)=\"navigateToProductsCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-product-read></app-product-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-crud',\n  templateUrl: './usuario-crud.component.html',\n  styleUrls: ['./usuario-crud.component.css']\n})\nexport class UsuarioCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToUsuarioCreate(): void{\n    this.router.navigate(['usuarios/create']);\n  }\n}\n","<button mat-raised-button (click)=\"navigateToUsuarioCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n<app-usuario-read></app-usuario-read>\n\n","export const environment = {\n  production: true,\n  environmentName: \"Prod\",\n  apiUrl:'http://localhost:3001'\n};\n","export const environment = {\n  production: false,\n  environmentName: \"QA\",\n  apiUrl:'http://localhost:3001'\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}