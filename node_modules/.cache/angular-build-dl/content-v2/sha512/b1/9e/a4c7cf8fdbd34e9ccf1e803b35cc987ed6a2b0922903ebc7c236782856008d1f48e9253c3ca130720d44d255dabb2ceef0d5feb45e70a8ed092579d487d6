{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Negocio/Aplicacao.ts","./src/app/Negocio/Endpoint.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.conponent.html","./src/app/app.module.ts","./src/app/components/chamados/chamado-create/chamado-create.component.ts","./src/app/components/chamados/chamado-create/chamado-create.component.html","./src/app/components/chamados/chamado-delete/chamado-delete.component.ts","./src/app/components/chamados/chamado-delete/chamado-delete.component.html","./src/app/components/chamados/chamado-read/chamado-read.component.ts","./src/app/components/chamados/chamado-read/chamado-read.component.html","./src/app/components/chamados/chamado-update/chamado-update.component.ts","./src/app/components/chamados/chamado-update/chamado-update.component.html","./src/app/components/empresa/empresa-create/empresa-create.component.ts","./src/app/components/empresa/empresa-create/empresa-create.component.html","./src/app/components/empresa/empresa-delete/empresa-delete.component.ts","./src/app/components/empresa/empresa-delete/empresa-delete.component.html","./src/app/components/empresa/empresa-read/empresa-read.component.ts","./src/app/components/empresa/empresa-read/empresa-read.component.html","./src/app/components/empresa/empresa-update/empresa-update.component.ts","./src/app/components/empresa/empresa-update/empresa-update.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/product/product-create/product-create.component.ts","./src/app/components/product/product-create/product-create.component.html","./src/app/components/product/product-delete/product-delete.component.ts","./src/app/components/product/product-delete/product-delete.component.html","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","./src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","./src/app/components/product/product-read/product-read.component.ts","./src/app/components/product/product-read/product-read.component.html","./src/app/components/product/product-update/product-update.component.ts","./src/app/components/product/product-update/product-update.component.html","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/template/header/header.service.ts","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/components/usuario/usuario-create/usuario-create.component.ts","./src/app/components/usuario/usuario-create/usuario-create.component.html","./src/app/components/usuario/usuario-delete/usuario-delete.component.ts","./src/app/components/usuario/usuario-delete/usuario-delete.component.html","./src/app/components/usuario/usuario-read/usuario-read.component.ts","./src/app/components/usuario/usuario-read/usuario-read.component.html","./src/app/components/usuario/usuario-update/usuario-update.component.ts","./src/app/components/usuario/usuario-update/usuario-update.component.html","./src/app/components/usuario/usuario.component.ts","./src/app/components/usuario/usuario.component.html","./src/app/diretivas/red.directive.ts","./src/app/models/acessoModel.ts","./src/app/models/usuarios/GrupoUsuarios.ts","./src/app/models/usuarios/enumUsuarios.ts","./src/app/models/usuarios/modelLogin.ts","./src/app/services/login.service.ts","./src/app/services/product.service.ts","./src/app/services/service-all.service.ts","./src/app/services/util.service.ts","./src/app/views/chamado-crud/chamado-crud.component.ts","./src/app/views/chamado-crud/chamado-crud.component.html","./src/app/views/empresa/empresa.component.ts","./src/app/views/empresa/empresa.component.html","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/views/product-crud/product-crud.component.ts","./src/app/views/product-crud/product-crud.component.html","./src/app/views/usuario-crud/usuario-crud.component.ts","./src/app/views/usuario-crud/usuario-crud.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export enum Aplicacao{\r\n  Agenda = 'Agenda',\r\n  FrenteCaixa = 'FrenteCaixa'\r\n}\r\n\r\nexport const TipoAplicacao = new Map<string, string>([\r\n  ['Agenda', 'Agenda'],\r\n  ['FrenteCaixa', 'FrenteCaixa'],\r\n\r\n])","export enum Endpoint {\r\n    Empresa = '/Empresa',\r\n    GrupoUsuario = '/GrupoUsuario',\r\n    Produto = '/Produto',\r\n    Usuario = '/Usuario',\r\n    Token = '/Token'\r\n}","import { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\n\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\n\n\nconst routes: Routes = [\n  {\n    path : \"\",\n    component:HomeComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"products\",\n    component: ProductCrudComponent\n  },\n  {\n    path: \"products/create\",\n    component : ProductCreateComponent\n  },\n  {\n    path: \"products/update/:id\",\n    component : ProductUpdateComponent\n  },\n  {\n    path: \"products/delete/:id\",\n    component : ProductDeleteComponent\n  },\n  {\n    path: \"usuarios\",\n    component : UsuarioCrudComponent\n  },\n  {\n    path: \"usuarios/create\",\n    component : UsuarioCreateComponent\n  },\n  {\n    path: \"usuarios/update/:id\",\n    component : UsuarioUpdateComponent\n  },\n  {\n    path: \"usuarios/delete/:id\",\n    component : UsuarioDeleteComponent\n  },\n  {\n    path: \"chamados\",\n    component : ChamadoCrudComponent\n  },\n  {\n    path: \"chamados/create\",\n    component : ChamadoCreateComponent\n  },\n  {\n    path: \"chamados/update/:id\",\n    component : ChamadoUpdateComponent\n  },\n  {\n    path: \"chamados/delete/:id\",\n    component : ChamadoDeleteComponent\n  },\n\n  //Rotas de empresa\n  {\n    path: \"empresa\",\n    component : EmpresaComponent\n  },\n  {\n    path: \"empresa/create\",\n    component : EmpresaCreateComponent\n  },\n  {\n    path: \"empresa/update/:id\",\n    component : EmpresaUpdateComponent\n  },\n  {\n    path: \"empresa/delete/:id\",\n    component : EmpresaDeleteComponent\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { LoginService } from '../app/'\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\n\n\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './services/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\n\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n\n\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { UsuarioReadComponent } from './components/usuario/usuario-read/usuario-read.component';\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\nimport { ChamadoReadComponent } from './components/chamados/chamado-read/chamado-read.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaReadComponent } from './components/empresa/empresa-read/empresa-read.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    UsuarioCrudComponent,\n    UsuarioComponent,\n    UsuarioReadComponent,\n    UsuarioCreateComponent,\n    UsuarioDeleteComponent,\n    UsuarioUpdateComponent,\n    ChamadoCrudComponent,\n    ChamadoCreateComponent,\n    ChamadoUpdateComponent,\n    ChamadoDeleteComponent,\n    ChamadoReadComponent,\n    EmpresaComponent,\n    EmpresaCreateComponent,\n    EmpresaUpdateComponent,\n    EmpresaDeleteComponent,\n    EmpresaReadComponent,\n   \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    FlexLayoutModule,\n\n\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-create',\n  templateUrl: './chamado-create.component.html',\n  styleUrls: ['./chamado-create.component.css']\n})\nexport class ChamadoCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-delete',\n  templateUrl: './chamado-delete.component.html',\n  styleUrls: ['./chamado-delete.component.css']\n})\nexport class ChamadoDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-read',\n  templateUrl: './chamado-read.component.html',\n  styleUrls: ['./chamado-read.component.css']\n})\nexport class ChamadoReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-update',\n  templateUrl: './chamado-update.component.html',\n  styleUrls: ['./chamado-update.component.css']\n})\nexport class ChamadoUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-update works!</p>\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from './../../../services/util.service';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { ContatoService } from './../../../services/contato.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { cnpj } from 'cpf-cnpj-validator';\n\n@Component({\n  selector: 'app-empresa-create',\n  templateUrl: './empresa-create.component.html',\n  styleUrls: ['./empresa-create.component.css']\n})\nexport class EmpresaCreateComponent implements OnInit {\n\n \nempresa : Empresa = {\n    dtCriacao : null,\n    cnpj: null,\n    razaoSocial: null,\n    nomeFantasia: null,\n    inscricaoEstadual: null,\n    inscricaoMunicipal: null,\n    cnes : null,\n    codPIS : null,\n    observacao : null,\n    codCnae : null,\n    empresaPai : null,\n    criadoPor : null,\n    bloqueado : null\n    \n}\n\n\n\n  constructor(private utilService : UtilService,\n              private router : Router,\n              private servicoEmpresa : ServiceAllService<Empresa>\n              )\n             { }\n\n  ngOnInit(): void {\n   \n  }\n\n  cadastrarEmpresa(){\n    \n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n    let empPai = Number(localStorage.getItem(\"empId\"));\n    this.empresa.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.empresa.dtCriacao = new Date;\n    this.empresa.empresaPai = empPai;\n       \n    this.empresa.bloqueado = false;\n    \n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.utilService.showMessage(\"Você não possui permissão para cadastro de empresas\", false)\n\n    }else\n    {\n     if(cnpj.isValid(this.empresa.cnpj)){\n       this.servicoEmpresa.read(Endpoint.Empresa).subscribe(bemp => {\n          bemp = bemp;\n         let retornoEmp = bemp.filter(x => x.cnpj == this.empresa.cnpj)\n         let retornomaster = bemp.filter(x => x.id == empPai);\n\n          if (retornoEmp.length == 0 ){\n            \n            if(grpId == TipoUsuario.Administrador){\n\n                this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                  emp = emp;\n                        \n                  let empresaPai = emp.id;\n                         \n                              emp.empresaPai = empresaPai;\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                         \n                          this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                          this.router.navigate(['empresa']);\n                        })\n                }else if (grpId == TipoUsuario.Master && retornomaster.filter(x => x.empresaPai == empPai).length > 0)\n                {\n                  \n                  this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                    emp = emp;\n                          \n                    let empresaPai = emp.id;\n                          \n                              emp.bloqueado = true;\n                              emp.empresaPai = Number(localStorage.getItem(\"empId\"));\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                       \n                            this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                            this.router.navigate(['empresa']);\n                          })\n                }else{\n                  this.utilService.showMessage(\"Para criação de uma empresa precisa está logado com a Matriz.!\",false);\n                }\n          }\n          else\n           this.utilService.showMessage(\"Cnpj já cadastrado!\",false);\n        });  \n      }\n      else{\n        this.utilService.showMessage(\"Cnpj inválido\",false);\n      }\n    }\n  }\n\n  cancel(){\n    this.router.navigate(['empresa'])\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Empresa\">\n        <section>\n\n        <div class=\"container\">\n\n            <mat-card>\n                <mat-card-title>Nova Empresa</mat-card-title>\n                    <form>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cnpj\" \n                             [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Nome\"\n                            [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Razão Social\"\n                            [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Estadual\"\n                            [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Municipal\"\n                            [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"CNES\"\n                            [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. PIS\"\n                            [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. CNAE\"\n                            [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Observação\"\n                            [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n                        </mat-form-field>\n            \n                    </form>\n            \n                    <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"cadastrarEmpresa()\" color=\"primary\" > \n                        Salvar\n                    </button>\n                    \n                    <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n                        Cancelar\n                    </button>\n            </mat-card>\n\n        </div>\n\n        </section>\n</mat-tab>\n<mat-tab label=\"Contato\"> Contatos</mat-tab>\n<mat-tab label=\"Endereços\">Endereços </mat-tab>\n</mat-tab-group>","import { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { CanActivate, Router, ActivatedRoute } from '@angular/router';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-empresa-delete',\n  templateUrl: './empresa-delete.component.html',\n  styleUrls: ['./empresa-delete.component.css']\n})\nexport class EmpresaDeleteComponent implements OnInit {\n\n\n  empresa : Empresa\n  constructor(private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private router : Router,\n              private route : ActivatedRoute,\n              private mensagem : UtilService\n\n            ) { }\n\n  ngOnInit(): void {\n    this.BuscarEmpresa();\n  }\n\n\n  excluirEmpresa(){\n    \n    let existeUsuario = null;\n    \n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(usr => {\n        usr = usr;\n        existeUsuario = usr.filter(x => x.empresaId == this.empresa.id.toString())\n       \n        if (existeUsuario.length > 0)\n        {\n          this.mensagem.showMessage(\"Empresa não pode ser excluida porque possui Dependências de usuários.\", false)\n        }    \n        else{\n            let grpId = Number(localStorage.getItem(\"grpUs\"));\n          \n            if (grpId == TipoUsuario.Administrador){\n        \n              this.serviceEmpresa.delete(this.empresa.id, Endpoint.Empresa).subscribe(()=>{\n                this.mensagem.showMessage(\"Empresa excluida com sucesso !\", false);\n                this.router.navigate(['/empresa'])\n              })\n            }\n              else{\n                this.mensagem.showMessage(\"Permissão de exclusão negada !\", false);\n                this.router.navigate(['/empresa'])\n              }\n        }\n    });\n  }\n\n  cancel(){\n    this.router.navigate(['/empresa'])\n  }\n\n   BuscarEmpresa(){\n    const id = this.route.snapshot.paramMap.get('id');\n    \n    this.serviceEmpresa.readById(id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n\n    })\n\n   }\n\n\n}\n","<mat-card>\n    <mat-card-title>Excluir Empresa</mat-card-title>\n        <form>\n                       \n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n            </mat-form-field>\n           \n            <mat-form-field>\n                <input matInput placeholder=\"Nome Fantasia\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n            </mat-form-field>\n           \n           \n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"excluirEmpresa()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\r\nimport { Endpoint } from './../../../Negocio/Endpoint';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceAllService } from './../../../services/service-all.service';\r\nimport { Endereco } from './../../../models/endereco/modelEndereco';\r\nimport { Contato } from './../../../models/contato/modelContato';\r\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { elementAt } from 'rxjs/operators';\r\nimport { TipoUsuarioSistema } from 'src/app/models/usuarios/enumUsuarios';\r\n\r\n@Component({\r\n  selector: 'app-empresa-read',\r\n  templateUrl: './empresa-read.component.html',\r\n  styleUrls: ['./empresa-read.component.css']\r\n})\r\nexport class EmpresaReadComponent implements OnInit {\r\n\r\n  \r\n  empresa: Empresa[];\r\n  empresas: Empresa[];\r\n  contato : Contato;\r\n  endereco : Endereco;\r\n  displayedColumns = ['id','cnpj', 'razaoSocial','nomeFantasia','inscricaoEstadual','inscricaoMunicipal','bloqueado','action']  \r\n\r\n  constructor(private router : Router,\r\n              private serviceEmpresa : ServiceAllService<Empresa>\r\n             ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.buscarEmpresa();\r\n\r\n  }\r\n\r\n  buscarEmpresa(): void \r\n  {\r\n    let filtroEmpresa = (<HTMLSelectElement>document.getElementById('busca')).value;\r\n    let empId = localStorage.getItem(\"empId\");\r\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\r\n\r\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\r\n      emp = emp;\r\n\r\n      \r\n      this.empresa =  new Array();\r\n\r\n          if(grpId == TipoUsuario.Administrador)\r\n          {\r\n            emp.forEach(element => {\r\n            this.empresa.push(element)\r\n             });\r\n          }\r\n          else if(grpId == TipoUsuario.Master)\r\n          {\r\n            emp.forEach(master => {\r\n              if(master.empresaPai.toString()== empId) \r\n              this.empresa.push(master)\r\n            });\r\n\r\n          }\r\n\r\n      let empresaFIltrada = new Array();\r\n      if (filtroEmpresa){\r\n           \r\n        for (let index = 0; index < this.empresa.length; index++) {\r\n          const element = this.empresa[index];\r\n            if (element.nomeFantasia.toLowerCase().includes(filtroEmpresa.toLowerCase()))\r\n            empresaFIltrada.push(element);\r\n        }\r\n        this.empresa = new Array();\r\n        this.empresa = empresaFIltrada;    \r\n      }else{\r\n        this.empresa = this.empresa;\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n\r\n  navigateToEmpresaCreate() : void {\r\n    this.router.navigate(['empresa/create'])\r\n  }\r\n\r\n}\r\n  \r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n","<div>\n  <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n   \n   <span (click)=\"buscarEmpresa()\">\n     <i class=\"material-icons\">search</i>\n   </span>\n</div>\n\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"empresa\">\n      <!-- Id Column -->\n      \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"cnpj\">\n        <th mat-header-cell *matHeaderCellDef>Cnpj</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.cnpj}}</td>\n      </ng-container>\n      \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"razaoSocial\">\n        <th mat-header-cell *matHeaderCellDef>Razão Social</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.razaoSocial}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"nomeFantasia\">\n        <th mat-header-cell *matHeaderCellDef>Nome Fantasia</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n      </ng-container>\n\n      <!-- Name Price -->\n      <ng-container matColumnDef=\"inscricaoEstadual\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Estadual</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoEstadual}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"inscricaoMunicipal\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Municipal</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoMunicipal}}</td>\n      </ng-container>\n\n      <!-- status -->\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n          </td>\n        </ng-container>\n\n       \n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/empresa/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/empresa/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n\n<div class=\"footer\">\n  <span (click)=\"navigateToEmpresaCreate()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { cnpj } from 'cpf-cnpj-validator';\n\n@Component({\n  selector: 'app-empresa-update',\n  templateUrl: './empresa-update.component.html',\n  styleUrls: ['./empresa-update.component.css']\n})\nexport class EmpresaUpdateComponent implements OnInit {\n\n  empresa : Empresa;\n  usuariologado : boolean;\n  constructor(private router : Router,\n              private route: ActivatedRoute,\n              private empresaService : ServiceAllService<Empresa>,\n              private mensagem : UtilService\n              ) { }\n\n  ngOnInit(): void {\n  \n  if (Number(localStorage.getItem(\"grpUs\")) == TipoUsuario.Administrador)\n     this.usuariologado = true;\n  \n  this.ObterEmpresa();\n  \n  }\n\n\n  atualizarEmpresa() : void {\n    \n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.mensagem.showMessage(\"Você não possui permissão para editar o cadastro de empresas\", false)\n\n    }else\n    {\n     if (cnpj.isValid(this.empresa.cnpj)){\n               try {\n                        this.empresaService.update(this.empresa, Endpoint.Empresa).subscribe(()=>{\n                        this.mensagem.showMessage(\"Empresa atualizada com sucesso\", false)\n                        this.router.navigate(['/empresa'])\n                      });\n\n                    } catch (error) {\n                      this.mensagem.showMessage(\"Erro na atualização dos dados \" + error, true);\n                    }\n\n      }else{\n        this.mensagem.showMessage(\"Cnpj Inválido \" , false);\n      }\n      }\n  }\n\n  cancel(){\n    this.router.navigate(['/empresa'])\n  }\n\n  \n  ObterEmpresa() {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.empresaService.readById(id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })    \n       \n  }\n  \n\n}\n\n\n","<mat-card>\n    <mat-card-title>Atualizar dados da Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" disabled=\"true\" name=\"cnpj\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Razão Social\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Estadual\"\n                [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Municipal\"\n                [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"CNES\"\n                [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. PIS\"\n                [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. CNAE\"\n                [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n            </mat-form-field>\n            \n            <div *ngIf=\"usuariologado\">\n                <mat-form-field >\n                            <input matInput placeholder=\"Bloqueado\">\n                                        <input name=\"status\" [(ngModel)]=\"empresa.bloqueado\" [checked]=\"empresa.bloqueado\" type=\"checkbox\">\n                </mat-form-field>\n            </div>\n          \n            <mat-form-field>\n    \n                <input matInput placeholder=\"Observação\"\n                [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"atualizarEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Endpoint } from './../../Negocio/Endpoint';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Acesso } from '../../models/acessoModel';\nimport { UtilService } from './../../services/util.service';\nimport { LoginService } from './../../services/login.service';\n\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\nacesso : Acesso = new Acesso();\ncomboEmpresa : Empresa[];\n\n\nconstructor(private router :Router,\n             private authservice : LoginService,\n             private ServiceEmpresa : ServiceAllService<Empresa>,\n            \n             ) { }\n\n  ngOnInit(): void {\n   this.carregaComboEmpresa();\n  }\n  \n  logarSistema(){\n    this.authservice.logarSistema(this.acesso);\n  }\n  \n  carregaComboEmpresa(){\n    this.ServiceEmpresa.read(Endpoint.Empresa).subscribe(emp =>{\n    this.comboEmpresa = emp;\n    });\n  }\n\n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"acesso.empresaId\" placeholder=\"empId\" >\n                    <mat-option *ngFor=\"let empresa of comboEmpresa \" [value]=\"empresa.id\">\n                        {{empresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"acesso.login\" name=\"name\" placeholder=\"login\">\n                 \n            </mat-form-field>\n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"acesso.senha\" type=\"password\" name=\"senha\">\n                \n            </mat-form-field>\n        </form>\n        \n            <div *ngIf=\"acesso.login && acesso.senha\">\n                <button mat-raised-button (click)=\"logarSistema()\" color=\"primary\"> \n                    Login\n                </button> \n            </div>\n          \n   \n       \n        \n\n</mat-card>        \n","import { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Aplicacao, TipoAplicacao } from './../../../Negocio/Aplicacao';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\nimport { stringify } from 'querystring';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  comboProduto =  [];\n  empresa : Empresa[];\n  comboEmpresa : Empresa;\n\n    product : Product = {  \n    dtCriacao : null,\n    criadoPor : null,\n    nome : null,\n    valor : 0,\n    empresaId : null,\n    bloqueado : false,\n    }\n\n  constructor(\n              private utilService : UtilService,\n              private router : Router,\n              private ProdutoEmpresa : ServiceAllService<Product>,\n              private ServiceEmpresa : ServiceAllService<Empresa>\n               ) { }\n\n  ngOnInit(): void {\n    this.buscarProduto();\n    this.buscarEmpresa()\n  }\n\n  associarProdutoEmpresa() : void {\n\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    //this.product.empresaId = Number(localStorage.getItem(\"empId\"));\n    this.product.dtCriacao = new Date;\n    this.product.bloqueado = false;\n    this.ProdutoEmpresa.create(this.product, Endpoint.Produto).subscribe(() => {\n    this.utilService.showMessage('Produto Criado!');\n    this.router.navigate(['products']);\n      \n    })\n    \n  }\n\n  cancel() : void {\n\n    this.router.navigate(['products'])\n  }\n\n  buscarProduto(){\n    \n      TipoAplicacao.forEach(element => {\n        this.comboProduto.push(element)\n      });\n     return this.comboProduto;\n  }\n  buscarEmpresa(){\n    this.ServiceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })\n  }\n  \n}\n","<mat-card>\n    <mat-card-title>Habilitar - Produto Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Produto\">\n                <p></p>\n                <mat-select [(value)]=\"product.nome\" placeholder=\"productId\" >\n                    <mat-option *ngFor=\"let produto of comboProduto \" [value]=\"produto\">\n                         {{produto}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"product.empresaId\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let comboEmpresa of empresa\" [value]=\"comboEmpresa.id\">\n                            {{comboEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"associarProdutoEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product = {\n    id: null,\n    dtCriacao : null,\n    criadoPor : null,\n    nome: null,\n    valor : 0,\n    empresaId : null,\n    bloqueado : null,\n  }\n\n  constructor(private productService : ProductService,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute,\n              private deleteProduto : ServiceAllService<Product> ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n  deleteProduct():void{\n      this.deleteProduto.delete(this.product.id, Endpoint.Produto).subscribe(() => {\n        this.utilService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.router.navigate(['/products'])\n      })\n    \n  }\n\n  cancel():void{\n    this.router.navigate(['/products'])\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                [(ngModel)]=\"product.nome\" name=\"nome\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { stringify } from 'querystring';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router } from '@angular/router';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../models/produtos/product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\n\ndisplayedColumns = ['id','nome', 'valor','empresaId','bloqueado','action']  \n\n  constructor(private router : Router,\n              private serviceProduto : ServiceAllService<Product>,\n              private serviceEmpresa : ServiceAllService<Empresa>\n             ) { }\n\n  ngOnInit(): void {\n      this.serviceProduto.read(Endpoint.Produto).subscribe(product => {\n        product = product;\n\n        this.products = new Array;\n        \n        product.forEach(element => {\n            this.serviceEmpresa.readById(element.empresaId.toString(), Endpoint.Empresa).subscribe(emp => {\n              emp = emp;\n\n              element.empresaId = emp.razaoSocial; \n                this.products.push(element);\n            })\n        });\n\n        \n      })\n  }\n\n  navigateToProdutoCreate() : void {\n    this.router.navigate(['products/create'])\n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n       <!-- Name Price -->\n       <ng-container matColumnDef=\"valor\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.valor | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"empresaId\">\n        <th mat-header-cell *matHeaderCellDef>Empresa</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.empresaId}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Status</th>\n        <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n        </td>\n      </ng-container>\n\n\n\n\n      \n\n\n\n\n\n\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/products/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n\n  <div class=\"footer\">\n    <span (click)=\"navigateToProdutoCreate()\">\n      <i class=\"material-icons\">person_add</i>\n    </span>\n  </div>","import { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\nproduct: Product = {\n    id : null,\n    dtCriacao : null,\n    criadoPor : null,\n    nome: null,\n    valor: 0,\n    empresaId :null,\n    bloqueado : null\n  }\n  \n\n  constructor(\n              private router: Router,\n              private utilService : UtilService,\n              private route: ActivatedRoute,\n              private ProdutoService : ServiceAllService<Product>\n              ) { }\n\n\n  ngOnInit(): void {\n    \n    this.buscarProduto();\n   \n  }\n\n  updateProduct(): void {\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.product.empresaId = localStorage.getItem(\"empId\");\n      this.ProdutoService.update(this.product, Endpoint.Produto).subscribe(() => {\n      this.utilService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.router.navigate(['/products'])\n    })\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n\n  }\n  buscarProduto() : void {\n\n    const id = this.route.snapshot.paramMap.get('id')\n      this.ProdutoService.readById(id, Endpoint.Produto).subscribe(product => {\n          this.product = product;\n      })\n  }  \n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.nome\" name=\"nome\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"product.bloqueado\" [checked]=\"product.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>\n\n","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\nopened = false;\nlock = false;  \n  constructor(private auth: LoginService) { }\n\n  ngOnInit(): void {\n  this.validarAcesso();\n  }\n\n  sairSistema(){\n    \n    this.auth.sairSistema();\n    \n  }\nvalidarAcesso(){\n  this.lock = Number(localStorage.getItem(\"grpUs\")) == TipoUsuario.Administrador ? true : false;\n}\n \n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" \n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" [(opened)]=\"opened\">\n            <mat-nav-list class=\"nav-list\">\n            \n                <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <!--Menus de cadastro-->    \n            <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menuColor\" >\n                <i class=\"material-icons\">storefront</i>\n                \n                <mat-menu #menu=\"matMenu\">\n                        <a mat-list-item routerLink=\"empresa\" >\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Empresa\n                        </a>\n                        <a *ngIf=\"lock\" mat-list-item routerLink=\"products\" >\n                            <i class=\"material-icons\">\n                                storefront\n                            </i>\n                            Produto - Empresa\n                        </a>\n                        <a mat-list-item routerLink=\"chamados\">\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Solicitações\n                        </a>\n                        <a mat-list-item routerLink=\"usuarios\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Usuários\n                        </a>\n\n                        \n                </mat-menu>\n            </button>\n\n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <div *ngIf=\"!opened\">\n            <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                navigate_next \n            </i>\n        </div>\n            \n        <div *ngIf=\"opened\">\n                <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                    navigate_before \n                </i>\n        </div>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { stringify } from 'querystring';\nimport { UsuarioReadComponent } from './../usuario-read/usuario-read.component';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\n\n@Component({\n  selector: 'app-usuario-create',\n  templateUrl: './usuario-create.component.html',\n  styleUrls: ['./usuario-create.component.css']\n})\nexport class UsuarioCreateComponent implements OnInit {\n  \n//empresa : Observable<Empresa[]>;\nempresa : Empresa[];\n\ndadosEmpresa : Empresa;\nusuario : Usuario = new Usuario();\n\ngrupousuario : GrupoUsuario[];\n\ncriargrupousuario : GrupoUsuario = new GrupoUsuario()\n\ncomboTipousuario = [];\n\nconstructor(  private serviceUsuario : ServiceAllService<Usuario>,\n              private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceGrupoUsuario : ServiceAllService<GrupoUsuario>,\n              private utilService : UtilService,\n              private serviceLogin : LoginService,\n              \n              private router : Router) { }\n\n  ngOnInit(): void {\n      let grpId = Number(localStorage.getItem(\"grpUs\"));\n      this.alimentarCombo();\n      this.buscarEmpresa();\n  }\n  \n  createUsuario() : void {\n    \n    this.usuario.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.usuario.dtCriacao = new Date;\n   \n    this.usuario.grupoUsuarioId = this.usuario.grupoUsuarioId.toString().trim() == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                : this.usuario.grupoUsuarioId.toString().trim() == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                : this.usuario.grupoUsuarioId.toString().trim() == \"Master\" ? TipoUsuario.Master.toString()\n                                : this.usuario.grupoUsuarioId.toString() == \"Usuario\" ? TipoUsuario.Usuario.toString() : null;\n    \n    \n\n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(user => {\n      user = user;\n\n      let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaId == this.usuario.empresaId);\n           \n            if (ativo.length > 0)\n            {\n              this.utilService.showMessage('Esse Usuário já existe para essa Empresa');\n              this.usuario.login =  null; \n              user =  new Array();\n            }else{\n           \n              this.serviceEmpresa.readById(this.usuario.empresaId, Endpoint.Empresa).subscribe(emp => {\n                emp = emp;\n                if (!emp.bloqueado){\n                  this.serviceUsuario.create(this.usuario, Endpoint.Usuario).subscribe(() => {\n                    this.utilService.showMessage('Usuário Criado!');\n                    this.router.navigate(['usuarios']);\n                  });\n                }\n                else\n                {\n                  this.utilService.showMessage(`Não pode ser criado Usuário para empresa ${emp.razaoSocial} porque essa empresa está bloqueada.`, false);\n                }\n              });\n              \n              user =  new Array();\n            }\n\n    })\n  }\n\n  cancel(): void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa() {\n   \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n        emp = emp; \n\n        this.empresa =  new Array()\n\n          emp.forEach(empresasCarregadas => {\n        \n            if(grpId == TipoUsuario.Administrador)\n              this.empresa.push(empresasCarregadas)\n            else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.empresaPai.toString())\n                this.empresa.push(empresasCarregadas)\n            });\n    })\n  }\n\n  alimentarCombo() : void  {\n\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    for (var tipo in TipoUsuario) {\n      if (TipoUsuario.hasOwnProperty(tipo) &&\n        (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n\n          this.comboTipousuario.push(tipo)\n          \n      }\n      else if (TipoUsuario.hasOwnProperty(tipo) &&\n      (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n\n        if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n            this.comboTipousuario.push(tipo);\n        }\n    }\n  }\n\n  createGrupoUsuario(){\n    this.criargrupousuario.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.criargrupousuario.dtCriacao = new Date;\n    this.criargrupousuario.empresaId = Number(localStorage.getItem(\"empId\"));\n\n      this.serviceGrupoUsuario.create(this.criargrupousuario, Endpoint.GrupoUsuario).subscribe(() => {\n        this.utilService.showMessage('Grupo de Usuário Criado!');\n      })\n  }\n}\n","<mat-card>\n    <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Crachá\"\n                [(ngModel)]=\"usuario.cracha\" name=\"cracha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Usuario de Sistema\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"usuario.bolSistema\" [checked]=\"usuario.bolSistema\" type=\"checkbox\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Reseta Senha\">\n                    <input name=\"usuariresetasenha\" [(ngModel)]=\"usuario.bolResetaSenha\" [checked]=\"usuario.bolResetaSenha\" type=\"checkbox\">\n            </mat-form-field>\n\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioId\" placeholder=\"tipousuario\" >\n                    <mat-option *ngFor=\"let tipo of comboTipousuario \" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaId\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                    {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n    </form>\n            <button *ngIf=\"usuario.nome && usuario.login && usuario.senha && usuario.grupoUsuarioId && usuario.empresaId\" mat-raised-button (click)=\"createUsuario()\" color=\"primary\" > \n                Salvar\n            </button>\n  \n            <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n                Voltar\n            </button>\n  \n \n</mat-card>","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-usuario-delete',\n  templateUrl: './usuario-delete.component.html',\n  styleUrls: ['./usuario-delete.component.css']\n})\nexport class UsuarioDeleteComponent implements OnInit {\nempresa : Empresa\nusuario : Usuario;\n\n  constructor(private usuarioService : ServiceAllService<Usuario>,\n              private empresaService : ServiceAllService<Empresa>,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    this.carregaUsuario()\n  }\n\ncarregaUsuario(){\n\n  const id = this.route.snapshot.paramMap.get('id')\n  this.usuarioService.readById(id, Endpoint.Usuario).subscribe(usuario => {\n    this.usuario = usuario;\n    \n    this.buscarEmpresa().subscribe(empresa =>{\n      this.empresa = empresa;\n      this.usuario.empresaId = this.empresa.nomeFantasia;\n     \n    });\n  })\n\n}\n\n  deleteUsuario(): void{\n      this.usuarioService.delete(this.usuario.id , Endpoint.Usuario).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Excluído com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n  }\n  cancel():void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa(){\n    return this.empresaService.readById(this.usuario.empresaId, Endpoint.Empresa);\n  }\n}\n","<mat-card>\n    <mat-card-title>Excluir Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n\n            </mat-form-field>\n            \n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"usuario.empresaId\" name=\"empresaId\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteUsuario()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { map, catchError, take, tap, elementAt } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { __await } from 'tslib';\nimport { FooterComponent } from '../../template/footer/footer.component';\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { UsuarioCreateComponent } from '../usuario-create/usuario-create.component';\n\n\n@Component({\n  selector: 'app-usuario-read',\n  templateUrl: './usuario-read.component.html',\n  styleUrls: ['./usuario-read.component.css']\n})\n\n\nexport class UsuarioReadComponent implements OnInit {\n\n  usuario : Usuario[];\n  userAutenticado : boolean = false; \n  \n  displayedColumns = ['id','nome','login','empresaId','grupoUsuarioId','bloqueado','action']  \n \n  constructor(\n              private serviceEmpresa: ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private mensagem : UtilService, \n              private router : Router\n             ) \n             { }\n\n\n  ngOnInit(): void {\n     this.getUser();\n\n     let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n  }\n  \n\n\n  navigateToUsuarioCreate(): void{\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    if (grpId == TipoUsuario.Usuario) \n      this.mensagem.showMessage(\"Você não possui permissão para criação de usuários\", true)\n    else\n      this.router.navigate(['usuarios/create']);\n  }\n\n  async getUser() {\n      \n      let filtroUsuario = (<HTMLSelectElement>document.getElementById('busca')).value;\n      let empId = localStorage.getItem(\"empId\");\n      let grpId = Number(localStorage.getItem(\"grpUs\"));\n      let logado = Number(localStorage.getItem(\"usId\"));\n      this.userAutenticado = grpId == TipoUsuario.Usuario ? false : true;\n  \n      this.serviceUsuario.read(Endpoint.Usuario).subscribe(u =>{\n        u = u;\n        let responseUsuarios = u;\n\n        let usuarioFIltrados = new Array();\n         \n        if (filtroUsuario){\n           \n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const element = responseUsuarios[index];\n              if (element.nome.toLowerCase().includes(filtroUsuario.toLowerCase()))\n                usuarioFIltrados.push(element);\n          }\n          responseUsuarios = new Array();\n          responseUsuarios = usuarioFIltrados;    \n        }\n\n        this.serviceEmpresa.read(Endpoint.Empresa).subscribe(e => {\n          e = e;     \n          let responseEmpresa = e;\n\n          this.usuario = new Array();\n          let empresaID = null;\n          let idEmpresa = null;\n          let IdEmpresaPai = null;\n\n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const usr = responseUsuarios[index];\n            \n                  for (let index = 0; index <  responseEmpresa.length; index++) {\n                    const emp =  responseEmpresa[index];\n                    \n                    if(usr.empresaId == emp.id.toString().trim())\n                    {\n                      empresaID = emp.id;\n                      usr.empresaId = emp.razaoSocial;\n                      usr.grupoUsuarioId = usr.grupoUsuarioId == \"1\" ? \"Administrador\" : usr.grupoUsuarioId == \"2\" ? \"Sistema\" : usr.grupoUsuarioId == \"3\" ? \"Usuario\" : usr.grupoUsuarioId == \"4\" ? \"Master\" : usr.grupoUsuarioId;\n                      idEmpresa = emp.id;\n                      IdEmpresaPai = emp.empresaPai;\n                      \n                        if(grpId == TipoUsuario.Administrador)\n                        {\n                          this.usuario.push(usr);\n                            break;  \n                          }\n                          else if(grpId == TipoUsuario.Master)\n                          { \n                            if(idEmpresa == empId || IdEmpresaPai == empId && usr.grupoUsuarioId != \"Administrador\")\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                          }\n                          else if(grpId == TipoUsuario.Usuario)\n                          { \n                            \n                            if(idEmpresa == empId && usr.id == logado)\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                            \n                          }\n\n                        }\n                  }\n\n\n                \n\n\n\n          }\n      })\n  })\n   \n  \n }\n  \n\n}\n\n\n\n","\n<div>\n   <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n    \n    <span (click)=\"getUser()\">\n      <i class=\"material-icons\">search</i>\n    </span>\n</div>\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"usuario\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Nome -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n\n        <!-- Login -->\n        <ng-container matColumnDef=\"login\">\n            <th mat-header-cell *matHeaderCellDef>Login</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.login}}</td>\n        </ng-container> \n\n\n        <!-- Empresa -->\n        <ng-container matColumnDef=\"empresaId\">\n          <th mat-header-cell *matHeaderCellDef>Empresa</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.empresaId}}</td>\n      </ng-container> \n       \n      <ng-container matColumnDef=\"grupoUsuarioId\">\n        <th mat-header-cell *matHeaderCellDef>Tipo de Usuário</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.grupoUsuarioId}}</td>\n    </ng-container> \n\n\n <!-- status -->\n <ng-container matColumnDef=\"bloqueado\">\n  <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n    <td mat-cell *matCellDef=\"let row\">\n      <div *ngIf=\"row.bloqueado\" >\n        <i class=\"material-icons\">\n          lock\n        </i>\n      </div>\n      <div *ngIf=\"!row.bloqueado\" >\n        <i class=\"material-icons\">  \n          lock_open\n        </i>\n      </div>\n    </td>\n  </ng-container>\n\n\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n      \n         \n          <a routerLink=\"/usuarios/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            \n            <a *ngIf=\"userAutenticado\" routerLink=\"/usuarios/delete/{{ row.id }}\" class=\"delete\">\n              \n                <i class=\"material-icons\">\n                    delete \n                           \n                </i>\n              \n            </a>\n           \n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\">teste</tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n      \n\n    </table>\n\n</div>\n<div class=\"footer\">\n  <span (click)=\"navigateToUsuarioCreate()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n","import { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { query } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-usuario-update',\n  templateUrl: './usuario-update.component.html',\n  styleUrls: ['./usuario-update.component.css']\n})\nexport class UsuarioUpdateComponent implements OnInit {\n\n  empresa : Empresa[];\n  dadosEmpresa : Empresa;\n  usuario : Usuario ;\n  userAutenticado : boolean = false; \n  \n  comboTipousuario = [];\n\n\n  constructor(private usarioService : ServiceAllService<Usuario>,\n             private empresaService : ServiceAllService<Empresa>,\n             private utilService: UtilService,\n             private router : Router,\n             private route: ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    this.buscarUsuario();\n    this.buscarEmpresa();\n  }\n\n  updateUsuario() : void {\n  let grpId = Number(localStorage.getItem(\"grpUs\"));\n  this.usuario.grupoUsuarioId = this.usuario.grupoUsuarioId == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                   :this.usuario.grupoUsuarioId == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                   : this.usuario.grupoUsuarioId == \"Usuario\" ? TipoUsuario.Usuario.toString()\n                                   : this.usuario.grupoUsuarioId == \"Master\" ? TipoUsuario.Master.toString()\n                                   : null \n\n    \n      this.usarioService.read(Endpoint.Usuario).subscribe(user => {\n        user = user;\n                              \n        let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaId == this.usuario.empresaId && x.id == this.usuario.id);\n     \n          if (ativo.length > 0 )\n          {\n              this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                this.router.navigate(['/usuarios'])\n              })\n              user =  new Array();\n            }else if(grpId == TipoUsuario.Administrador){\n                \n              this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                  this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                  this.router.navigate(['/usuarios'])\n                })\n                user =  new Array();\n            }else{\n\n              this.utilService.showMessage('A empresa do Usuário não pode ser Alterada', false);\n              this.usuario.login =  null; \n              user =  new Array();\n          }\n      })\n  }\n\n  cancel(): void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa() {\n    \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.empresaService.read(Endpoint.Empresa).subscribe(emp => {\n      emp = emp;\n\n      this.empresa =  new Array()\n\n      emp.forEach(empresasCarregadas => {\n        \n        if(grpId == TipoUsuario.Administrador)\n          this.empresa.push(empresasCarregadas)\n        else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.id.toString() || grpId == TipoUsuario.Usuario && empId == empresasCarregadas.id.toString() || empId == empresasCarregadas.empresaPai.toString())\n            this.empresa.push(empresasCarregadas)\n        });\n\n    });\n  }\n\n  buscarUsuario(){\n    const id = this.route.snapshot.paramMap.get('id')\n    this.usarioService.readById(id, Endpoint.Usuario).subscribe(usuario => {\n      this.usuario = usuario;\n\n\n\n\n      let tipousuario = usuario.grupoUsuarioId;\n      this.usuario.grupoUsuarioId = this.usuario.grupoUsuarioId == TipoUsuario.Administrador.toString() ? \"Administrador\"\n                                   :this.usuario.grupoUsuarioId == TipoUsuario.Sistema.toString()  ? \"Sistema\"\n                                   : this.usuario.grupoUsuarioId == TipoUsuario.Usuario.toString()  ? \"Usuario\" \n                                   : this.usuario.grupoUsuarioId == TipoUsuario.Master.toString()  ? \"Master\" \n                                   : null \n                                         \n     \n     \n     \n     \n     \n     this.carregarComboTipoUsuario(this.usuario.grupoUsuarioId, tipousuario); \n      \n                   \n    });\n    \n  }\n\n  carregarComboTipoUsuario(usuario : string, tipousuario : string) : void  {\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    \n      for (var tipo in TipoUsuario) {\n      \n           if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n    \n              this.comboTipousuario.push(tipo)\n              \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n    \n            if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                this.comboTipousuario.push(tipo);\n          \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Usuario ){\n      \n              if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                  this.comboTipousuario.push(tipo);\n            \n            }\n\n\n      }\n    \n          \n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioId\" placeholder=\"GrupoUsuarioID\">\n                         <mat-option *ngFor=\"let tipo of comboTipousuario\" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaId\" placeholder=\"EmpresaID\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"status\" [(ngModel)]=\"usuario.bloqueado\" [checked]=\"usuario.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n      \n        </form>\n\n        <button *ngIf=\"usuario.nome && usuario.login && usuario.grupoUsuarioId && usuario.empresaId\" mat-raised-button (click)=\"updateUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>usuario works!</p>\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","export class Acesso{\r\n    login : string\r\n    senha : string\r\n    empresaId : number\r\n}","export class GrupoUsuario{\r\n    id? : number\r\n    dtCriacao : Date\r\n    nome : string\r\n    usuarioApp : boolean\r\n    empresaId : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n\r\n}","import { map } from 'rxjs/operators';\r\n\r\nexport enum TipoUsuario {\r\n    \r\n    Administrador = 1,\r\n    Sistema = 2,\r\n    Usuario = 3,\r\n    Master = 4,\r\n}\r\n\r\nexport const TipoUsuarioSistema = new Map<string, number>([\r\n['Administrador',1],\r\n['Sistema', 2],\r\n['Usuario',3],\r\n['Master',4]\r\n\r\n])\r\n","export class Usuario {\r\nid ? : number\r\ndtCriacao : Date\r\nnome : string\r\nlogin : string\r\nsenha : string\r\ncracha : string\r\nbolSistema: boolean\r\nbolResetaSenha : boolean\r\ndataTrocaSenha : Date\r\ncriadoPor : number\r\nbloqueado : boolean\r\nempresaId : string\r\ngrupoUsuarioId : string\r\n}\r\n","import { Endpoint } from './../Negocio/Endpoint';\nimport { TipoUsuario, TipoUsuarioSistema } from './../models/usuarios/enumUsuarios';\nimport { ObjetoToken } from './../models/Token/ObjetoToken';\nimport { Empresa } from './../models/empresa/ModelEmpresa';\nimport { Acesso } from '../models/acessoModel';\nimport { Usuario } from '../models/usuarios/modelLogin';\nimport { UtilService } from './util.service';\n\nimport { environment } from './../../environments/environment';\n\nimport { map, catchError, take, retry } from 'rxjs/operators';\nimport { Observable, EMPTY, from, empty, pipe } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\nimport { stringify } from 'querystring';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n  acesso : Acesso = new Acesso();\n  objetoToken : ObjetoToken []\n\n  private tipoUsuarios = [];\n\n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n  \n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService,\n               \n              ) { \n                this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL;\n              }\n\n  async logarSistema(acesso: Acesso) {\n    \n    try {\n      let response = await this.http.post<ObjetoToken>(this.environmentUrl + Endpoint.Token, acesso).toPromise()\n   \n       if (response != null && !response.bloqueado && !response.statusEmpresa )\n          {\n\n            this.mostrarMenuEmitter.emit(true);\n            this.mostrarLoginEmitter.emit(false)\n            this.usuarioAutenticado = true;\n            this.router.navigate(['/']);\n                        \n            localStorage.setItem(\"tId\", response.token)\n            localStorage.setItem(\"usId\", response.id)\n            localStorage.setItem(\"grpUs\", response.grupoUsuarioId)\n           \n            localStorage.setItem(\"stUs\", response.bloqueado);\n            localStorage.setItem(\"empId\", response.empresaId);\n            this.utilService.showMessage(\"Seja Bem Vindo!  \" + acesso.login , false);\n\n          }\n          else\n          {\n            this.usuarioAutenticado = false;\n            this.mostrarMenuEmitter.emit(false);\n            this.mostrarLoginEmitter.emit(true);\n            \n            if (response.bloqueado)\n              this.utilService.showMessage(\"Usuário bloqueado!\", true);\n            else if (response.statusEmpresa)\n              this.utilService.showMessage(\"Empresa bloqueada!\", true);\n            else \n              this.utilService.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n      \n      } catch (error) {\n        this.utilService.showMessage(\"Erro de acesso a API\", true);\n      }\n    \n  }\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n    localStorage.removeItem(\"tId\");\n    localStorage.removeItem(\"usId\");\n    localStorage.removeItem(\"grpUs\");\n    localStorage.removeItem(\"stUs\");\n    localStorage.removeItem(\"empId\");\n    this.utilService.showMessage(\"Até logo! \", false);\n    this.router.navigate(['/login']);\n  }\n\n  header(){\n    var reqHeader = new HttpHeaders({ \n        'Content-Type' : 'application/json; charset=utf-8',\n        'Accept'       : 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('tId')\n    })\n    return { headers: reqHeader };\n  }\n\n  TipoUsuarioSistema(){\n    \n    TipoUsuarioSistema.forEach(element => {\n      this.tipoUsuarios.push(element)\n    });\n   return this.tipoUsuarios;\n  }\n  \n}\n\n\n\n\n\n","import { LoginService } from 'src/app/services/login.service';\n\nimport { UtilService } from './util.service';\nimport { environment } from '../../environments/environment';\nimport { Component } from '@angular/core';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from '../models/produtos/product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n   \nconstructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              \n             ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL + '/Produto';\n             }\n\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.environmentUrl, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`\n\n      return this.http.get<Product>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto \n   update(product: Product): Observable<Product> {    \n    return this.http.put<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Product>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n\n   }\n\n}\n","import { map, catchError, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UtilService } from './util.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAllService <T>{\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(\n    private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              ) {\n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.BASE_URL;\n              }\n\n\n    //Criar Cadasto\n    create(T : T, tipo: string) : Observable <T>{\n      return this.http.post<T>(this.environmentUrl + tipo , T, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Buscar todos Get All\n    read(tipo: string): Observable<T[]>{\n      return this.http.get<T[]>(this.environmentUrl + tipo, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n    //Buscar um cadastro por id\n    readById(id: string, tipo: string): Observable<T>{\n    const url = `${this.environmentUrl + tipo}/${id}`\n\n      return this.http.get<T>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Atualizar Produto \n    update(T: T, tipo: string): Observable<T> {    \n    return this.http.put<T>(this.environmentUrl + tipo, T, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    delete(id: number, tipo : string) : Observable<T>{\n      const url = `${this.environmentUrl + tipo}/${id}`      \n      return this.http.delete<T>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n\n    }\n\n}\n","import { ObjetoToken } from './../models/Token/ObjetoToken';\n\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(private snackbar : MatSnackBar,\n             private http : HttpClient\n             ) { }\n\n\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n\n}\n\n  erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY \n  }\n\nconvertToBase64(txt : string){\n  return btoa(txt);\n}\n\nconvertBase64toText(txt: string){\n  return atob(txt);\n\n}\n\nvalidaCpf(cpf: string)\n{\n        if (cpf) {\n          let numbers, digits, sum, i, result, equalDigits;\n          equalDigits = 1;\n          if (cpf.length < 11) {\n            return false \n          }\n\n          for (i = 0; i < cpf.length - 1; i++) {\n            if (cpf.charAt(i) !== cpf.charAt(i + 1)) {\n              equalDigits = 0;\n              break;\n            }\n          }\n\n          if (!equalDigits) {\n            numbers = cpf.substring(0, 9);\n            digits = cpf.substring(9);\n            sum = 0;\n            for (i = 10; i > 1; i--) {\n              sum += numbers.charAt(10 - i) * i;\n            }\n\n            result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n            if (result !== Number(digits.charAt(0))) {\n              return false;\n            }\n            numbers = cpf.substring(0, 10);\n            sum = 0;\n\n            for (i = 11; i > 1; i--) {\n              sum += numbers.charAt(11 - i) * i;\n            }\n            result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n            if (result !== Number(digits.charAt(1))) {\n              return false ;\n            }\n          } else {\n            return true ;\n          }\n      return true;\n    }\n  }\n\nvalidaCnpj(cnpj : string)\n{\n  return null;\n}\n\n}","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-crud',\n  templateUrl: './chamado-crud.component.html',\n  styleUrls: ['./chamado-crud.component.css']\n})\nexport class ChamadoCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToChamadoCreate():void{\n    this.router.navigate(['chamados/read'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToChamadoCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-chamado-read></app-chamado-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToEmpresaCreate() : void {\n    this.router.navigate(['empresa/create'])\n  }\n\n\n}\n","<app-empresa-read></app-empresa-read>\n\n","import { Endpoint } from './../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ok } from 'assert';\nimport { Product } from 'src/app/models/produtos/product.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\nprodutos : Product[];\n\n\n  constructor(private serviceProdutos : ServiceAllService<Product>,\n              private headerService : HeaderService) \n              {\n                this.headerService.headerData = {\n                  title : 'Início',\n                  icon : 'home',\n                  routeUrl : ''\n                }\n              }\n\n  ngOnInit(): void {\n    this.buscarComponentes();\n  }\n  \n  \n  buscarComponentes(){\n    this.serviceProdutos.read(Endpoint.Produto).subscribe(prod => {\n      this.produtos = prod;\n    });\n  }\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n</mat-card>\n\n<div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"10%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" *ngFor=\"let prod of produtos\">\n        <mat-card  class=\" mat-elevation-z3\">\n            <mat-card-header>\n                <mat-card-title>{{prod.nome}}</mat-card-title>\n            </mat-card-header>\n            <a mat-list-item routerLink=\"empresa\" >\n                <i class=\"material-icons\" >\n                    <img mat-card-image src=\"./../../../assets/img/Agenda.jpg\">\n                </i>\n            </a>\n        </mat-card>\n      </div>\n    </div>\n  </div>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router,\n             private headerService : HeaderService\n             ) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<app-product-read></app-product-read>\n\n","import { stringify } from 'querystring';\nimport { query } from '@angular/animations';\nimport { UsuarioReadComponent } from './../../components/usuario/usuario-read/usuario-read.component';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { Endpoint } from './../../Negocio/Endpoint';\nimport { UsuarioService } from './../../services/usuario.service';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-usuario-crud',\n  templateUrl: './usuario-crud.component.html',\n  styleUrls: ['./usuario-crud.component.css']\n})\nexport class UsuarioCrudComponent implements OnInit {\n\n  constructor(\n              private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  \n}\n","<app-usuario-read></app-usuario-read>\n\n\n\n\n\n","export const environment = {\n  production: false,\n  environmentName: \"QA\",\n  apiUrl:  'http://localhost:5000',\n  BASE_URL : '/api'\n\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}