{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component.ts","webpack:///src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component.html","webpack:///src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component.ts","webpack:///src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component.html","webpack:///src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component.ts","webpack:///src/app/Aplicacoes/agenda/GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component.html","webpack:///src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-cadastro/unidade-sala-cadastro.component.ts","webpack:///src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-cadastro/unidade-sala-cadastro.component.html","webpack:///src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-delete/unidade-sala-delete.component.ts","webpack:///src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-delete/unidade-sala-delete.component.html","webpack:///src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-update/unidade-sala-update.component.ts","webpack:///src/app/Aplicacoes/agenda/Unidade/Sala/unidade-sala-update/unidade-sala-update.component.html","webpack:///src/app/Aplicacoes/agenda/Unidade/agenda-alterar-unidade/agenda-alterar-unidade.component.ts","webpack:///src/app/Aplicacoes/agenda/Unidade/agenda-alterar-unidade/agenda-alterar-unidade.component.html","webpack:///src/app/Aplicacoes/agenda/Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component.ts","webpack:///src/app/Aplicacoes/agenda/Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component.html","webpack:///src/app/Aplicacoes/agenda/Unidade/agenda-excluir-unidade/agenda-excluir-unidade.component.ts","webpack:///src/app/Aplicacoes/agenda/Unidade/agenda-excluir-unidade/agenda-excluir-unidade.component.html","webpack:///src/app/Aplicacoes/agenda/agenda-create/agenda-create.component.ts","webpack:///src/app/Aplicacoes/agenda/agenda-create/agenda-create.component.html","webpack:///src/app/Aplicacoes/agenda/agenda-delete/agenda-delete.component.ts","webpack:///src/app/Aplicacoes/agenda/agenda-delete/agenda-delete.component.html","webpack:///src/app/Aplicacoes/agenda/agenda-read/agenda-read.component.ts","webpack:///src/app/Aplicacoes/agenda/agenda-read/agenda-read.component.html","webpack:///src/app/Aplicacoes/agenda/agenda-update/agenda-update.component.ts","webpack:///src/app/Aplicacoes/agenda/agenda-update/agenda-update.component.html","webpack:///src/app/Aplicacoes/agenda/home-agenda/home-agenda.component.ts","webpack:///src/app/Aplicacoes/agenda/home-agenda/home-agenda.component.html","webpack:///src/app/Negocio/Aplicacao.ts","webpack:///src/app/Negocio/Endpoint.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.conponent.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.html","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.ts","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.html","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.ts","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.html","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.ts","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.html","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.ts","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.html","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.ts","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.html","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.ts","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.html","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.ts","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/product/product-create/product-create.component.ts","webpack:///src/app/components/product/product-create/product-create.component.html","webpack:///src/app/components/product/product-delete/product-delete.component.ts","webpack:///src/app/components/product/product-delete/product-delete.component.html","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","webpack:///src/app/components/product/product-read/product-read.component.ts","webpack:///src/app/components/product/product-read/product-read.component.html","webpack:///src/app/components/product/product-update/product-update.component.ts","webpack:///src/app/components/product/product-update/product-update.component.html","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/components/template/header/header.service.ts","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.ts","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.html","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.ts","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.html","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.html","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.ts","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.ts","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.html","webpack:///src/app/components/usuario/usuario.component.ts","webpack:///src/app/components/usuario/usuario.component.html","webpack:///src/app/diretivas/red.directive.ts","webpack:///src/app/models/Agenda/modelAgenda.ts","webpack:///src/app/models/Agenda/modelGrupoAgenda.ts","webpack:///src/app/models/Agenda/modelHorarioAgenda.ts","webpack:///src/app/models/Sala/SalaModel.ts","webpack:///src/app/models/Unidade/unidadeModel.ts","webpack:///src/app/models/acessoModel.ts","webpack:///src/app/models/produtos/product.model.ts","webpack:///src/app/models/usuarios/GrupoUsuarios.ts","webpack:///src/app/models/usuarios/enumUsuarios.ts","webpack:///src/app/models/usuarios/modelLogin.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/service-all.service.ts","webpack:///src/app/services/util.service.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.html","webpack:///src/app/views/empresa/empresa.component.ts","webpack:///src/app/views/empresa/empresa.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/product-crud/product-crud.component.ts","webpack:///src/app/views/product-crud/product-crud.component.html","webpack:///src/app/views/usuario-crud/usuario-crud.component.ts","webpack:///src/app/views/usuario-crud/usuario-crud.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AgendaGrupoCadastroComponent","dialog","servico","servicoGrupo","grupo","empresaid","Number","Sessao","IdEmpresa","dtCriacao","Date","criadoPor","UsuarioId","create","GrupoAgenda","subscribe","showMessage","close","criarGrupo","fecharPopup","selector","templateUrl","styleUrls","AgendaGrupoExcluirComponent","matdialogRef","buscarGrupo","readById","x","excluirGrupo","AgendaGrupoUpdateComponent","dialogRef","update","editarGrupo","UnidadeSalaCadastroComponent","servicoSala","sala","buscaSala","unidadeid","Sala","read","sl","listasala","addSala","UnidadeSalaDeleteComponent","buscarSala","excluirSala","UnidadeSalaUpdateComponent","alterarSala","AgendaAlterarUnidadeComponent","servicoUnidade","buscarUnidade","Unidade","un","unidade","componentInstance","AgendaCadastroUnidadeComponent","ServicoUnidade","Colunas","ColunasSala","novaUnidade","atualizarChamada","vlrsala","unidadeSelecionada","atualizaRota","vlrTxt","unidades","filter","toString","nomeUnidade","toLowerCase","includes","Popup","keyEvent","which","document","getElementById","value","tab","index","salas","nomeSala","selecionaAba","AgendaExcluirUnidadeComponent","AgendaCreateComponent","route","overlay","_serviceAgenda","_serviceUnidade","_serviceSala","_serviceGrupoAgenda","_serviceUsuario","_utilService","servicoHorario","agenda","ColunasGrupo","GrupoSelecionado","ColunasHorarios","dadosHorarios","carregaCombos","buscarHorarios","Empresaid","Agenda","ag","navigate","carregaComboSala","GrupoUsuario","carregaComboProfissional","carregaComboUnidade","carregaComboGrupoAgenda","grpId","empId","comboProfissional","Array","Usuario","pro","Master","Administrador","comboUnidade","comboSala","comboTipoGrupoAgenda","ga","buscarGrupos","event","txtBusca","txtbusca","nomeGrupoAgenda","toLocaleLowerCase","diaDasemana","tipoHorario","intervalo","horainicio","horafim","id_agenda","id_empresa","AgendaHorarios","h","domingo","segunda","terca","quarta","quinta","sexta","sabado","selecionaAbaAgenda","AtualizarComboProfissional","novoUsuario","AtualizarComboUnidade","BuscarSala","AtualizarComboGrupoAgenda","selecionarGrupo","cadGrupo","CriarHorarios","AgendaDeleteComponent","dialgRef","serviceAgenda","utilService","DtCriacao","nomeAgenda","profissionalid","salaid","substituicao","grupoAgendaid","vigenciaInicio","vigenciaFim","considerarFeriado","bloqueado","buscarAgendaByid","ExcluirAgenda","AgendaReadComponent","_repAgenda","AtualizarMenu","buscarAgenda","filtroAgenda","empresaId","response","addNovaAgenda","addUnidade","AgendaUpdateComponent","router","agendaService","serviceUnidade","serviceSala","serviceGrupoAGenda","serviceEmpresa","serviceUsuario","buscarAgendaPorId","agId","pr","HomeAgendaComponent","Aplicacao","TipoAplicacao","Map","Endpoint","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","authService","nome","mostrarMenu","mostrarlogin","mostrarMenuEmitter","mostrar","mostrarLoginEmitter","mostrarLogin","AppModule","provide","useValue","declarations","providers","bootstrap","ChamadoCreateComponent","ChamadoDeleteComponent","ChamadoReadComponent","ChamadoUpdateComponent","EmpresaCreateComponent","servicoEmpresa","dialofRef","empresa","cnpj","razaoSocial","nomeFantasia","inscricaoEstadual","inscricaoMunicipal","cnes","codPIS","observacao","codCnae","empresaPai","empPai","isValid","Empresa","bemp","retornoEmp","retornomaster","length","emp","localStorage","getItem","EmpresaDeleteComponent","mensagem","utilservice","BuscarEmpresa","existeUsuario","usr","excluirEmpresa","EmpresaReadComponent","displayedColumns","buscarEmpresa","filtroEmpresa","forEach","element","push","master","empresaFIltrada","scrollStrategy","scrollStrategies","reposition","open","width","height","afterClosed","result","console","log","addEmpresa","EmpresaUpdateComponent","empresaService","usuariologado","ObterEmpresa","error","LoginComponent","authservice","acesso","logarSistema","ProductCreateComponent","ProdutoEmpresa","ServiceEmpresa","matDialogref","comboProduto","product","valor","buscarProduto","Produto","p","ativo","associarProdutoEmpresa","ProductDeleteComponent","productService","deleteProduto","deleteProduct","EXAMPLE_DATA","name","ProductReadTableprodutosDataSource","data","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","ProductReadTableprodutosComponent","dataSource","table","ProductReadComponent","serviceProduto","vlrProduto","products","KeyEvent","addProduto","selecionarProduto","ProductUpdateComponent","ProdutoService","updateProduct","FooterComponent","HeaderComponent","headerService","headerData","title","icon","routeUrl","HeaderService","_headerData","next","providedIn","NavComponent","auth","opened","lock","validarAcesso","sairSistema","UsuarioCreateComponent","serviceGrupoUsuario","serviceLogin","tipoLogin","usuario","criargrupousuario","comboTipousuario","alimentarCombo","grupoUsuarioid","trim","Sistema","user","login","empresasCarregadas","tipo","hasOwnProperty","isNaN","parseInt","get","UsuarioDeleteComponent","usuarioService","carregaUsuario","deleteUsuario","UsuarioReadComponent","userAutenticado","getUser","filtroUsuario","logado","u","responseUsuarios","usuarioFIltrados","responseEmpresa","empresaID","idEmpresa","IdEmpresaPai","addUsuario","UsuarioUpdateComponent","usarioService","buscarUsuario","tipousuario","carregarComboTipoUsuario","UsuarioComponent","RedDirective","el","nativeElement","style","color","HorarioAgenda","Acesso","Product","TipoUsuario","TipoUsuarioSistema","httpOptions","headers","LoginService","snackbar","http","_serviceLogin","environmentName","environmentUrl","tipoUsuarios","usuarioAutenticado","BASE_URL","post","Token","toPromise","statusEmpresa","erroLogin","emit","setItem","token","gruposUsuarios","message","removeItem","reqHeader","ProductService","loginservice","header","obj","erroHandler","url","put","ServiceAllService","T","UtilService","msg","isErro","duration","horizontalPosition","verticalPosition","panelClass","txt","btoa","atob","titulo","icone","urlIcone","chaveEntrada","convertBase64toText","dados","StatusUsuario","TokenSessao","rota","reload","navigateByUrl","skipLocationChange","largura","altura","ChamadoCrudComponent","navigateToChamadoCreate","EmpresaComponent","HomeComponent","serviceProdutos","ObterComponentes","prod","produtos","ProductCrudComponent","UsuarioCrudComponent","environment","production","apiUrl","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-grupo-cadastro',\n  templateUrl: './agenda-grupo-cadastro.component.html',\n  styleUrls: ['./agenda-grupo-cadastro.component.css']\n})\nexport class AgendaGrupoCadastroComponent implements OnInit {\n\ngrupo : GrupoAgenda = new GrupoAgenda();\n\n  constructor(\n              public dialog : MatDialogRef<AgendaGrupoCadastroComponent>,\n              private servico : UtilService,\n              private servicoGrupo : ServiceAllService<GrupoAgenda>\n              ) { }\n\n  ngOnInit(): void {\n  }\n\n  criarGrupo(){\n\n    this.grupo.empresaid = Number(this.servico.Sessao().IdEmpresa)\n    this.grupo.dtCriacao =  new Date;\n    this.grupo.criadoPor = Number(this.servico.Sessao().UsuarioId);\n    this.servicoGrupo.create(this.grupo, Endpoint.GrupoAgenda).subscribe(() => {\n      this.servico.showMessage(\"Grupo criado com sucesso ! \", false )\n    })\n  }\n\n  fecharPopup(){\n      this.dialog.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo Grupo</mat-card-title>\n        <form class=\"formCadastro\">\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Grupo\" \n                    [(ngModel)]=\"grupo.nomeGrupoAgenda\" name=\"nomeGrupoAgenda\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"bloqueado\">\n                    <input name=\"grupo.bloqueado\" [(ngModel)]=\"grupo.bloqueado\" [checked]=\"grupo.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n\n        </form>\n\n        <button mat-raised-button (click)=\"criarGrupo()\" color=\"primary\" > \n            Criar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Sair\n        </button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-grupo-excluir',\n  templateUrl: './agenda-grupo-excluir.component.html',\n  styleUrls: ['./agenda-grupo-excluir.component.css']\n})\nexport class AgendaGrupoExcluirComponent implements OnInit {\n\n\n  grupo : GrupoAgenda;\n\n  constructor(\n              public matdialogRef : MatDialogRef<AgendaGrupoExcluirComponent>,\n              private servico : UtilService,\n              private servicoGrupo : ServiceAllService<GrupoAgenda>\n              ) { }\n\n  ngOnInit(): void {\n    this.buscarGrupo();\n  }\n\n  buscarGrupo(){\n    this.servicoGrupo.readById(this.matdialogRef.id, Endpoint.GrupoAgenda).subscribe(x => {\n      this.grupo = x;\n    })\n  }\n\n  excluirGrupo(){\n        this.servicoGrupo.delete(Number(this.matdialogRef.id), Endpoint.GrupoAgenda).subscribe(x => {\n          this.servico.showMessage(\"Grupo Excluido com sucesso!\", false);\n        })\n  }\n\n  fecharPopup(){\n      this.matdialogRef.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Editar Grupo</mat-card-title>\n        <form class=\"formCadastro\">\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Grupo\" \n                    [(ngModel)]=\"grupo.nomeGrupoAgenda\" name=\"nomeGrupoAgenda\" disabled= \"true\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"excluirGrupo()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Sair\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-grupo-update',\n  templateUrl: './agenda-grupo-update.component.html',\n  styleUrls: ['./agenda-grupo-update.component.css']\n})\nexport class AgendaGrupoUpdateComponent implements OnInit {\n\ngrupo : GrupoAgenda\n\n  constructor(\n                public dialogRef : MatDialogRef<AgendaGrupoUpdateComponent>,\n                private servico : UtilService,\n                private servicoGrupo : ServiceAllService<GrupoAgenda>\n              ) { }\n\n  ngOnInit(): void {\n    this.buscarGrupo()\n  }\n\n  buscarGrupo(){\n        this.servicoGrupo.readById(this.dialogRef.id, Endpoint.GrupoAgenda).subscribe(x => {\n          this.grupo = x;\n        })\n  }\n\n  editarGrupo(){\n    this.servicoGrupo.update(this.grupo, Endpoint.GrupoAgenda).subscribe(()=> {\n        this.servico.showMessage(\"Grupo Excluído com sucesso\", false)\n    })\n\n  }\n\n  fecharPopup(){\n      this.dialogRef.close()\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Editar Grupo</mat-card-title>\n        <form class=\"formCadastro\">\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Grupo\" \n                    [(ngModel)]=\"grupo.nomeGrupoAgenda\" name=\"nomeGrupoAgenda\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"bloqueado\">\n                    <input name=\"grupo.bloqueado\" [(ngModel)]=\"grupo.bloqueado\" [checked]=\"grupo.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n\n        </form>\n\n        <button mat-raised-button (click)=\"editarGrupo()\" color=\"primary\" > \n            Criar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Sair\n        </button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-unidade-sala-cadastro',\n  templateUrl: './unidade-sala-cadastro.component.html',\n  styleUrls: ['./unidade-sala-cadastro.component.css']\n})\nexport class UnidadeSalaCadastroComponent implements OnInit {\n\n\nlistasala : Sala [];\n\nsala : Sala = new Sala();\n\n  constructor(\n              private servicoSala : ServiceAllService<Sala>,\n              private servico : UtilService,\n              public dialog : MatDialogRef<UnidadeSalaCadastroComponent>\n\n  ) { }\n\n  ngOnInit(): void {\n      this.buscaSala()\n    \n\n  }\n\n  addSala(){\n\n    this.sala.unidadeid = Number(this.dialog.id);\n    this.sala.empresaid = Number(this.servico.Sessao().IdEmpresa);\n    this.sala.dtCriacao = new Date;\n    this.sala.criadoPor = this.servico.Sessao().UsuarioId;\n\n    this.servicoSala.create(this.sala, Endpoint.Sala).subscribe(() => {\n      this.servico.showMessage(\"Sala Cadastrada com sucesso\", false);\n    })\n\n\n  }\n\n  fecharPopup(){\n      this.dialog.close()\n  }\n\n  buscaSala(){\n\n        this.servicoSala.read(Endpoint.Sala).subscribe(sl => {\n          this.listasala = sl\n        })\n\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Nova Sala</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Sala\" \n                [(ngModel)]=\"sala.nomeSala\" name=\"nomeSala\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"ativo\">\n                    <input name=\"ativo\" [(ngModel)]=\"sala.ativo\" [checked]=\"sala.ativo\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"addSala()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n        \n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-unidade-sala-delete',\n  templateUrl: './unidade-sala-delete.component.html',\n  styleUrls: ['./unidade-sala-delete.component.css']\n})\nexport class UnidadeSalaDeleteComponent implements OnInit {\n\n  sala : Sala\n\n  constructor(\n                public dialog : MatDialogRef <UnidadeSalaDeleteComponent>, \n                private servico : UtilService, \n                private servicoSala : ServiceAllService<Sala>\n              ) { }\n\n  ngOnInit(): void {\n      this.buscarSala()\n  }\n\n  buscarSala(){\n    this.servicoSala.readById(this.dialog.id, Endpoint.Sala).subscribe(x => {\n        this.sala = x;\n    })\n  }\n\n  excluirSala(){\n    this.servicoSala.delete(this.sala.id, Endpoint.Sala).subscribe(x => {\n      this.servico.showMessage(\"Sala excluída com sucesso\", false);\n      this.fecharPopup()\n    })\n  }\n\n  fecharPopup(){\n    this.dialog.close()\n  }\n  \n}\n","<mat-card>\n    <mat-card-title>Excluir Sala</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Sala\" \n                [(ngModel)]=\"sala.nomeSala\" name=\"nomeSala\" disabled = \"true\">\n            </mat-form-field>\n           \n        </form>\n\n        <button mat-raised-button (click)=\"excluirSala()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n        \n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-unidade-sala-update',\n  templateUrl: './unidade-sala-update.component.html',\n  styleUrls: ['./unidade-sala-update.component.css']\n})\nexport class UnidadeSalaUpdateComponent implements OnInit {\n\n  sala : Sala\n  \n  constructor(\n              public dialog : MatDialogRef<UnidadeSalaUpdateComponent>, \n              private servico : UtilService, \n              private servicoSala : ServiceAllService<Sala>\n              ) { }\n\n  ngOnInit(): void {\n      this.buscarSala()\n  \n  }\n\n  \n  buscarSala(){\n        this.servicoSala.readById(this.dialog.id, Endpoint.Sala).subscribe(x => {\n            this.sala = x;\n        })\n  }\n\n  alterarSala(){\n    \n      this.servicoSala.update(this.sala, Endpoint.Sala).subscribe(x => {\n        this.servico.showMessage(\"Sala alterada com sucesso!\", false);\n      })\n\n\n  }\n  \n  fecharPopup(){\n    this.dialog.close()\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Nova Sala</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Sala\" \n                [(ngModel)]=\"sala.nomeSala\" name=\"nomeSala\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"ativo\">\n                    <input name=\"ativo\" [(ngModel)]=\"sala.ativo\" [checked]=\"sala.ativo\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"alterarSala()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n        \n</mat-card>","import { Component, OnInit, Output,Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n\n@Component({\n  selector: 'app-agenda-alterar-unidade',\n  templateUrl: './agenda-alterar-unidade.component.html',\n  styleUrls: ['./agenda-alterar-unidade.component.css']\n})\nexport class AgendaAlterarUnidadeComponent implements OnInit {\n\n  unidade : Unidade\n\n  constructor(\n              public dialog : MatDialogRef<AgendaAlterarUnidadeComponent>,\n              private servicoUnidade : ServiceAllService<Unidade>,\n              private servico : UtilService,\n\n              ) { }\n\n\n\n\n  ngOnInit(): void {\n      this.buscarUnidade();\n  }\n\n  buscarUnidade(){\n    this.servicoUnidade.readById(this.dialog.id, Endpoint.Unidade).subscribe(un => {\n      this.unidade = un;\n    })\n  }\n\n\n  editarUnidade(){\n\n      this.servicoUnidade.update(this.unidade, Endpoint.Unidade).subscribe(() => {\n        this.servico.showMessage(\"Unidade alterada com sucesso!\", false)\n        this.fecharPopup();\n\n        \n      })\n  }\n\n  fecharPopup(){\n      this.dialog.close()\n      this.dialog.componentInstance\n  }\n\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Unidade</mat-card-title>\n        <form>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Id\" \n                [(ngModel)]=\"unidade.id\" name=\"id\" disabled = \"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Unidade\" \n                [(ngModel)]=\"unidade.nomeUnidade\" name=\"nomeUnidade\">\n            </mat-form-field>\n\n            \n            <mat-form-field>\n                <input matInput placeholder=\"bloqueado\">\n                    <input name=\"bloqueado\" [(ngModel)]=\"unidade.bloqueado\" [checked]=\"unidade.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"unidade.nomeUnidade\" mat-raised-button (click)=\"editarUnidade()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n       \n</mat-card>","import { getLocaleDateTimeFormat } from '@angular/common';\nimport { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { Unidade } from '../../../../models/Unidade/unidadeModel';\n\n\nimport { GrupoUsuario } from '../../../../models/usuarios/GrupoUsuarios';\nimport { AgendaCreateComponent } from '../../agenda-create/agenda-create.component';\nimport { AgendaAlterarUnidadeComponent } from '../agenda-alterar-unidade/agenda-alterar-unidade.component';\nimport { AgendaExcluirUnidadeComponent } from '../agenda-excluir-unidade/agenda-excluir-unidade.component';\nimport { UnidadeSalaCadastroComponent } from '../Sala/unidade-sala-cadastro/unidade-sala-cadastro.component';\nimport { UnidadeSalaDeleteComponent } from '../Sala/unidade-sala-delete/unidade-sala-delete.component';\nimport { UnidadeSalaUpdateComponent } from '../Sala/unidade-sala-update/unidade-sala-update.component';\n\n@Component({\n  selector: 'app-agenda-cadastro-unidade',\n  templateUrl: './agenda-cadastro-unidade.component.html',\n  styleUrls: ['./agenda-cadastro-unidade.component.css']\n})\nexport class AgendaCadastroUnidadeComponent implements OnInit {\n\nColunas = ['id','dtCriacao', 'nomeUnidade','bloqueado','action']\nColunasSala = ['id','dtCriacao', 'nomeSala', 'ativo','action']\n\nunidade : Unidade = new Unidade\n\nnovaUnidade : boolean = false;\n\nunidades : Unidade[];\natualizarChamada: boolean = false; \n\nvlrsala : string = null;\n\nsalas : Sala[];\nunidadeSelecionada : number = 0;\n  constructor(\n             public dialog : MatDialogRef<AgendaCadastroUnidadeComponent>,\n             private servico : UtilService,\n             private ServicoUnidade : ServiceAllService<Unidade>,\n             private servicoSala : ServiceAllService<Sala>\n\n              ) { }\n\n  ngOnInit(): void {\n      this.buscarUnidade(\"\");\n      \n  }\n\n\n  cadUnidade(){\n    this.novaUnidade = true;\n  }\n\n  addUnidade(){\n    this.unidadeSelecionada = 0;\n\n    this.unidade.criadoPor = this.servico.Sessao().UsuarioId;\n    this.unidade.dtCriacao = new Date;\n    this.unidade.empresaid =  Number(this.servico.Sessao().IdEmpresa);\n    \n    this.ServicoUnidade.create(this.unidade, Endpoint.Unidade).subscribe(() => {\n     this.servico.showMessage(\"Unidade cadastrada com sucesso\", false);\n     this.servico.atualizaRota(\"agenda\", true);\n     this.novaUnidade = false;\n   })\n\n  }\n\n  buscarUnidade(vlrTxt : string){\n    \n    this.ServicoUnidade.read(Endpoint.Unidade).subscribe(un => {\n      this.unidades = vlrTxt == null ? un.filter(x => x.empresaid.toString() == this.servico.Sessao().IdEmpresa) :\n                                         un.filter(x => x.empresaid.toString() == this.servico.Sessao().IdEmpresa && x.nomeUnidade.toLowerCase().includes(vlrTxt.toLowerCase()));\n    })\n    \n  }\n\n  AtualizarUnidade(id :string){\n\n    this.servico.Popup(id, AgendaAlterarUnidadeComponent, '500px', '400px');\n\n\n  }\n\n  ExcluirUnidade(id : string){\n    this.servico.Popup(id, AgendaExcluirUnidadeComponent, '500px', '400px');\n\n  }\n\n\n  fecharPopup(){\n      this.dialog.close();\n  }\n  voltar(){\n    this.novaUnidade = false;\n  }\n\n  selecionarUnidade(keyEvent : any){\n\n    if (keyEvent.which === 13 || keyEvent.which == 1){\n      let vlrTxt =  (<HTMLInputElement>document.getElementById('txtbusca')).value;\n      this.buscarUnidade(vlrTxt);\n    }\n    \n    \n  }\n\n\n  testePopup(){\n    this.servico.Popup(\"\",UnidadeSalaCadastroComponent, \"500px\", \"500px\");\n  }\n\n  UnidadeSelecionada(id){\n      this.unidadeSelecionada = id;\n  }\n\n  selecionaAba(tab){\n      \n      if (tab.index == 1)\n      {\n        this.buscarSala()\n        \n\n      }else{\n        this.unidadeSelecionada = 0\n      }\n}\n\n\n  buscarSala(){\n    \n    this.servicoSala.read(Endpoint.Sala).subscribe(sl => {\n      this.salas = this.vlrsala == null ?   sl.filter(x => x.unidadeid == this.unidadeSelecionada) :\n                                            sl.filter(x => x.unidadeid == this.unidadeSelecionada && x.nomeSala.toLowerCase().includes(this.vlrsala.toLowerCase())) \n    })\n   \n\n  }\n  \n  selecionarSala(keyEvent : any){\n    \n    if (keyEvent.which == 13 || keyEvent.which == 1){\n      this.vlrsala =  (<HTMLInputElement>document.getElementById('txtbusca')).value;\n    }\n\n    this.buscarSala();\n\n  }\n  AtualizarSala(id : any){\n      this.servico.Popup(id, UnidadeSalaUpdateComponent, \"500px\", \"400px\");\n  }\n\n  Excluirsala(id : any){\n      this.servico.Popup(id,UnidadeSalaDeleteComponent, \"500px\", \"400px\")\n  }\n\n  cadsala(){\n    this.servico.Popup(this.unidadeSelecionada.toString(), UnidadeSalaCadastroComponent, \"500px\", \"400px\"); \n  }\n\n}\n","<mat-tab-group (selectedTabChange)=\"selecionaAba($event)\" >\n        \n    <mat-tab label=\"Cadastro de Unidade\" id=\"labelUnidade\">\n\n        <div class=\"container\">\n                    <mat-card *ngIf=\"novaUnidade\">\n                        <mat-card-title>Nova Unidade</mat-card-title>\n                            <form>\n                                <mat-form-field>\n                                    <input matInput placeholder=\"Nome Unidade\" \n                                    [(ngModel)]=\"unidade.nomeUnidade\" name=\"nomeUnidade\">\n                                </mat-form-field>\n                                \n                                <mat-form-field>\n                                    <input matInput placeholder=\"bloqueado\">\n                                        <input name=\"bloqueado\" [(ngModel)]=\"unidade.bloqueado\" [checked]=\"unidade.bloqueado\" type=\"checkbox\">\n                                </mat-form-field>\n                            </form>\n                    \n                            <button *ngIf=\"unidade.nomeUnidade\" mat-raised-button (click)=\"addUnidade()\" color=\"primary\" > \n                                Salvar\n                            </button>\n                            \n                            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                              Sair\n                            </button>\n                            <button mat-raised-button (click)=\"voltar()\" color=\"primary\" > \n                              Voltar\n                            </button>\n                    </mat-card>\n\n\n            <mat-card *ngIf=\"!novaUnidade\" >\n                \n              <mat-card-title class=\"titleCard\" >Unidades</mat-card-title>\n\n                <div class=\"mat-elevation-z3\">\n        \n                  <span class=\"botaoBusca\" (click)=\"selecionarUnidade($event)\">\n                    <i class=\"material-icons\">search</i>\n                  </span>\n            \n                  <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarUnidade($event)\"  value=\"\">\n\n                  <a (click)=\"cadUnidade()\" class=\"cadUnidade\" >\n                    <i class=\"material-icons\">add</i>\n                  </a>\n                  <a (click)=\"testePopup()\" class=\"cadUnidade\" >\n                    <i class=\"material-icons\">person</i>\n                  </a>\n\n                  <table class=\"tabelaUnidade\" mat-table [dataSource]=\"unidades\">\n                        <!-- Id Column -->\n                        <ng-container matColumnDef=\"id\">\n                          <th mat-header-cell *matHeaderCellDef>Id</th>\n                          <td mat-cell id=\"idunidade\" *matCellDef=\"let row\">{{row.id}}</td>\n                        </ng-container>\n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"dtCriacao\">\n                          <th mat-header-cell *matHeaderCellDef>Criado Em</th>\n                          <td mat-cell *matCellDef=\"let row\" >{{row.dtCriacao | date: 'dd/MM/yyyy'}}</td>\n                        </ng-container>\n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"nomeUnidade\">\n                          <th mat-header-cell *matHeaderCellDef>Nome Unidade</th>\n                          <td mat-cell *matCellDef=\"let row\">{{row.nomeUnidade}}</td>\n                        </ng-container>\n                        <!-- status -->\n                        <ng-container matColumnDef=\"bloqueado\">\n                          <th mat-header-cell *matHeaderCellDef>Status</th>\n                            <td mat-cell *matCellDef=\"let row\">\n                              <div *ngIf=\"row.bloqueado\" >\n                                <i class=\"material-icons\">\n                                  lock\n                                </i>\n                              </div>\n                              <div *ngIf=\"!row.bloqueado\" >\n                                <i class=\"material-icons\">  \n                                  lock_open\n                                </i>\n                              </div>\n                            </td>\n                          </ng-container>\n                        \n                        <!-- Coluna de Ações -->\n                        <ng-container matColumnDef=\"action\">\n                          <th mat-header-cell *matHeaderCellDef>Ações</th>\n                          <td mat-cell *matCellDef=\"let row\">\n                           \n                            <a  (click)=\"AtualizarUnidade(row.id)\" class=\"edit\">\n                              <i class=\"material-icons\">\n                                 edit\n                              </i>\n                              </a>\n                            <a (click)=\"ExcluirUnidade(row.id)\" class=\"delete\">\n                              <i class=\"material-icons\">\n                                delete\n                              </i>\n                            </a>\n                              \n                          </td>\n                        </ng-container>\n                    \n                        <tr mat-header-row *matHeaderRowDef=\"Colunas\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: Colunas;\" (click)=\"UnidadeSelecionada(row.id)\"></tr>\n                  </table>\n                </div>\n            </mat-card>\n        </div>\n    </mat-tab>  \n    \n    \n    <mat-tab *ngIf=\"unidadeSelecionada > 0\" label=\"Cadastro de Sala\">\n     \n      <mat-card>\n                \n        <mat-card-title class=\"titleCard\" >Salas</mat-card-title>\n    \n          <div class=\"mat-elevation-z3\">\n    \n            <span class=\"botaoBusca\" (click)=\"selecionarSala($event)\">\n              <i class=\"material-icons\">search</i>\n            </span>\n      \n            <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarSala($event)\"  value=\"\">\n    \n            <a (click)=\"cadsala()\" class=\"cadsala\" >\n              <i class=\"material-icons\">add</i>\n            </a>\n    \n            <table class=\"tabela\" mat-table [dataSource]=\"salas\">\n                  <!-- Id Column -->\n                  <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef>Id</th>\n                    <td mat-cell id=\"idsala\" *matCellDef=\"let row\">{{row.id}}</td>\n                  </ng-container>\n                  <!-- Name Column -->\n                  <ng-container matColumnDef=\"dtCriacao\">\n                    <th mat-header-cell *matHeaderCellDef>Criado Em</th>\n                    <td mat-cell *matCellDef=\"let row\" >{{row.dtCriacao | date: 'dd/MM/yyyy'}}</td>\n                  </ng-container>\n                  <!-- Name Column -->\n                  <ng-container matColumnDef=\"nomeSala\">\n                    <th mat-header-cell *matHeaderCellDef>Nome Sala</th>\n                    <td mat-cell *matCellDef=\"let row\">{{row.nomeSala}}</td>\n                  </ng-container>\n    \n    \n                  <!-- status -->\n                  <ng-container matColumnDef=\"ativo\">\n                    <th mat-header-cell *matHeaderCellDef>Status</th>\n                      <td mat-cell *matCellDef=\"let row\">\n                        <div *ngIf=\"row.ativo\" >\n                          <i class=\"material-icons\">\n                            lock\n                          </i>\n                        </div>\n                        <div *ngIf=\"!row.ativo\" >\n                          <i class=\"material-icons\">  \n                            lock_open\n                          </i>\n                        </div>\n                      </td>\n                    </ng-container>\n                  \n                  <!-- Coluna de Ações -->\n                  <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef>Ações</th>\n                    <td mat-cell *matCellDef=\"let row\">\n                     \n                      <a  (click)=\"AtualizarSala(row.id)\" class=\"edit\">\n                        <i class=\"material-icons\">\n                           edit\n                        </i>\n                        </a>\n                      <a (click)=\"Excluirsala(row.id)\" class=\"delete\">\n                        <i class=\"material-icons\">\n                          delete\n                        </i>\n                      </a>\n                        \n                    </td>\n                  </ng-container>\n              \n                  <tr mat-header-row *matHeaderRowDef=\"ColunasSala\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: ColunasSala;\"></tr>\n            </table>\n          </div>\n      </mat-card>\n\n\n\n\n    </mat-tab>\n    \n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { endWith } from 'rxjs/operators';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-excluir-unidade',\n  templateUrl: './agenda-excluir-unidade.component.html',\n  styleUrls: ['./agenda-excluir-unidade.component.css']\n})\nexport class AgendaExcluirUnidadeComponent implements OnInit {\n\n\n  unidade : Unidade\n\n  constructor(\n              public dialog : MatDialogRef<AgendaExcluirUnidadeComponent>,\n              private servicoUnidade : ServiceAllService<Unidade>, \n              private servico : UtilService\n              ) { }\n\n  ngOnInit(): void {\n    this.buscarUnidade();\n  }\n\n  buscarUnidade(){\n      this.servicoUnidade.readById(this.dialog.id, Endpoint.Unidade).subscribe(un => {\n        this.unidade = un;\n      })\n  }\n\n  ExcluirUnidade(){\n      this.servicoUnidade.delete(Number(this.dialog.id), Endpoint.Unidade).subscribe(() => {\n        this.servico.showMessage(\"Unidade Excluída com sucesso!\", false);\n        this.servico.atualizaRota(\"agenda\", true)\n        this.fecharPopup();\n      })\n  }\n\n\n  fecharPopup(){\n    this.dialog.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Unidade</mat-card-title>\n        <form>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Id\" \n                [(ngModel)]=\"unidade.id\" name=\"id\" disabled = \"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Nome Unidade\" \n                [(ngModel)]=\"unidade.nomeUnidade\" name=\"nomeUnidade\" disabled = \"true\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"unidade.nomeUnidade\" mat-raised-button (click)=\"ExcluirUnidade()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n          Sair\n        </button>\n       \n</mat-card>","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Aplicacao } from './../../../Negocio/Aplicacao';\nimport { Router } from '@angular/router';\n\nimport { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\nimport { UtilService } from 'src/app/services/util.service';\nimport { TipoUsuario, TipoUsuarioSistema } from 'src/app/models/usuarios/enumUsuarios';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { UsuarioCreateComponent } from 'src/app/components/usuario/usuario-create/usuario-create.component';\nimport { AgendaGrupoCadastroComponent } from '../GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component';\nimport { AgendaGrupoUpdateComponent } from '../GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component';\nimport { AgendaGrupoExcluirComponent } from '../GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component';\nimport { AgendaCadastroUnidadeComponent } from '../Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component';\nimport { Horarios } from 'src/app/models/Agenda/modeloHorarios';\nimport { HorarioAgenda } from 'src/app/models/Agenda/modelHorarioAgenda';\nimport { query } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-agenda-create',\n  templateUrl: './agenda-create.component.html',\n  styleUrls: ['./agenda-create.component.css']\n})\nexport class AgendaCreateComponent implements OnInit {\n  \n  agenda : Agenda = new Agenda()\n  \n\n\n  comboProfissional  : Usuario[];\n  comboUnidade : Unidade[];\n  comboSala : Sala[];\n  comboTipoGrupoAgenda : GrupoAgenda[];\n  empresa : Empresa[];\n\n  //Grupo\n  grupo : GrupoAgenda[]\n  ColunasGrupo = ['id','dtCriacao','nomeGrupoAgenda','bloqueado','action']\n  GrupoSelecionado : number = 0;\n\n  //Horários\n  segunda : HorarioAgenda[];\n  terca : HorarioAgenda[];\n  quarta : HorarioAgenda[];\n  quinta : HorarioAgenda[];\n  sexta : HorarioAgenda[];\n  sabado : HorarioAgenda[];\n  domingo : HorarioAgenda[];\n\n  ColunasHorarios = ['Hora','Tempo']\n  dadosHorarios : HorarioAgenda = new HorarioAgenda();\n\n\n  constructor(private route : Router,\n              public dialogRef: MatDialogRef <AgendaCreateComponent>, \n              public overlay : Overlay,\n              public dialog: MatDialog,         \n              private _serviceAgenda : ServiceAllService<Agenda>,\n              private _serviceUnidade : ServiceAllService<Unidade>,\n              private _serviceSala : ServiceAllService<Sala>,\n              private _serviceGrupoAgenda : ServiceAllService<GrupoAgenda>,\n              private _serviceUsuario : ServiceAllService<Usuario>,\n              private _utilService : UtilService,\n              private servicoGrupo : ServiceAllService<GrupoAgenda>,\n              private servicoHorario : ServiceAllService<HorarioAgenda>\n    ) { }\n\n\n  ngOnInit(): void {\n     this.carregaCombos()\n     this.buscarHorarios();\n  }\n  \n  createAgenda(){\n     this.agenda.Empresaid = Number(this._utilService.Sessao().IdEmpresa)\n \n      this._serviceAgenda.create(this.agenda, Endpoint.Agenda).subscribe(ag => {\n      this.agenda = ag;\n      this._utilService.showMessage(\"Agenda cadastrada com sucesso!\",false);\n      this.route.navigate(['home-component'])\n      });\n        this.route.navigate(['home-component'])\n  }\n\n  cancel(){\n    this.route.navigate(['home-component'])  \n  }\n\n  BuscarSala(){\n      this.carregaComboSala(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa)\n  }\n\n  AtualizarComboProfissional(){\n    this.carregaComboProfissional(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa)\n  }\n\n  carregaCombos(){\n\n    this.carregaComboProfissional(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa)\n      this.carregaComboUnidade(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n      \n      \n      this.carregaComboSala(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n      \n      this.carregaComboGrupoAgenda(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n  }\n\n  carregaComboProfissional(grpId: number , empId: string){\n    this.comboProfissional =  new Array();\n    this._serviceUsuario.read(Endpoint.Usuario).subscribe(pro => {\n      pro = this.comboProfissional = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador ? this.comboProfissional = pro.filter(x => x.empresaid.toString() == empId) : null;\n    });\n  }\n  \n  carregaComboUnidade(grpId: number , empId: string){\n    this.comboUnidade =  new Array()\n    this._serviceUnidade.read(Endpoint.Unidade).subscribe(un => {\n      un = this.comboUnidade = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador ? this.comboUnidade = un.filter(x => x.empresaid.toString() == empId) : null;\n    });\n  }\n\n  carregaComboSala(grpId: number , empId: string){\n    this.comboSala = new Array();\n\n    this._serviceSala.read(Endpoint.Sala).subscribe(sl => {\n      sl = this.comboSala = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador? this.comboSala = sl.filter(x => x.empresaid .toString() == empId && x.unidadeid == Number(this.agenda.unidadeid)) : null;                      \n    });\n    \n  }\n\n  carregaComboGrupoAgenda(grpId: number , empId: string){\n    this.comboTipoGrupoAgenda = new Array();\n    this._serviceGrupoAgenda.read(Endpoint.GrupoAgenda).subscribe(ga => {\n      ga = this.comboTipoGrupoAgenda = grpId == TipoUsuario.Master || grpId == TipoUsuario.Administrador ? this.comboTipoGrupoAgenda = ga.filter(x => x.empresaid .toString() == empId) : null;\n    });\n  }\n\n  AtualizarComboGrupoAgenda(){\n    this.carregaComboGrupoAgenda(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n  }\n\n  AtualizarComboUnidade(){\n    this.carregaComboUnidade(this._utilService.Sessao().GrupoUsuario, this._utilService.Sessao().IdEmpresa);\n  }\n\n  fecharPopup(): void {\n    this.dialogRef.close();\n  }\n\n  novoUsuario(){\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        this._utilService.Popup(\"\", UsuarioCreateComponent ,\"700px\",\"820px\");\n    }else{\n      this._utilService.showMessage(\"Solicitar ao um Usuário Master para criar Nova Agenda!\",true);\n    }\n  }\n\n  selecionaAbaAgenda(tab : any){\n    \n    switch (tab.index) {\n      case 1 :\n          this.buscarGrupos(\"\")\n        break;\n      default:\n        break;\n    }\n    \n  }\n\n  ////GRUPOPS//////\n  selecionarGrupo(event : any){\n\n      if(event.which == 1 || event.which ==13){\n        \n        let txtBusca = (<HTMLInputElement>document.getElementById('txtbusca')).value\n        if (txtBusca != null)\n          this.buscarGrupos(txtBusca);\n      \n      }\n\n  }\n\n  buscarGrupos(txtbusca : any){\n      \n    this.servicoGrupo.read(Endpoint.GrupoAgenda).subscribe(x => {\n        this.grupo = txtbusca == null ? x : x.filter(x => x.nomeGrupoAgenda.toLocaleLowerCase().includes(txtbusca.toLocaleLowerCase()))\n    })\n  }\n\n  cadGrupo(){\n    this._utilService.Popup(\"\", AgendaGrupoCadastroComponent, \"500px\", \"500px\");\n  }\n\n  AtualizarGrupo(id : string){\n    this._utilService.Popup(id, AgendaGrupoUpdateComponent, \"500px\", \"500px\");\n  }\n\n  ExcluirGrupo(id : string){\n    this._utilService.Popup(id, AgendaGrupoExcluirComponent, \"500px\", \"500px\");\n  }\n\n  novaUnidade(){\n    this._utilService.Popup(\"\", AgendaCadastroUnidadeComponent, \"700px\", \"500px\")\n  }\n\n\n  ///HORÁRIOS///////\n  CriarHorarios(){\n    \n    if(this.dadosHorarios.diaDasemana == null)\n      this._utilService.showMessage(\"Informe o dia da Semana\", false);\n    else if(this.dadosHorarios.tipoHorario == null)\n      this._utilService.showMessage(\"Informe o tipo de horário\", false);\n    else if(this.dadosHorarios.intervalo == null)\n      this._utilService.showMessage(\"Intervalo de tempo Obrigatório\", false);\n    else if (this.dadosHorarios.horainicio == null || this.dadosHorarios.horafim == null)\n      this._utilService.showMessage(\"Informar inicio e fim da geração de Horas\", false);\n    else{\n      this.dadosHorarios.dtCriacao = new Date;\n      this.dadosHorarios.criadoPor = this._utilService.Sessao().UsuarioId;\n      //this.dadosHorarios.id_agenda = Number(this.agenda.id);\n      this.dadosHorarios.id_agenda = 1;\n      this.dadosHorarios.id_empresa = Number(this._utilService.Sessao().IdEmpresa);\n      this._utilService.showMessage(\"Aguarde Criando os Horários dessa agenda\", false);    \n\n      this.servicoHorario.create(this.dadosHorarios, Endpoint.AgendaHorarios).subscribe(h => {\n        this._utilService.showMessage(\"Horários Criados como solicitado\", false);  \n        this.buscarHorarios();\n      });\n\n      \n    }\n    this.buscarHorarios();\n  }\n\n  buscarHorarios(){\n    this.servicoHorario.read(Endpoint.AgendaHorarios).subscribe(x => {\n      this.domingo = x.filter(x => x.diaDasemana == 1);\n      this.segunda = x.filter(x => x.diaDasemana == 2);\n      this.terca = x.filter(x => x.diaDasemana == 3);\n      this.quarta = x.filter(x => x.diaDasemana == 4);\n      this.quinta = x.filter(x => x.diaDasemana == 5);\n      this.sexta = x.filter(x => x.diaDasemana == 6);\n      this.sabado = x.filter(x => x.diaDasemana == 7);\n    })\n  }\n}\n","<mat-tab-group (selectedTabChange)=\"selecionaAbaAgenda($event)\" >\r\n<!--Cadastro de AGENDA-->\r\n<mat-tab label=\"Cadastro de Agenda\" id=\"labelAgenda\">  \r\n        <div class=\"container\">\r\n\r\n            <mat-card>\r\n                <mat-card-title>Nova Agenda</mat-card-title>\r\n                    <form>\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Nome Agenda\" \r\n                             [(ngModel)]=\"agenda.nomeAgenda\" name=\"nomeAgenda\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Profissional\">\r\n                            <i class=\"material-icons ordem\" (click)=\"AtualizarComboProfissional()\" >refresh</i>\r\n                            <i class=\"material-icons ordem\" (click)=\"novoUsuario()\" >person_add</i>\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.profissionalid\" placeholder=\"Profissional\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option *ngFor=\"let tipoProf of comboProfissional \" [value]=\"tipoProf.id\">\r\n                                        {{tipoProf.nome}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Unidade Atendimento\">\r\n                            <i class=\"material-icons ordem\" (click)=\"AtualizarComboUnidade()\" >refresh</i>\r\n                            <i class=\"material-icons ordem\" (click)=\"novaUnidade()\" >house</i>\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.unidadeid\" placeholder=\"Unidade Atendimento\" (selectionChange)=\"BuscarSala()\" >\r\n                                <mat-option *ngFor=\"let tipounidade of comboUnidade \" [value]=\"tipounidade.id\">\r\n                                    {{tipounidade.nomeUnidade}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Sala Atendimento\">\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.salaid\" placeholder=\"Sala Atendimento\" >\r\n                                <mat-option *ngFor=\"let tipoSala of comboSala \" [value]=\"tipoSala.id\">\r\n                                    {{tipoSala.nomeSala}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Substituição\">\r\n                                <input name=\"substituicao\" [(ngModel)]=\"agenda.substituicao\" [checked]=\"agenda.substituicao\" type=\"checkbox\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Grupo Agenda\">\r\n                            <i class=\"material-icons ordem\" (click)=\"AtualizarComboGrupoAgenda()\" >refresh</i>\r\n                            <p></p>\r\n                            <mat-select [(value)]=\"agenda.grupoAgendaid\" placeholder=\"Grupo Agenda\" >\r\n                                <mat-option *ngFor=\"let tipoGrupo of comboTipoGrupoAgenda \" [value]=\"tipoGrupo.id\">\r\n                                    {{tipoGrupo.nomeGrupoAgenda}} \r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Vigência Início\"\r\n                             [(ngModel)]=\"agenda.vigenciaInicio\" name=\"vigenciaInicio\" type=\"datetime-local\" teste >\r\n                        </mat-form-field>\r\n\r\n            \r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Vigência Fim\" \r\n                             [(ngModel)]=\"agenda.vigenciaFim\" name=\"vigenciaFim\" type=\"datetime-local\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Considera Feriado\">\r\n                                <input name=\"considerarFeriado\" [(ngModel)]=\"agenda.considerarFeriado\" [checked]=\"agenda.considerarFeriado\" type=\"checkbox\">\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"bloqueado\">\r\n                                <input name=\"bloqueado\" [(ngModel)]=\"agenda.bloqueado\" [checked]=\"agenda.bloqueado\" type=\"checkbox\">\r\n                        </mat-form-field>\r\n\r\n\r\n                    </form>\r\n            \r\n                    <button *ngIf=\"agenda.nomeAgenda && agenda.vigenciaInicio && agenda.vigenciaFim\"  mat-raised-button (click)=\"createAgenda()\" color=\"primary\" > \r\n                        Salvar\r\n                    </button>\r\n                    \r\n                    <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \r\n                        Cancelar\r\n                    </button>\r\n            </mat-card>\r\n\r\n        </div>\r\n    </mat-tab>\r\n <!--Cadastro Grupo AGENDA-->   \r\n    <mat-tab label=\"Grupo Agenda\">\r\n     \r\n        <mat-card>\r\n                  \r\n          <mat-card-title class=\"titleCard\" >Grupo Agenda </mat-card-title>\r\n      \r\n            <div class=\"mat-elevation-z3\">\r\n      \r\n              <span class=\"botaoBusca\" (click)=\"selecionarGrupo($event)\">\r\n                <i class=\"material-icons\">search</i>\r\n              </span>\r\n        \r\n              <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarGrupo($event)\"  value=\"\">\r\n      \r\n              <a (click)=\"cadGrupo()\" class=\"cadGrupo\" >\r\n                <i class=\"material-icons\">add</i>\r\n              </a>\r\n      \r\n              <table class=\"tabela\" mat-table [dataSource]=\"grupo\">\r\n                    <!-- Id Column -->\r\n                    <ng-container matColumnDef=\"id\">\r\n                      <th mat-header-cell *matHeaderCellDef>Id</th>\r\n                      <td mat-cell id=\"idgrupo\" *matCellDef=\"let row\">{{row.id}}</td>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"dtCriacao\">\r\n                      <th mat-header-cell *matHeaderCellDef>Criado Em</th>\r\n                      <td mat-cell *matCellDef=\"let row\" >{{row.dtCriacao | date: 'dd/MM/yyyy'}}</td>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"nomeGrupoAgenda\">\r\n                      <th mat-header-cell *matHeaderCellDef>Nome Grupo</th>\r\n                      <td mat-cell *matCellDef=\"let row\">{{row.nomeGrupoAgenda}}</td>\r\n                    </ng-container>\r\n      \r\n\r\n                    <!-- status -->\r\n                    <ng-container matColumnDef=\"bloqueado\">\r\n                      <th mat-header-cell *matHeaderCellDef>Status</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                          <div *ngIf=\"row.bloqueado\" >\r\n                            <i class=\"material-icons\">\r\n                              lock\r\n                            </i>\r\n                          </div>\r\n                          <div *ngIf=\"!row.bloqueado\" >\r\n                            <i class=\"material-icons\">  \r\n                              lock_open\r\n                            </i>\r\n                          </div>\r\n                        </td>\r\n                      </ng-container>\r\n                    \r\n                    <!-- Coluna de Ações -->\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <th mat-header-cell *matHeaderCellDef>Ações</th>\r\n                      <td mat-cell *matCellDef=\"let row\">\r\n                       \r\n                        <a  (click)=\"AtualizarGrupo(row.id)\" class=\"edit\">\r\n                          <i class=\"material-icons\">\r\n                             edit\r\n                          </i>\r\n                          </a>\r\n                        <a (click)=\"ExcluirGrupo(row.id)\" class=\"delete\">\r\n                          <i class=\"material-icons\">\r\n                            delete\r\n                          </i>\r\n                        </a>\r\n                          \r\n                      </td>\r\n                    </ng-container>\r\n                \r\n                    <tr mat-header-row *matHeaderRowDef=\"ColunasGrupo\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: ColunasGrupo;\"></tr>\r\n              </table>\r\n            </div>\r\n        </mat-card>\r\n  \r\n  \r\n  \r\n  \r\n      </mat-tab>\r\n\r\n\r\n      <!--Cadastro de Horários-->\r\n   \r\n      <mat-tab label = \"Horários\">\r\n        <div class=\"HorarioHeader\">GERAÇÃO DE HORARIOS</div>\r\n        <hr /><br />\r\n        <div class=\"display\">\r\n          <div>Dia da Semana</div>\r\n          <div class=\"displayTipo\">Tipo</div>\r\n          <div class=\"displayintervalo\">Intervalo</div>\r\n          <div class=\"displayInicioGeracao\">Início e Fim da Geração</div>\r\n        </div>\r\n        <br>\r\n\r\n      <mat-select [(value)]=\"dadosHorarios.diaDasemana\" placeholder=\"Selecione\" class=\"formataSelectDia\" >\r\n          <mat-option [value]=\"1\">Domingo</mat-option>\r\n          <mat-option [value]=\"2\">Segunda</mat-option>\r\n          <mat-option [value]=\"3\">Terça</mat-option>\r\n          <mat-option [value]=\"4\">Quarta</mat-option>\r\n          <mat-option [value]=\"5\">Quinta</mat-option>\r\n          <mat-option [value]=\"6\">Sexta</mat-option>\r\n          <mat-option [value]=\"7\">Sábado</mat-option>\r\n      </mat-select>\r\n      \r\n      <mat-select [(value)]=\"dadosHorarios.tipoHorario\" placeholder=\"Selecione\" class=\"formataSelectTipo\" >\r\n        <mat-option [value]=\"1\">Normal</mat-option>\r\n        <mat-option [value]=\"2\">Encaixe</mat-option>\r\n      </mat-select>\r\n    \r\n\r\n      <input class=\"tempo\" name=\"intervalo\" id=\"intervalo\" [(ngModel)]=\"dadosHorarios.intervalo\" type=\"time\" >\r\n      <input class=\"tempo\" name=\"horainicio\" id=\"horainicio\" [(ngModel)]=\"dadosHorarios.horainicio\" type=\"time\">\r\n      <input class=\"tempo\" name=\"horafim\" id=\"horafim\" [(ngModel)]=\"dadosHorarios.horafim\" type=\"time\" >\r\n\r\n        <span (click)=\"CriarHorarios()\" >\r\n          <i class=\"material-icons botao\">refresh</i>\r\n        </span>\r\n      \r\n      <br />\r\n      \r\n      <div class=\"display\">\r\n     \r\n        <!-- Dias da semana \r\n        \r\n        Segunda-->\r\n     \r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"segunda\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n               \r\n              <th mat-header-cell *matHeaderCellDef><b>Segunda</b> <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora | slice:0:5}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Intervalo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n      \r\n        <!--Terça-->\r\n\r\n        <table class=\"tabelaHorario\" mat-table [dataSource]=\"terca\">\r\n          <!-- Id Column -->\r\n          <ng-container matColumnDef=\"Hora\">\r\n             \r\n            <th mat-header-cell *matHeaderCellDef><b>Terça</b> <br />Hora</th>\r\n            <td mat-cell id=\"idhoraterca\" *matCellDef=\"let row\">{{row.hora | slice:0:5}}</td>\r\n          </ng-container>\r\n          <!-- Name Column -->\r\n          <ng-container matColumnDef=\"Tempo\">\r\n            <th mat-header-cell *matHeaderCellDef><br />Intervalo</th>\r\n            <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5}}</td>\r\n          </ng-container>\r\n        \r\n          <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n        </table>\r\n\r\n           <!--Quarta-->\r\n\r\n           <table class=\"tabelaHorario\" mat-table [dataSource]=\"quarta\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n               \r\n              <th mat-header-cell *matHeaderCellDef><b>Quarta</b> <br />Hora</th>\r\n              <td mat-cell id=\"idhoraquarta\" *matCellDef=\"let row\">{{row.hora | slice:0:5}}  </td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Intervalo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Quinta-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"quinta\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef><b>Quinta</b> <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora | slice:0:5}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Intervalo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Sexta-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"sexta\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef><b>Sexta</b> <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora | slice:0:5}}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Intervalo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5}}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Sábado-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"sabado\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef><b>Sábado</b> <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora | slice:0:5 }}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Intervalo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5 }}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n          <!--Domingo-->\r\n\r\n          <table class=\"tabelaHorario\" mat-table [dataSource]=\"domingo\">\r\n            <!-- Id Column -->\r\n            <ng-container matColumnDef=\"Hora\">\r\n              <th mat-header-cell *matHeaderCellDef><b>Domingo</b> <br />Hora</th>\r\n              <td mat-cell id=\"idhora\" *matCellDef=\"let row\">{{row.hora | slice:0:5 }}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Tempo\">\r\n              <th mat-header-cell *matHeaderCellDef><br />Intervalo</th>\r\n              <td mat-cell *matCellDef=\"let row\" >{{row.intervalo | slice:0:5 }}</td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"ColunasHorarios\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: ColunasHorarios;\"></tr>\r\n          </table>\r\n\r\n      </div>\r\n\r\n      </mat-tab>\r\n\r\n      <!--Cadastro dos dias que não atende-->\r\n      <mat-tab label = \"Data N.Atende\">\r\n\r\n      </mat-tab>\r\n\r\n\r\n\r\n</mat-tab-group>","import { Route } from '@angular/compiler/src/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-delete',\n  templateUrl: './agenda-delete.component.html',\n  styleUrls: ['./agenda-delete.component.css']\n})\nexport class AgendaDeleteComponent implements OnInit {\n\n  agenda : Agenda = {  \n    id: null,\n    DtCriacao: new Date, \n    nomeAgenda: null,\n    profissionalid: null,\n    Empresaid: null,\n    unidadeid: null,\n    salaid: null,\n    substituicao: false,\n    grupoAgendaid: null,\n    vigenciaInicio: null,\n    vigenciaFim: null,\n    considerarFeriado: false,\n    bloqueado: false\n  }\n\n  constructor(\n              public dialgRef : MatDialogRef<AgendaDeleteComponent>,\n              private serviceAgenda : ServiceAllService<Agenda>,\n              private utilService : UtilService,\n              private route : Router\n\n             ) { }\n\n  ngOnInit(): void {\n    this.buscarAgendaByid();\n    \n  }\n\n  ExcluirAgenda(): void{\n      this.serviceAgenda.delete(Number(this.dialgRef.id), Endpoint.Agenda).subscribe(x => {\n          this.utilService.showMessage(\"Agenda Excluida com sucesso\", false);\n          this.route.navigate(['home-component'])\n          this.fecharPopup();\n\n      });\n  }\n\n  fecharPopup():void{\n      this.dialgRef.close();\n  }\n  buscarAgendaByid() : void {\n     this.serviceAgenda.readById(this.dialgRef.id, Endpoint.Agenda).subscribe(ag => {\n       this.agenda = ag;\n     });\n  }\n\n\n}\n \n  \n\n","<div class=\"container\">\n\n    <mat-card>\n        <mat-card-title>Excluir Agenda</mat-card-title>\n            <form>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Id Agenda\" \n                     [(ngModel)]=\"agenda.id\" name=\"idAgenda\" disabled=\"true\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Nome Agenda\" \n                    [(ngModel)]=\"agenda.nomeAgenda\" name=\"nomeAgenda\" disabled=\"true\"> \n                </mat-form-field>\n               \n            </form>\n    \n            <button mat-raised-button (click)=\"ExcluirAgenda()\"  color=\"primary\" > \n                Excluir\n            </button>\n            \n            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                Cancelar\n            </button>\n    </mat-card>\n\n</div>","import { Router } from '@angular/router';\r\nimport { Componentes } from './../../../Negocio/Componentes';\r\nimport { Aplicacao } from './../../../Negocio/Aplicacao';\r\nimport { UtilService } from './../../../services/util.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\r\nimport { ServiceAllService } from 'src/app/services/service-all.service';\r\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\r\nimport { AgendaDto } from 'src/app/models/Agenda/modelRetornoAgenda';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AgendaCreateComponent } from '../agenda-create/agenda-create.component';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { AgendaUpdateComponent } from '../agenda-update/agenda-update.component';\r\nimport { AgendaDeleteComponent } from '../agenda-delete/agenda-delete.component';\r\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\r\nimport { UsuarioCreateComponent } from 'src/app/components/usuario/usuario-create/usuario-create.component';\r\nimport { AgendaCadastroUnidadeComponent } from '../Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component';\r\nimport { EventEmitter } from 'events';\r\nimport { stringify } from '@angular/compiler/src/util';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-agenda-read',\r\n  templateUrl: './agenda-read.component.html',\r\n  styleUrls: ['./agenda-read.component.css']\r\n})\r\nexport class AgendaReadComponent implements OnInit {\r\n\r\n  Colunas = ['id', 'NomeAgenda','Funcionario','NomeEmpresa','NomeUnidade','NomeSala',\r\n                      'substituicao','GrupoAgenda','vigenciaInicio','vigenciaFim','considerarFeriado','bloqueado','action']  \r\n  agenda : AgendaDto[];\r\n\r\n  \r\n\r\n  constructor(\r\n              public dialog: MatDialog,\r\n              public overlay : Overlay,\r\n              private servico : UtilService,\r\n              private _repAgenda : ServiceAllService<AgendaDto>,\r\n\r\n             ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servico.AtualizarMenu(Aplicacao.Agenda,'app_registration','');\r\n    this.buscarAgenda();\r\n  }\r\n\r\n \r\n  buscarAgenda(){\r\n    \r\n    let filtroAgenda = (<HTMLSelectElement>document.getElementById('busca')).value;\r\n\r\n    this._repAgenda.read(Endpoint.Agenda).subscribe(ag => {\r\n      this.agenda = filtroAgenda == null ? ag.filter(x => x.empresaId.toString() == this.servico.Sessao().IdEmpresa) \r\n                    :  ag.filter(x => x.nomeAgenda.toLowerCase().includes(filtroAgenda.toLowerCase()) && x.empresaId.toString() == this.servico.Sessao().IdEmpresa)\r\n    });\r\n  }\r\n\r\n  addNovaAgenda() {\r\n   \r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n      this.servico.Popup(\"0\",AgendaCreateComponent, '50%','98%' );\r\n\r\n    }else{\r\n      this.servico.showMessage(\"Solicitar ao um Usuário Master para criar Nova Agenda!\",true);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  AtualizarAgenda(id : string): void {\r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n      let response  =  this.servico.Popup(id, AgendaUpdateComponent, '30%','80%' )\r\n      \r\n      }else{\r\n        this.servico.showMessage(\"Solicitar ao um Usuário Master para Editar os  dados da Agenda!\",true);\r\n      }   \r\n  }\r\n\r\n  ExcluirAgenda(id : string): void {\r\n      \r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n      {\r\n        this.servico.Popup(id, AgendaDeleteComponent,'30%','25%');\r\n      }\r\n      else\r\n      {\r\n        this.servico.showMessage(\"Solicitar ao um Usuário Master para Excluir a Agenda!\",true);\r\n      }\r\n  }\r\n\r\n\r\n  addUnidade(){\r\n    \r\n    if(this.servico.Sessao().GrupoUsuario == TipoUsuario.Master || this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n      this.servico.Popup(\"0\", AgendaCadastroUnidadeComponent, \"800px\", \"600px\", )\r\n    else\r\n      this.servico.showMessage(\"Solicitar ao um Usuário Master cadastrar a Unidade\",true);\r\n  }\r\n\r\n\r\n}\r\n","<mat-dialog-content>\n    <div class=\"mat-elevation-z3\">\n\n        <div class=\"barraMenu\">\n          <button mat-button [matMenuTriggerFor]=\"menu\">Rotina Diária</button>\n            <mat-menu #menu=\"matMenu\">\n              <a mat-menu-item>Agendamento</a>\n              <a mat-menu-item>Consulta de Agenda</a>\n              <a mat-menu-item>Consulta Agendamentos</a>\n            \n            </mat-menu>\n\n            <button mat-button [matMenuTriggerFor]=\"menucadastro\">Cadastro</button>\n              <mat-menu #menucadastro=\"matMenu\">\n                <a (click)=\"addNovaAgenda()\" mat-menu-item>Agenda</a>\n                <a (click)=\"addUnidade()\" mat-menu-item>Unidade</a>              \n              </mat-menu>\n\n\n\n              <span class=\"botaoBusca\" (click)=\"buscarAgenda()\" (keypress)=\"buscarAgenda()\">\n                <i class=\"material-icons\">search</i>\n              </span>\n\n              <input class=\"textBusca\"  name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n          </div>\n          <table class=\"tabelaagenda\" mat-table [dataSource]=\"agenda\">\n            <!-- Id Column -->\n            \n            <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef>Id</th>\n              <td mat-cell id=\"idAgenda\" *matCellDef=\"let row\">{{row.id}}</td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"NomeAgenda\">\n              <th mat-header-cell *matHeaderCellDef>Nome Agenda</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nomeAgenda}}</td>\n            </ng-container>\n      \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"Funcionario\">\n              <th mat-header-cell *matHeaderCellDef>Profissional</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n            </ng-container>\n      \n            <!-- Name Price -->\n            <ng-container matColumnDef=\"NomeEmpresa\">\n              <th mat-header-cell *matHeaderCellDef>Empresa</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n            </ng-container>\n      \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"NomeUnidade\">\n              <th mat-header-cell *matHeaderCellDef>Unidade</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.nomeUnidade}}</td>\n            </ng-container>\n      \n            <ng-container matColumnDef=\"NomeSala\">\n                <th mat-header-cell *matHeaderCellDef>Sala</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.nomeSala}}</td>\n              </ng-container>\n    \n              <ng-container matColumnDef=\"GrupoAgenda\">\n                <th mat-header-cell *matHeaderCellDef>Grupo Agenda</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.nomeGrupoAgenda}}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"substituicao\">\n                <th mat-header-cell *matHeaderCellDef>Pode Substituir?</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.substituicao}}</td>\n              </ng-container>\n\n              \n              <ng-container matColumnDef=\"vigenciaInicio\">\n                <th mat-header-cell *matHeaderCellDef>Inicio Agenda</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.vigenciaInicio | date: 'dd/MM/yyyy hh:mm:ss'}} </td>\n              </ng-container>\n\n\n              <ng-container matColumnDef=\"vigenciaFim\">\n                <th mat-header-cell *matHeaderCellDef>Fim Agenda</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.vigenciaFim | date: 'dd/MM/yyyy hh:mm:ss'}}</td>\n              </ng-container>\n\n              \n              <ng-container matColumnDef=\"considerarFeriado\">\n                <th mat-header-cell *matHeaderCellDef>Feriado</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.considerarFeriado}}</td>\n              </ng-container>\n\n            <!-- status -->\n            <ng-container matColumnDef=\"bloqueado\">\n              <th mat-header-cell *matHeaderCellDef>Ativa</th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <div *ngIf=\"row.bloqueado == 'Sim'\" >\n                    <i class=\"material-icons\">\n                      lock\n                    </i>\n                  </div>\n                  <div *ngIf=\"row.bloqueado == 'Não'\" >\n                    <i class=\"material-icons\">  \n                      lock_open\n                    </i>\n                  </div>\n                </td>\n              </ng-container>\n      \n            \n            <!-- Coluna de Ações -->\n            <ng-container matColumnDef=\"action\">\n              <th mat-header-cell *matHeaderCellDef>Ações</th>\n              <td mat-cell *matCellDef=\"let row\">\n                  \n                  <a  (click)=\"AtualizarAgenda(row.id)\" class=\"edit\">\n                      <i class=\"material-icons\">\n                          edit\n                      </i>\n                  </a>\n                  <a (click)=\"ExcluirAgenda(row.id)\" class=\"delete\">\n                      <i class=\"material-icons\">\n                          delete\n                      </i>\n                  </a>\n                  \n              </td>\n            </ng-container>\n                \n        \n            <tr mat-header-row *matHeaderRowDef=\"Colunas\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: Colunas;\"></tr>\n          </table>\n\n      </div>\n\n      <div class=\"row\">\n        <router-outlet></router-outlet>\n      </div>\n</mat-dialog-content>\n  ","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { endWith, filter } from 'rxjs/operators';\nimport { Agenda } from 'src/app/models/Agenda/modelAgenda';\nimport { GrupoAgenda } from 'src/app/models/Agenda/modelGrupoAgenda';\nimport { Empresa } from 'src/app/models/empresa/ModelEmpresa';\nimport { Sala } from 'src/app/models/Sala/SalaModel';\nimport { Unidade } from 'src/app/models/Unidade/unidadeModel';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\nimport { Aplicacao } from 'src/app/Negocio/Aplicacao';\nimport { Endpoint } from 'src/app/Negocio/Endpoint';\nimport { ServiceAllService } from 'src/app/services/service-all.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-agenda-update',\n  templateUrl: './agenda-update.component.html',\n  styleUrls: ['./agenda-update.component.css']\n})\nexport class AgendaUpdateComponent implements OnInit {\n\n  constructor(\n            private router: Router,\n            private utilService : UtilService,\n            private agendaService : ServiceAllService<Agenda>,\n            private serviceUnidade : ServiceAllService<Unidade>,\n            private serviceSala : ServiceAllService<Sala>,\n            private serviceGrupoAGenda : ServiceAllService<GrupoAgenda>,\n            private serviceEmpresa : ServiceAllService<Empresa>,\n            private serviceUsuario : ServiceAllService<Usuario>,\n            public dialogRef: MatDialogRef <AgendaUpdateComponent>,\n\n\n            ) { }\n\n  comboProfissional  : Usuario[];\n  comboUnidade : Unidade[];\n  comboSala : Sala[];\n  comboTipoGrupoAgenda : GrupoAgenda[];\n\n\n  agenda : Agenda = {  \n    id: null,\n    DtCriacao: new Date, \n    nomeAgenda: null,\n    profissionalid: null,\n    Empresaid: null,\n    unidadeid: null,\n    salaid: null,\n    substituicao: false,\n    grupoAgendaid: null,\n    vigenciaInicio: null,\n    vigenciaFim: null,\n    considerarFeriado: false,\n    bloqueado: false\n  }\n\n  \n  \n  ngOnInit(): void {\n \n    this.buscarAgendaPorId();\n    \n  \n  }\n\n      buscarAgendaPorId(){\n             \n        this.agendaService.readById(this.dialogRef.id, Endpoint.Agenda).subscribe(agId => {\n              this.agenda = agId\n              this.carregaCombos();\n            });\n      }\n\n      carregaCombos(){\n        \n        this.serviceUsuario.read(Endpoint.Usuario).subscribe(pr => {\n          this.comboProfissional = pr.filter(x => x.empresaid == this.utilService.Sessao().IdEmpresa )\n        });\n\n        \n        this.serviceUnidade.read(Endpoint.Unidade).subscribe(un => {\n          this.comboUnidade = un.filter(x => x.empresaid == Number(this.utilService.Sessao().IdEmpresa));\n        });\n\n        this.serviceSala.read(Endpoint.Sala).subscribe(sl =>{\n          this.comboSala = sl.filter(x => x.empresaid == Number(this.utilService.Sessao().IdEmpresa));\n        });\n        \n        this.serviceGrupoAGenda.read(Endpoint.GrupoAgenda).subscribe(ga => {\n          this.comboTipoGrupoAgenda = ga.filter(x => x.empresaid == Number(this.utilService.Sessao().IdEmpresa));\n        });\n       \n      } \n\n      UpdateAgenda(){\n        this.agenda.id = this.dialogRef.id\n        this.agendaService.update(this.agenda, Endpoint.Agenda).subscribe(() => {\n          this.utilService.showMessage(\"Agenda Atualizada com Sucesso!\", false)\n          this.utilService.atualizaRota(Aplicacao.Agenda+\"?\", true)\n          this.fecharPopup();\n      \n        });\n\n      }\n\n      fecharPopup(): void {\n        this.dialogRef.close();\n      }\n\n}\n","<div class=\"container\">\n\n    <mat-card>\n        <mat-card-title>Atualizar Agenda</mat-card-title>\n            <form>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Nome Agenda\" \n                     [(ngModel)]=\"agenda.nomeAgenda\" name=\"nomeAgenda\">\n                </mat-form-field>\n\n                \n                <mat-form-field>\n                        <input matInput placeholder=\"Profissional\" >\n                        <p></p>\n                    <mat-select \n                           [(value)]=\"agenda.profissionalid\" placeholder=\"Unidade Atendimento\">\n                         <mat-option *ngFor=\"let ret of comboProfissional \" [value]=\"ret.id\">\n                               {{ret.nome}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Unidade Atendimento\">\n                    <p></p>\n                    <mat-select [(value)]=\"agenda.unidadeid\" placeholder=\"Unidade Atendimento\" >\n                        <mat-option *ngFor=\"let tipounidade of comboUnidade \" [value]=\"tipounidade.id\">\n                            {{tipounidade.nomeUnidade}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Sala Atendimento\">\n                    <p></p>\n                    <mat-select [(value)]=\"agenda.salaid\" placeholder=\"Sala Atendimento\" >\n                        <mat-option *ngFor=\"let tipoSala of comboSala \" [value]=\"tipoSala.id\">\n                            {{tipoSala.nomeSala}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Substituição\">\n                        <input name=\"substituicao\" [(ngModel)]=\"agenda.substituicao\" [checked]=\"agenda.substituicao\" type=\"checkbox\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Grupo Agenda\">\n                    <p></p>\n                    <mat-select [(value)]=\"agenda.grupoAgendaid\" placeholder=\"Grupo Agenda\" >\n                        <mat-option *ngFor=\"let tipoGrupo of comboTipoGrupoAgenda \" [value]=\"tipoGrupo.id\">\n                            {{tipoGrupo.nomeGrupoAgenda}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Vigência Início\"\n                     [(ngModel)]= \"agenda.vigenciaInicio\" name=\"vigenciaInicio\" type=\"datetime-local\" teste >\n                </mat-form-field>\n\n    \n                <mat-form-field>\n                    <input matInput placeholder=\"Vigência Fim\" \n                     [(ngModel)]=\"agenda.vigenciaFim\" name=\"vigenciaFim\" type=\"datetime-local\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <input matInput placeholder=\"Considera Feriado\">\n                        <input name=\"considerarFeriado\" [(ngModel)]=\"agenda.considerarFeriado\" [checked]=\"agenda.considerarFeriado\" type=\"checkbox\">\n                </mat-form-field>\n\n\n                <mat-form-field>\n                    <input matInput placeholder=\"bloqueado\">\n                        <input name=\"bloqueado\" [(ngModel)]=\"agenda.bloqueado\" [checked]=\"agenda.bloqueado\" type=\"checkbox\">\n                </mat-form-field>\n\n\n            </form>\n    \n            <button *ngIf=\"agenda.nomeAgenda && agenda.vigenciaInicio && agenda.vigenciaFim\"  mat-raised-button (click)=\"UpdateAgenda()\"  color=\"primary\" > \n                Salvar\n            </button>\n            \n            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                Cancelar\n            </button>\n    </mat-card>\n\n</div>","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-agenda',\n  templateUrl: './home-agenda.component.html',\n  styleUrls: ['./home-agenda.component.css']\n})\nexport class HomeAgendaComponent implements OnInit {\n\n  constructor(private route : Router) { }\n\n  ngOnInit(): void {\n    this.route.navigate(['Agenda'])\n  }\n}\n","<app-agenda-read></app-agenda-read>","export enum Aplicacao{\r\n  Agenda = 'Agenda',\r\n  Cartões = 'Cartões',\r\n  Vendas = 'Vendas',\r\n  Octoplex = 'Octoplex',\r\n  \r\n}\r\n\r\nexport const TipoAplicacao = new Map<string, string>([\r\n  ['Agenda', 'Agenda'],\r\n  ['Cartões', 'Cartões'],\r\n  ['FrenteCaixa', 'FrenteCaixa'],\r\n  ['Octoplex', 'Octoplex']\r\n  \r\n])","export enum Endpoint {\r\n    Empresa = '/Empresa',\r\n    GrupoUsuario = '/GrupoUsuario',\r\n    Produto = '/Produto',\r\n    Usuario = '/Usuario',\r\n    Agenda = '/Agenda',\r\n    Unidade = '/Unidade',\r\n    Sala = '/Sala',\r\n    GrupoAgenda = '/GrupoAgenda',\r\n    AgendaHorarios = '/AgendaHorarios',\r\n    Token = '/Token'\r\n\r\n}","import { HomeAgendaComponent } from './Aplicacoes/agenda/home-agenda/home-agenda.component';\nimport { AgendaReadComponent } from './Aplicacoes/agenda/agenda-read/agenda-read.component';\nimport { AgendaDeleteComponent } from './Aplicacoes/agenda/agenda-delete/agenda-delete.component';\nimport { AgendaUpdateComponent } from './Aplicacoes/agenda/agenda-update/agenda-update.component';\nimport { AgendaCreateComponent } from './Aplicacoes/agenda/agenda-create/agenda-create.component';\n\nimport { Aplicacao } from './Negocio/Aplicacao';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\n\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\n\n\n//Rotas de componentes Negócio\n\nconst routes: Routes = [\n  {path : \"\", component:HomeComponent },\n  {path: \"login\", component: LoginComponent },\n  //Rotas de Produtos\n  {path: \"products\", component: ProductCrudComponent },\n\n  //Rotas de usuarios\n  {path: 'usuarios', component : UsuarioCrudComponent },\n\n  //Rotas de chamados\n  {path: \"chamados\", component : ChamadoCrudComponent },\n\n  //Rotas de empresa\n  {path: \"empresa\", component : EmpresaComponent },\n\n  //Rotas das APlicações\n  //Agenda\n  {path: Aplicacao.Agenda , component : HomeAgendaComponent},\n  {path: Aplicacao.Agenda+\"?\" , component : AgendaReadComponent}\n      \n]\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { LoginService } from '../app/'\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\n\n\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './services/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\n\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n import {MatDialogModule} from '@angular/material/dialog';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\n\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { UsuarioReadComponent } from './components/usuario/usuario-read/usuario-read.component';\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\nimport { ChamadoReadComponent } from './components/chamados/chamado-read/chamado-read.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaReadComponent } from './components/empresa/empresa-read/empresa-read.component';\nimport { AgendaUpdateComponent } from './Aplicacoes/agenda/agenda-update/agenda-update.component';\nimport { AgendaDeleteComponent } from './Aplicacoes/agenda/agenda-delete/agenda-delete.component';\nimport { AgendaCreateComponent } from './Aplicacoes/agenda/agenda-create/agenda-create.component';\nimport { AgendaReadComponent } from './Aplicacoes/agenda/agenda-read/agenda-read.component';\nimport { HomeAgendaComponent } from './Aplicacoes/agenda/home-agenda/home-agenda.component';\nimport { AgendaCadastroUnidadeComponent } from './Aplicacoes/agenda/Unidade/agenda-cadastro-unidade/agenda-cadastro-unidade.component';\nimport { AgendaAlterarUnidadeComponent } from './Aplicacoes/agenda/Unidade/agenda-alterar-unidade/agenda-alterar-unidade.component';\nimport { AgendaExcluirUnidadeComponent } from './Aplicacoes/agenda/Unidade/agenda-excluir-unidade/agenda-excluir-unidade.component';\nimport { UnidadeSalaCadastroComponent } from './Aplicacoes/agenda/Unidade/Sala/unidade-sala-cadastro/unidade-sala-cadastro.component';\nimport { UnidadeSalaUpdateComponent } from './Aplicacoes/agenda/Unidade/Sala/unidade-sala-update/unidade-sala-update.component';\nimport { UnidadeSalaDeleteComponent } from './Aplicacoes/agenda/Unidade/Sala/unidade-sala-delete/unidade-sala-delete.component';\nimport { AgendaGrupoCadastroComponent } from './Aplicacoes/agenda/GrupoAgenda/agenda-grupo-cadastro/agenda-grupo-cadastro.component';\nimport { AgendaGrupoExcluirComponent } from './Aplicacoes/agenda/GrupoAgenda/agenda-grupo-excluir/agenda-grupo-excluir.component';\nimport { AgendaGrupoUpdateComponent } from './Aplicacoes/agenda/GrupoAgenda/agenda-grupo-update/agenda-grupo-update.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    UsuarioCrudComponent,\n    UsuarioComponent,\n    UsuarioReadComponent,\n    UsuarioCreateComponent,\n    UsuarioDeleteComponent,\n    UsuarioUpdateComponent,\n    ChamadoCrudComponent,\n    ChamadoCreateComponent,\n    ChamadoUpdateComponent,\n    ChamadoDeleteComponent,\n    ChamadoReadComponent,\n    EmpresaComponent,\n    EmpresaCreateComponent,\n    EmpresaUpdateComponent,\n    EmpresaDeleteComponent,\n    EmpresaReadComponent,\n    AgendaUpdateComponent,\n    AgendaDeleteComponent,\n    AgendaCreateComponent,\n    AgendaReadComponent,\n    HomeAgendaComponent,\n    AgendaCadastroUnidadeComponent,\n    AgendaAlterarUnidadeComponent,\n    AgendaExcluirUnidadeComponent,\n    UnidadeSalaCadastroComponent,\n    UnidadeSalaUpdateComponent,\n    UnidadeSalaDeleteComponent,\n    AgendaGrupoCadastroComponent,\n    AgendaGrupoExcluirComponent,\n    AgendaGrupoUpdateComponent,\n  \n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatDividerModule,\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-create',\n  templateUrl: './chamado-create.component.html',\n  styleUrls: ['./chamado-create.component.css']\n})\nexport class ChamadoCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-delete',\n  templateUrl: './chamado-delete.component.html',\n  styleUrls: ['./chamado-delete.component.css']\n})\nexport class ChamadoDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-read',\n  templateUrl: './chamado-read.component.html',\n  styleUrls: ['./chamado-read.component.css']\n})\nexport class ChamadoReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-update',\n  templateUrl: './chamado-update.component.html',\n  styleUrls: ['./chamado-update.component.css']\n})\nexport class ChamadoUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-update works!</p>\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from './../../../services/util.service';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { ContatoService } from './../../../services/contato.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { cnpj } from 'cpf-cnpj-validator';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-empresa-create',\n  templateUrl: './empresa-create.component.html',\n  styleUrls: ['./empresa-create.component.css']\n})\nexport class EmpresaCreateComponent implements OnInit {\n\n \nempresa : Empresa = {\n    dtCriacao : null,\n    cnpj: null,\n    razaoSocial: null,\n    nomeFantasia: null,\n    inscricaoEstadual: null,\n    inscricaoMunicipal: null,\n    cnes : null,\n    codPIS : null,\n    observacao : null,\n    codCnae : null,\n    empresaPai : null,\n    criadoPor : null,\n    bloqueado : null\n    \n}\n\n\n\n  constructor(private utilService : UtilService,\n              private router : Router,\n              private servicoEmpresa : ServiceAllService<Empresa>,\n              public dialofRef : MatDialogRef<EmpresaCreateComponent>,\n   \n\n\n              )\n             { }\n\n  ngOnInit(): void {\n   \n  }\n\n  cadastrarEmpresa(){\n    \n    let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n    let empPai = Number(this.utilService.Sessao().IdEmpresa);\n    this.empresa.criadoPor  = Number(this.utilService.Sessao().UsuarioId);\n    this.empresa.dtCriacao = new Date;\n    this.empresa.empresaPai = empPai;\n       \n    this.empresa.bloqueado = false;\n    \n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.utilService.showMessage(\"Você não possui permissão para cadastro de empresas\", false)\n\n    }else\n    {\n     if(cnpj.isValid(this.empresa.cnpj)){\n       this.servicoEmpresa.read(Endpoint.Empresa).subscribe(bemp => {\n          bemp = bemp;\n         let retornoEmp = bemp.filter(x => x.cnpj == this.empresa.cnpj)\n         let retornomaster = bemp.filter(x => x.id == empPai);\n\n          if (retornoEmp.length == 0 ){\n            \n            if(grpId == TipoUsuario.Administrador){\n\n                this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                  emp = emp;\n                        \n                  let empresaPai = emp.id;\n                         \n                              emp.empresaPai = empresaPai;\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                         \n                          this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                          this.utilService.atualizaRota(\"empresa\");\n                          this.empresa = null;\n                        })\n                }else if (grpId == TipoUsuario.Master && retornomaster.filter(x => x.empresaPai == empPai).length > 0)\n                {\n                  \n                  this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                    emp = emp;\n                          \n                    let empresaPai = emp.id;\n                          \n                              emp.bloqueado = true;\n                              emp.empresaPai = Number(localStorage.getItem(\"empId\"));\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                       \n                            this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                            this.utilService.atualizaRota(\"empresa\");\n                            this.empresa = null;\n                          })\n                }else{\n                  this.utilService.showMessage(\"Para criação de uma empresa precisa está logado com a Matriz.!\",false);\n                }\n          }\n          else\n           this.utilService.showMessage(\"Cnpj já cadastrado!\",false);\n        });  \n      }\n      else{\n        this.utilService.showMessage(\"Cnpj inválido\",false);\n      }\n    }\n  }\n\n  fecharPopup(){\n    this.dialofRef.close()\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Empresa\">\n        <section>\n\n        <div class=\"container\">\n\n            <mat-card>\n                <mat-card-title>Nova Empresa</mat-card-title>\n                    <form>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cnpj\" \n                             [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Nome\"\n                            [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Razão Social\"\n                            [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Estadual\"\n                            [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Municipal\"\n                            [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"CNES\"\n                            [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. PIS\"\n                            [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. CNAE\"\n                            [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Observação\"\n                            [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n                        </mat-form-field>\n            \n                    </form>\n            \n                    <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"cadastrarEmpresa()\" color=\"primary\" > \n                        Salvar\n                    </button>\n                    \n                    <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                        Cancelar\n                    </button>\n            </mat-card>\n\n        </div>\n\n        </section>\n</mat-tab>\n<mat-tab label=\"Contato\"> Contatos</mat-tab>\n<mat-tab label=\"Endereços\">Endereços </mat-tab>\n</mat-tab-group>","import { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { CanActivate, Router, ActivatedRoute } from '@angular/router';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-empresa-delete',\n  templateUrl: './empresa-delete.component.html',\n  styleUrls: ['./empresa-delete.component.css']\n})\nexport class EmpresaDeleteComponent implements OnInit {\n\n\n  empresa : Empresa\n  constructor(private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private mensagem : UtilService,\n              public dialogRef : MatDialogRef<EmpresaDeleteComponent>,\n              private utilservice : UtilService\n\n            ) { }\n\n  ngOnInit(): void {\n    this.BuscarEmpresa();\n  }\n\n\n  excluirEmpresa(){\n    \n    let existeUsuario = null;\n    \n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(usr => {\n        usr = usr;\n        existeUsuario = usr.filter(x => x.empresaid == this.empresa.id.toString())\n       \n        if (existeUsuario.length > 0)\n        {\n          this.mensagem.showMessage(\"Empresa não pode ser excluida porque possui Dependências de usuários.\", false)\n        }    \n        else\n        {\n            if (Number(this.utilservice.Sessao().GrupoUsuario) == TipoUsuario.Administrador){\n              this.serviceEmpresa.delete(this.empresa.id, Endpoint.Empresa).subscribe(()=>{\n                this.mensagem.showMessage(\"Empresa excluida com sucesso !\", false);\n               this.utilservice.atualizaRota(\"empresa\")\n              })\n            }\n              else{\n                this.mensagem.showMessage(\"Permissão de exclusão negada !\", false);\n                this.utilservice.atualizaRota(\"empresa\")\n              }\n        }\n    });\n  }\n\n  fecharPopup(){\n    this.dialogRef.close();\n  }\n\n   BuscarEmpresa(){\n    \n    \n    this.serviceEmpresa.readById(this.dialogRef.id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n\n    })\n\n   }\n\n\n}\n","<mat-card>\n    <mat-card-title>Excluir Empresa</mat-card-title>\n        <form>\n                       \n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\" disabled=\"true\">\n            </mat-form-field>\n           \n            <mat-form-field>\n                <input matInput placeholder=\"Nome Fantasia\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\" disabled=\"true\">\n            </mat-form-field>\n           \n           \n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\" disabled=\"true\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"excluirEmpresa()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\r\nimport { Endpoint } from './../../../Negocio/Endpoint';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceAllService } from './../../../services/service-all.service';\r\nimport { Endereco } from './../../../models/endereco/modelEndereco';\r\nimport { Contato } from './../../../models/contato/modelContato';\r\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { elementAt } from 'rxjs/operators';\r\nimport { TipoUsuarioSistema } from 'src/app/models/usuarios/enumUsuarios';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EmpresaCreateComponent } from '../empresa-create/empresa-create.component';\r\nimport { UtilService } from 'src/app/services/util.service';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { EmpresaUpdateComponent } from '../empresa-update/empresa-update.component';\r\nimport { EmpresaDeleteComponent } from '../empresa-delete/empresa-delete.component';\r\n\r\n@Component({\r\n  selector: 'app-empresa-read',\r\n  templateUrl: './empresa-read.component.html',\r\n  styleUrls: ['./empresa-read.component.css']\r\n})\r\nexport class EmpresaReadComponent implements OnInit {\r\n\r\n  \r\n  empresa: Empresa[];\r\n  empresas: Empresa[];\r\n  contato : Contato;\r\n  endereco : Endereco;\r\n  displayedColumns = ['id','cnpj', 'razaoSocial','nomeFantasia','inscricaoEstadual','inscricaoMunicipal','bloqueado','action']  \r\n\r\n  constructor(private router : Router,\r\n              private serviceEmpresa : ServiceAllService<Empresa>,\r\n              public dialog : MatDialog,\r\n              private _utilService : UtilService,\r\n              private overlay : Overlay\r\n             ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.buscarEmpresa();\r\n\r\n  }\r\n\r\n  buscarEmpresa(): void \r\n  {\r\n    let filtroEmpresa = (<HTMLSelectElement>document.getElementById('busca')).value;\r\n    let empId = localStorage.getItem(\"empId\");\r\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\r\n\r\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\r\n      emp = emp;\r\n\r\n      \r\n      this.empresa =  new Array();\r\n\r\n          if(grpId == TipoUsuario.Administrador)\r\n          {\r\n            emp.forEach(element => {\r\n            this.empresa.push(element)\r\n             });\r\n          }\r\n          else if(grpId == TipoUsuario.Master)\r\n          {\r\n            emp.forEach(master => {\r\n              if(master.empresaPai.toString()== empId) \r\n              this.empresa.push(master)\r\n            });\r\n\r\n          }\r\n\r\n      let empresaFIltrada = new Array();\r\n      if (filtroEmpresa){\r\n           \r\n        for (let index = 0; index < this.empresa.length; index++) {\r\n          const element = this.empresa[index];\r\n            if (element.nomeFantasia.toLowerCase().includes(filtroEmpresa.toLowerCase()))\r\n            empresaFIltrada.push(element);\r\n        }\r\n        this.empresa = new Array();\r\n        this.empresa = empresaFIltrada;    \r\n      }else{\r\n        this.empresa = this.empresa;\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n\r\n  addEmpresa(){\r\n\r\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\r\n        const dialogRef = this.dialog.open(EmpresaCreateComponent, {\r\n          width : '700px',\r\n          height : '730px',\r\n          scrollStrategy\r\n\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n    }else{\r\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  editarEmpresa(id : string){\r\n\r\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\r\n        const dialogRef = this.dialog.open(EmpresaUpdateComponent, {\r\n          width : '700px',\r\n          height : '750px',\r\n          scrollStrategy,\r\n          id\r\n\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n    }else{\r\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  excluirEmpresa(id : string){\r\n\r\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\r\n    {\r\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\r\n        const dialogRef = this.dialog.open(EmpresaDeleteComponent, {\r\n          width : '500',\r\n          height : '200px',\r\n          scrollStrategy,\r\n          id\r\n\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          console.log(`Dialog result: ${result}`);\r\n        });\r\n    }else{\r\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n  \r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n","<div>\n  <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n   \n   <span (click)=\"buscarEmpresa()\">\n     <i class=\"material-icons\">search</i>\n   </span>\n</div>\n\n<div class=\"footer\">\n  <span (click)=\"addEmpresa()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"empresa\">\n      <!-- Id Column -->\n      \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"cnpj\">\n        <th mat-header-cell *matHeaderCellDef>Cnpj</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.cnpj}}</td>\n      </ng-container>\n      \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"razaoSocial\">\n        <th mat-header-cell *matHeaderCellDef>Razão Social</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.razaoSocial}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"nomeFantasia\">\n        <th mat-header-cell *matHeaderCellDef>Nome Fantasia</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n      </ng-container>\n\n      <!-- Name Price -->\n      <ng-container matColumnDef=\"inscricaoEstadual\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Estadual</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoEstadual}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"inscricaoMunicipal\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Municipal</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoMunicipal}}</td>\n      </ng-container>\n\n      <!-- status -->\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n          </td>\n        </ng-container>\n\n       \n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a (click)=\"editarEmpresa(row.id)\"  class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a (click)=\"excluirEmpresa(row.id)\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n\n\n\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { cnpj } from 'cpf-cnpj-validator';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-empresa-update',\n  templateUrl: './empresa-update.component.html',\n  styleUrls: ['./empresa-update.component.css']\n})\nexport class EmpresaUpdateComponent implements OnInit {\n\n  empresa : Empresa;\n  usuariologado : boolean;\n  constructor(\n              private empresaService : ServiceAllService<Empresa>,\n              private utilservice : UtilService,\n              public dialog : MatDialogRef<EmpresaUpdateComponent>\n              ) { }\n\n  ngOnInit(): void {\n \n  if (Number(this.utilservice.Sessao().GrupoUsuario) == TipoUsuario.Administrador)\n     this.usuariologado = true;\n  \n  this.ObterEmpresa();\n  \n  }\n\n\n  atualizarEmpresa() : void {\n    \n    let grpId = Number(this.utilservice.Sessao().GrupoUsuario);\n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.utilservice.showMessage(\"Você não possui permissão para editar o cadastro de empresas\", false)\n\n    }else\n    {\n     if (cnpj.isValid(this.empresa.cnpj)){\n               try {\n                        this.empresaService.update(this.empresa, Endpoint.Empresa).subscribe(()=>{\n                        this.utilservice.showMessage(\"Empresa atualizada com sucesso\", false)\n                        this.utilservice.atualizaRota(\"empresa\");\n                      });\n\n                    } catch (error) {\n                      this.utilservice.showMessage(\"Erro na atualização dos dados \" + error, true);\n                    }\n\n      }else{\n        this.utilservice.showMessage(\"Cnpj Inválido \" , false);\n      }\n      }\n  }\n\n  fecharPopup(){\n    this.dialog.close();\n  }\n\n  \n  ObterEmpresa() {\n    this.empresaService.readById(this.dialog.id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })    \n       \n  }\n  \n\n}\n\n\n","<mat-card>\n    <mat-card-title>Atualizar dados da Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" disabled=\"true\" name=\"cnpj\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Razão Social\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Estadual\"\n                [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Municipal\"\n                [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"CNES\"\n                [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. PIS\"\n                [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. CNAE\"\n                [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n            </mat-form-field>\n            \n            <div *ngIf=\"usuariologado\">\n                <mat-form-field >\n                            <input matInput placeholder=\"Bloqueado\">\n                                        <input name=\"status\" [(ngModel)]=\"empresa.bloqueado\" [checked]=\"empresa.bloqueado\" type=\"checkbox\">\n                </mat-form-field>\n            </div>\n          \n            <mat-form-field>\n    \n                <input matInput placeholder=\"Observação\"\n                [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"atualizarEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Endpoint } from './../../Negocio/Endpoint';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Acesso } from '../../models/acessoModel';\nimport { UtilService } from './../../services/util.service';\nimport { LoginService } from './../../services/login.service';\n\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\nacesso : Acesso = new Acesso();\n\n\n\nconstructor(private router :Router,\n             private authservice : LoginService,\n             ) { }\n\n  ngOnInit(): void {\n  \n  }\n  \n  logarSistema(keyEvent : any){\n\n    if (keyEvent.which === 13 || keyEvent.which == 1)\n      this.authservice.logarSistema(this.acesso);\n\n  }\n  \n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field > \n                <input matInput placeholder=\"Chave Empresa\" \n                 [(ngModel)]=\"acesso.nome\" name=\"name\" placeholder=\"Empresa\">\n                 \n            </mat-form-field>\n\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"acesso.login\" name=\"name\" placeholder=\"login\">\n                 \n            </mat-form-field>\n           \n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"acesso.senha\" type=\"password\" name=\"senha\" (keypress)=\"logarSistema($event)\">\n                \n            </mat-form-field>\n        </form>\n        \n            <div *ngIf=\"acesso.login && acesso.senha && acesso.nome\">\n                <button mat-raised-button (click)=\"logarSistema($event)\"  color=\"primary\"> \n                    Login\n                </button> \n            </div>\n          \n   \n       \n        \n\n</mat-card>        \n","import { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Aplicacao, TipoAplicacao } from './../../../Negocio/Aplicacao';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\nimport { stringify } from 'querystring';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  comboProduto =  [];\n  empresa : Empresa[];\n  comboEmpresa : Empresa;\n\n    product : Product = {  \n    dtCriacao : null,\n    criadoPor : null,\n    nome : null,\n    valor : 0,\n    empresaid : null,\n    bloqueado : false,\n    }\n\n  constructor(\n              private utilService : UtilService,\n              private router : Router,\n              private ProdutoEmpresa : ServiceAllService<Product>,\n              private ServiceEmpresa : ServiceAllService<Empresa>,\n              public matDialogref : MatDialogRef<ProductCreateComponent>\n               ) { }\n\n  ngOnInit(): void {\n    this.buscarProduto();\n    this.buscarEmpresa()\n  }\n\n  associarProdutoEmpresa() : void {\n\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.product.dtCriacao = new Date;\n    this.product.bloqueado = false;\n    \n    this.ProdutoEmpresa.read(Endpoint.Produto).subscribe(p => {\n      p = p;\n\n      let ativo = p.filter(x => x.nome == this.product.nome && x.empresaid == this.product.empresaid )\n      \n      if (ativo.length == 0)\n      {\n        this.ProdutoEmpresa.create(this.product, Endpoint.Produto).subscribe(() => {\n          this.utilService.showMessage('o Produto Criado!');\n          this.utilService.atualizaRota(\"products\")\n          })\n      \n      }else{\n        this.utilService.showMessage('Esse Produto Já foi cadastrado para essa empresa!');\n      }\n\n    })\n    \n  }\n\n  fecharPopup() : void {\n    this.matDialogref.close();\n  }\n\n  buscarProduto(){\n    \n      TipoAplicacao.forEach(element => {\n        this.comboProduto.push(element)\n      });\n     return this.comboProduto;\n  }\n  buscarEmpresa(){\n    this.ServiceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })\n  }\n  \n}\n","<mat-card>\n    <mat-card-title>Habilitar - Produto Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Produto\">\n                <p></p>\n                <mat-select [(value)]=\"product.nome\" placeholder=\"productId\" >\n                    <mat-option *ngFor=\"let produto of comboProduto \" [value]=\"produto\">\n                         {{produto}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"product.empresaid\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let comboEmpresa of empresa\" [value]=\"comboEmpresa.id\">\n                            {{comboEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"associarProdutoEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product = {\n    id: null,\n    dtCriacao : null,\n    criadoPor : null,\n    nome: null,\n    valor : 0,\n    empresaid : null,\n    bloqueado : null,\n  }\n\n  constructor(private productService : ProductService,\n              private utilService : UtilService,\n              private deleteProduto : ServiceAllService<Product>,\n              public dialogRef : MatDialogRef<ProductDeleteComponent> \n              ) { }\n\n  ngOnInit(): void {\n    this.buscarProduto();\n  }\n  \n  deleteProduct():void{\n      \n    this.deleteProduto.delete(Number(this.dialogRef.id), Endpoint.Produto).subscribe(() => {\n        this.utilService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.utilService.atualizaRota(\"products\", true);\n      })\n    \n  }\n\n  buscarProduto(){\n    this.productService.readById(this.dialogRef.id).subscribe(product => {\n      this.product = product;\n    });\n  }\n\n  fecharPopup():void{\n    this.dialogRef.close();\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                [(ngModel)]=\"product.nome\" name=\"nome\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { stringify } from 'querystring';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router } from '@angular/router';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../models/produtos/product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ProductCreateComponent } from '../product-create/product-create.component';\nimport { ProductUpdateComponent } from '../product-update/product-update.component';\nimport { ProductDeleteComponent } from '../product-delete/product-delete.component';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\nvlrProduto : string = null;\n\ndisplayedColumns = ['id','nome', 'valor','empresaid','bloqueado','action']  \n\n  constructor(private router : Router,\n              private serviceProduto : ServiceAllService<Product>,\n              private serviceEmpresa : ServiceAllService<Empresa>,\n              private _utilService : UtilService,\n              public dialog : MatDialog, \n              private overlay : Overlay\n             ) { }\n\n  ngOnInit(): void {\n      this.buscarProduto()\n  }\n\n  addProduto(){\n\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(ProductCreateComponent, {\n          width : '500',\n          height : '400px',\n          scrollStrategy,\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de empresas\",true);\n    }\n\n\n  }\n\n  editarProduto(id : string){\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(ProductUpdateComponent, {\n          width : '400px',\n          height : '360px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para associar produtos a uma empresa\",true);\n    }\n  }\n\n\n  excluirProdutoEmpresa(id : string){\n\n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(ProductDeleteComponent, {\n          width : '400px',\n          height : '240px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para associar produtos a uma empresa\",true);\n    }\n\n\n  }\n\n\n  buscarProduto() : void {\n\n    this.serviceProduto.read(Endpoint.Produto).subscribe(product => {\n        product = this.vlrProduto == null ?  product : product.filter(x => x.nome.toLowerCase().includes(this.vlrProduto.toLowerCase()))\n\n        this.products = new Array();\n        product.forEach(element => {\n          \n            this.serviceEmpresa.readById(element.empresaid.toString(), Endpoint.Empresa).subscribe(emp => {\n              emp = emp\n              \n              if (emp)\n                element.empresaid = emp.razaoSocial;\n                \n            })\n            \n            this.products.push(element);\n   \n        });\n    })\n  }\n\n  selecionarProduto(KeyEvent : any){\n\n    if (KeyEvent.which == 13 || KeyEvent.which == 1){\n      this.vlrProduto =  (<HTMLInputElement>document.getElementById('txtbusca')).value;\n    \n      this.buscarProduto();\n    \n    }\n  }\n  \n}\n","<div class=\"mat-elevation-z4\">\n\n  <div>\n    <span (click)=\"addProduto()\">\n      <i class=\"material-icons\">person_add</i>\n    </span>\n  \n    <span class=\"botaoBusca\" (click)=\"selecionarProduto($event)\" (keypress)=\"selecionarProduto($event)\">\n      <i class=\"material-icons\">search</i>\n    </span>\n    \n    <input class=\"textBusca\"  name=\"busca\" id=\"txtbusca\" type=\"text\" (keypress)=\"selecionarProduto($event)\"  value=\"\">\n  \n  </div>\n\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n       <!-- Name Price -->\n       <ng-container matColumnDef=\"valor\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.valor | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"empresaid\">\n        <th mat-header-cell *matHeaderCellDef>Empresa</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.empresaid}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Status</th>\n        <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n        </td>\n      </ng-container>\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a (click)=\"editarProduto(row.id)\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a (click)=\"excluirProdutoEmpresa(row.id)\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n\n","import { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\nproduct: Product = new Product()\n  \n\n  constructor(\n              private utilService : UtilService,\n              private ProdutoService : ServiceAllService<Product>,\n              public matdialogRef : MatDialogRef<ProductUpdateComponent>,\n              private route : Router\n              ) { }\n\n\n  ngOnInit(): void {\n    \n    this.buscarProduto();\n   \n  }\n\n  updateProduct(): void {\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n      this.ProdutoService.update(this.product, Endpoint.Produto).subscribe(() => {\n      this.utilService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.utilService.atualizaRota(\"products\", true);\n      this.fecharPopup();\n    })\n\n  }\n\n  fecharPopup(): void {\n    \n    this.matdialogRef.close();\n   \n  }\n  buscarProduto() : void {\n      this.ProdutoService.readById(this.matdialogRef.id, Endpoint.Produto).subscribe(product => {\n          this.product = product;\n      })\n  }  \n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.nome\" name=\"nome\" disabled=\"true\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"product.bloqueado\" [checked]=\"product.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>\n\n","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { UtilService } from 'src/app/services/util.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\nopened = false;\r\nlock = false;  \r\n  constructor(private auth: LoginService,\r\n             private servico : UtilService) { }\r\n\r\n  ngOnInit(): void {\r\n  this.validarAcesso();\r\n  }\r\n\r\n  sairSistema(){\r\n    \r\n    this.auth.sairSistema();\r\n    \r\n  }\r\nvalidarAcesso(){\r\n  this.lock = this.servico.Sessao().GrupoUsuario == TipoUsuario.Administrador ? true : false;\r\n}\r\n \r\n\r\n}\r\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" \n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" [(opened)]=\"opened\">\n            <mat-nav-list class=\"nav-list\">\n            \n                <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <!--Menus de cadastro-->    \n            <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menuColor\" >\n                <i class=\"material-icons\">storefront</i>\n                \n                <mat-menu #menu=\"matMenu\">\n                        <a mat-list-item routerLink=\"empresa\" >\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Empresa\n                        </a>\n                        <a *ngIf=\"lock\" mat-list-item routerLink=\"products\" >\n                            <i class=\"material-icons\">\n                                storefront\n                            </i>\n                            Produto - Empresa\n                        </a>\n                        <a mat-list-item routerLink=\"chamados\">\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Solicitações\n                        </a>\n                        <a mat-list-item routerLink=\"usuarios\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Usuários\n                        </a>\n                </mat-menu>\n            </button>\n\n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <div *ngIf=\"!opened\">\n            <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                navigate_next\n            </i>\n        </div>\n            \n        <div *ngIf=\"opened\">\n                <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                    navigate_before\n                </i>\n        </div>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { stringify } from 'querystring';\nimport { UsuarioReadComponent } from './../usuario-read/usuario-read.component';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-usuario-create',\n  templateUrl: './usuario-create.component.html',\n  styleUrls: ['./usuario-create.component.css']\n})\nexport class UsuarioCreateComponent implements OnInit {\n\ntipoLogin : boolean = false;\nempresa : Empresa[];\n\ndadosEmpresa : Empresa;\nusuario : Usuario = new Usuario();\n\ngrupousuario : GrupoUsuario[];\n\ncriargrupousuario : GrupoUsuario = new GrupoUsuario()\n\ncomboTipousuario = [];\n\nconstructor(  private serviceUsuario : ServiceAllService<Usuario>,\n              private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceGrupoUsuario : ServiceAllService<GrupoUsuario>,\n              private utilService : UtilService,\n              private serviceLogin : LoginService,\n              public dialogRef: MatDialogRef <UsuarioCreateComponent>, \n              \n              private router : Router) { }\n\n  ngOnInit(): void {\n      let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n      \n      if (grpId == TipoUsuario.Administrador)\n         this.tipoLogin=true;\n\n      this.alimentarCombo();\n      this.buscarEmpresa();\n  }\n  \n  createUsuario() : void {\n    \n    this.usuario.criadoPor  = Number(this.utilService.Sessao().UsuarioId);\n    this.usuario.dtCriacao = new Date;\n   \n    this.usuario.grupoUsuarioid = this.usuario.grupoUsuarioid.toString().trim() == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                : this.usuario.grupoUsuarioid.toString().trim() == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                : this.usuario.grupoUsuarioid.toString().trim() == \"Master\" ? TipoUsuario.Master.toString()\n                                : this.usuario.grupoUsuarioid.toString() == \"Usuario\" ? TipoUsuario.Usuario.toString() : null;\n    \n    \n\n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(user => {\n      user = user;\n\n      let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaid == this.usuario.empresaid);\n           \n            if (ativo.length > 0)\n            {\n              this.utilService.showMessage('Esse Usuário já existe para essa Empresa');\n              this.usuario.login =  null; \n              user =  new Array();\n            }else{\n           \n              this.serviceEmpresa.readById(this.usuario.empresaid, Endpoint.Empresa).subscribe(emp => {\n                emp = emp;\n                if (!emp.bloqueado){\n                  this.serviceUsuario.create(this.usuario, Endpoint.Usuario).subscribe(() => {\n                    this.utilService.showMessage('Usuário Criado!');\n                  });\n                }\n                else\n                {\n                  this.utilService.showMessage(`Não pode ser criado Usuário para empresa ${emp.razaoSocial} porque essa empresa está bloqueada.`, false);\n                }\n              });\n              \n              user =  new Array();\n            }\n\n    })\n  }\n\n  fecharPopup(): void{\n    this.dialogRef.close();\n  }\n\n  buscarEmpresa() {\n   \n    let empId = this.utilService.Sessao().IdEmpresa\n    let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n        emp = emp; \n\n        this.empresa =  new Array()\n\n          emp.forEach(empresasCarregadas => {\n        \n            if(grpId == TipoUsuario.Administrador)\n              this.empresa.push(empresasCarregadas)\n            else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.empresaPai.toString())\n                this.empresa.push(empresasCarregadas)\n            });\n    })\n  }\n\n  alimentarCombo() : void  {\n\n    let grpId = Number(this.utilService.Sessao().GrupoUsuario);\n\n    for (var tipo in TipoUsuario) {\n      if (TipoUsuario.hasOwnProperty(tipo) &&\n        (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n\n          this.comboTipousuario.push(tipo)\n          \n      }\n      else if (TipoUsuario.hasOwnProperty(tipo) &&\n      (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n\n        if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n            this.comboTipousuario.push(tipo);\n        }\n    }\n  }\n\n  createGrupoUsuario(){\n    this.criargrupousuario.criadoPor  = Number(this.utilService.Sessao().UsuarioId);\n    this.criargrupousuario.dtCriacao = new Date;\n    this.criargrupousuario.empresaId = Number(this.utilService.Sessao().IdEmpresa);\n\n      this.serviceGrupoUsuario.create(this.criargrupousuario, Endpoint.GrupoUsuario).subscribe(() => {\n        this.utilService.showMessage('Grupo de Usuário Criado!');\n      })\n  }\n}\n","<mat-card>\n    <h1>Cadastro de Usuário</h1>\n    <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Crachá\"\n                [(ngModel)]=\"usuario.cracha\" name=\"cracha\">\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"tipoLogin\">\n                <input matInput placeholder=\"Usuario de Sistema\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"usuario.bolSistema\" [checked]=\"usuario.bolSistema\" type=\"checkbox\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Reseta Senha\">\n                    <input name=\"usuariresetasenha\" [(ngModel)]=\"usuario.bolResetaSenha\" [checked]=\"usuario.bolResetaSenha\" type=\"checkbox\">\n            </mat-form-field>\n\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioid\" placeholder=\"tipousuario\" >\n                    <mat-option *ngFor=\"let tipo of comboTipousuario \" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaid\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                    {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Profissional\">\n                    <input name=\"usuarioProfissional\" [(ngModel)]=\"usuario.profissional\" [checked]=\"usuario.profissional\" type=\"checkbox\">\n            </mat-form-field>\n\n    </form>\n            <button *ngIf=\"usuario.nome && usuario.login && usuario.senha && usuario.grupoUsuarioid && usuario.empresaid\" mat-raised-button (click)=\"createUsuario()\" color=\"primary\" > \n                Salvar\n            </button>\n  \n            <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n                Voltar\n            </button>\n  \n \n</mat-card>","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-usuario-delete',\n  templateUrl: './usuario-delete.component.html',\n  styleUrls: ['./usuario-delete.component.css']\n})\nexport class UsuarioDeleteComponent implements OnInit {\nempresa : Empresa\nusuario : Usuario;\n\n  constructor(private usuarioService : ServiceAllService<Usuario>,\n              private empresaService : ServiceAllService<Empresa>,\n              private utilService : UtilService,\n              private route : ActivatedRoute,\n              public dialogRef : MatDialogRef<UsuarioDeleteComponent>\n             ) { }\n\n  ngOnInit(): void {\n    this.carregaUsuario()\n  }\n\ncarregaUsuario(){\n\n  \n  this.usuarioService.readById(this.dialogRef.id, Endpoint.Usuario).subscribe(usuario => {\n    this.usuario = usuario;\n    \n    this.buscarEmpresa().subscribe(empresa =>{\n      this.empresa = empresa;\n      this.usuario.empresaid = this.empresa.nomeFantasia;\n     \n    });\n  })\n\n}\n\n  deleteUsuario(): void{\n      this.usuarioService.delete(this.usuario.id , Endpoint.Usuario).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Excluído com Sucesso!\")\n      this.fecharPopup();\n      this.utilService.atualizaRota(\"usuario\", true);\n\n\n    })\n  }\n  fecharPopup():void{\n    this.dialogRef.close();\n  }\n\n  buscarEmpresa(){\n    return this.empresaService.readById(this.usuario.empresaid, Endpoint.Empresa);\n  }\n}\n","<mat-card>\n    <mat-card-title>Excluir Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\" disabled = \"true\" > \n\n            </mat-form-field>\n            \n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\" disabled=\"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"usuario.empresaid\" name=\"empresaid\" disabled=\"true\" >\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteUsuario()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","\n<div>\n   <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n    \n    <span (click)=\"getUser()\">\n      <i class=\"material-icons\">search</i>\n    </span>\n</div>\n<div>\n  <span (click)=\"addUsuario()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"usuario\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Nome -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n\n        <!-- Login -->\n        <ng-container matColumnDef=\"login\">\n            <th mat-header-cell *matHeaderCellDef>Login</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.login}}</td>\n        </ng-container> \n\n\n        <!-- Empresa -->\n        <ng-container matColumnDef=\"empresaid\">\n          <th mat-header-cell *matHeaderCellDef>Empresa</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.empresaid}}</td>\n      </ng-container> \n       \n      <ng-container matColumnDef=\"grupoUsuarioid\">\n        <th mat-header-cell *matHeaderCellDef>Tipo de Usuário</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.grupoUsuarioid}}</td>\n    </ng-container> \n\n\n <!-- status -->\n <ng-container matColumnDef=\"bloqueado\">\n  <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n    <td mat-cell *matCellDef=\"let row\">\n      <div *ngIf=\"row.bloqueado\" >\n        <i class=\"material-icons\">\n          lock\n        </i>\n      </div>\n      <div *ngIf=\"!row.bloqueado\" >\n        <i class=\"material-icons\">  \n          lock_open\n        </i>\n      </div>\n    </td>\n  </ng-container>\n\n\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n      \n         \n          <a (click)=\"editarUsuario(row.id )\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            \n            <a *ngIf=\"userAutenticado\" (click)=\"deletarUsuario(row.id)\"  class=\"delete\">\n              \n                <i class=\"material-icons\">\n                    delete \n                           \n                </i>\n              \n            </a>\n           \n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\">teste</tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n      \n\n    </table>\n\n</div>\n","import { TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { map, catchError, take, tap, elementAt } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { __await } from 'tslib';\nimport { FooterComponent } from '../../template/footer/footer.component';\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { UsuarioCreateComponent } from '../usuario-create/usuario-create.component';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { UsuarioUpdateComponent } from '../usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from '../usuario-delete/usuario-delete.component';\n\n\n@Component({\n  selector: 'app-usuario-read',\n  templateUrl: './usuario-read.component.html',\n  styleUrls: ['./usuario-read.component.css']\n})\n\n\nexport class UsuarioReadComponent implements OnInit {\n\n  usuario : Usuario[];\n  userAutenticado : boolean = false; \n  \n  displayedColumns = ['id','nome','login','empresaid','grupoUsuarioid','bloqueado','action']  \n \n  constructor(\n              public dialog : MatDialog,\n              public overlay : Overlay,\n              private serviceEmpresa: ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private _utilService : UtilService, \n              private router : Router,\n\n             ) \n             { }\n\n\n  ngOnInit(): void {\n     this.getUser();\n  }\n  \n\n\n  addUsuario(): void{\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(UsuarioCreateComponent, {\n          width : '700px',\n          height : '820px',\n          scrollStrategy\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de usuários\",true);\n    }\n  }\n\n\n  editarUsuario(id : string): void{\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(UsuarioUpdateComponent, {\n          width : '700px',\n          height : '670px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de usuários\",true);\n    }\n  }\n\n\n  deletarUsuario(id : string): void{\n    \n    if(this._utilService.Sessao().GrupoUsuario == TipoUsuario.Master || this._utilService.Sessao().GrupoUsuario == TipoUsuario.Administrador)\n    {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const dialogRef = this.dialog.open(UsuarioDeleteComponent, {\n          width : '500px',\n          height : '260px',\n          scrollStrategy,\n          id\n\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log(`Dialog result: ${result}`);\n        });\n    }else{\n      this._utilService.showMessage(\"Você não possui permissão para criação de usuários\",true);\n    }\n  }\n\n\n  async getUser() {\n      \n      let filtroUsuario = (<HTMLSelectElement>document.getElementById('busca')).value;\n\n      let empId = this._utilService.Sessao().IdEmpresa;\n      let grpId = Number(this._utilService.Sessao().GrupoUsuario);\n      let logado =  Number(this._utilService.Sessao().UsuarioId);\n      this.userAutenticado = grpId == TipoUsuario.Usuario ? false : true;\n  \n      this.serviceUsuario.read(Endpoint.Usuario).subscribe(u =>{\n        u = u;\n        let responseUsuarios = u;\n\n        let usuarioFIltrados = new Array();\n         \n        if (filtroUsuario){\n           \n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const element = responseUsuarios[index];\n              if (element.nome.toLowerCase().includes(filtroUsuario.toLowerCase()))\n                usuarioFIltrados.push(element);\n          }\n          responseUsuarios = new Array();\n          responseUsuarios = usuarioFIltrados;    \n        }\n\n        this.serviceEmpresa.read(Endpoint.Empresa).subscribe(e => {\n          e = e;     \n          let responseEmpresa = e;\n\n          this.usuario = new Array();\n          let empresaID = null;\n          let idEmpresa = null;\n          let IdEmpresaPai = null;\n\n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const usr = responseUsuarios[index];\n            \n                  for (let index = 0; index <  responseEmpresa.length; index++) {\n                    const emp =  responseEmpresa[index];\n                    \n                    if(usr.empresaid == emp.id.toString().trim())\n                    {\n                      empresaID = emp.id;\n                      usr.empresaid = emp.razaoSocial;\n                      usr.grupoUsuarioid = usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpAdm\") ? \"Administrador\"\n                                         : usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpsis\") ? \"Sistema\" \n                                         : usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpUs\") ? \"Usuario\" \n                                         : usr.grupoUsuarioid == localStorage.getItem(\"grpUsGrpMs\") ? \"Master\" \n                                         : usr.grupoUsuarioid;\n\n                      idEmpresa = emp.id;\n                      IdEmpresaPai = emp.empresaPai;\n                      \n                        if(grpId == TipoUsuario.Administrador)\n                        {\n                          this.usuario.push(usr);\n                            break;  \n                          }\n                          else if(grpId == TipoUsuario.Master)\n                          { \n                            if(idEmpresa == empId || IdEmpresaPai == empId && usr.grupoUsuarioid != \"Administrador\")\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                          }\n                          else if(grpId == TipoUsuario.Usuario)\n                          { \n                            \n                            if(idEmpresa == empId && usr.id == logado)\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                            \n                          }\n\n                        }\n                  }\n          }\n      })\n  })\n   \n  \n }\n  \n\n}\n\n\n\n","import { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UsuarioReadComponent } from '../usuario-read/usuario-read.component';\n\n\n\n@Component({\n  selector: 'app-usuario-update',\n  templateUrl: './usuario-update.component.html',\n  styleUrls: ['./usuario-update.component.css']\n})\nexport class UsuarioUpdateComponent implements OnInit {\n\n  empresa : Empresa[];\n  dadosEmpresa : Empresa;\n  usuario : Usuario ;\n  userAutenticado : boolean = false; \n  \n  comboTipousuario = [];\n  UsuarioReadComponent: any;\n\n\n  constructor(private usarioService : ServiceAllService<Usuario>,\n             private empresaService : ServiceAllService<Empresa>,\n             private utilService: UtilService,\n             private router : Router,\n             public dialogRef : MatDialogRef<UsuarioUpdateComponent>,\n             ) { }\n\n  ngOnInit(): void {\n    this.buscarUsuario();\n    this.buscarEmpresa();\n\n  }\n\n  updateUsuario() : void {\n  \n        let grpId = Number(localStorage.getItem(\"grpUs\"));\n        this.usuario.grupoUsuarioid = this.usuario.grupoUsuarioid == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                        :this.usuario.grupoUsuarioid == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                        : this.usuario.grupoUsuarioid == \"Usuario\" ? TipoUsuario.Usuario.toString()\n                                        : this.usuario.grupoUsuarioid == \"Master\" ? TipoUsuario.Master.toString()\n                                        : null \n          \n            this.usarioService.read(Endpoint.Usuario).subscribe(user => {\n              user = user;\n                                    \n              let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaid == this.usuario.empresaid && x.id == this.usuario.id);\n          \n                if (ativo.length > 0 )\n                {\n                    this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                      this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                      this.fecharPopup();\n                      this.utilService.atualizaRota(\"usuario\");\n                    })\n                    user =  new Array();\n                  }else if(grpId == TipoUsuario.Administrador){\n                      \n                    this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                        this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                        this.fecharPopup();\n                        this.utilService.atualizaRota(\"usuario\", true);\n                        \n                      })\n                      user =  new Array();\n                  }else{\n\n                    this.utilService.showMessage('A empresa do Usuário não pode ser Alterada', false);\n                    this.usuario.login =  null; \n                    user =  new Array();\n                }\n            })\n\n  }\n\n  buscarEmpresa() {\n    \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.empresaService.read(Endpoint.Empresa).subscribe(emp => {\n      emp = emp;\n\n      this.empresa =  new Array()\n\n       grpId==TipoUsuario.Administrador ? this.empresa = emp : \n                      grpId == TipoUsuario.Master && emp.filter(x => x.id == Number(empId))\n                      || grpId == TipoUsuario.Usuario && emp.filter(x => x.id == Number(empId))\n                      || emp.filter(x => x.empresaPai == Number(empId));\n                   \n    \n      \n    /*  emp.forEach(empresasCarregadas => {\n        \n        if(grpId == TipoUsuario.Administrador)\n          this.empresa.push(empresasCarregadas)\n        else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.id.toString() || grpId == TipoUsuario.Usuario && empId == empresasCarregadas.id.toString() || empId == empresasCarregadas.empresaPai.toString())\n            this.empresa.push(empresasCarregadas)\n        });\n      */  \n\n    });\n  }\n\n  buscarUsuario(){\n\n      this.usarioService.readById(this.dialogRef.id, Endpoint.Usuario).subscribe(usuario => {\n      this.usuario = usuario;\n\n      let tipousuario = usuario.grupoUsuarioid;\n      this.usuario.grupoUsuarioid = this.usuario.grupoUsuarioid == TipoUsuario.Administrador.toString() ? \"Administrador\"\n                                   :this.usuario.grupoUsuarioid == TipoUsuario.Sistema.toString()  ? \"Sistema\"\n                                   : this.usuario.grupoUsuarioid == TipoUsuario.Usuario.toString()  ? \"Usuario\" \n                                   : this.usuario.grupoUsuarioid == TipoUsuario.Master.toString()  ? \"Master\" \n                                   : null \n     \n     this.carregarComboTipoUsuario(this.usuario.grupoUsuarioid, tipousuario); \n    });\n  }\n\n  carregarComboTipoUsuario(usuario : string, tipousuario : string) : void  {\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    \n      for (var tipo in TipoUsuario) {\n      \n           if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n    \n              this.comboTipousuario.push(tipo)\n              \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n    \n            if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                this.comboTipousuario.push(tipo);\n          \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Usuario ){\n      \n              if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                  this.comboTipousuario.push(tipo);\n            \n            }\n      }\n  }\n\n  fecharPopup(): void{\n    this.dialogRef.close();\n  }\n\n\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioid\" placeholder=\"GrupoUsuarioID\">\n                         <mat-option *ngFor=\"let tipo of comboTipousuario\" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaid\" placeholder=\"EmpresaID\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"status\" [(ngModel)]=\"usuario.bloqueado\" [checked]=\"usuario.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Profissional\">\n                    <input name=\"profissional\" [(ngModel)]=\"usuario.profissional\" [checked]=\"usuario.profissional\" type=\"checkbox\">\n            </mat-form-field>\n\n      \n        </form>\n\n        <button *ngIf=\"usuario.nome && usuario.login && usuario.grupoUsuarioid && usuario.empresaid\" mat-raised-button (click)=\"updateUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"fecharPopup()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>usuario works!</p>\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","export class Agenda {\r\n    id ?: string\r\n    DtCriacao: Date \r\n    nomeAgenda: string\r\n    profissionalid: string\r\n    Empresaid: number\r\n    unidadeid: string\r\n    salaid: string\r\n    substituicao: Boolean\r\n    grupoAgendaid: string\r\n    vigenciaInicio: Date\r\n    vigenciaFim: Date\r\n    considerarFeriado: Boolean\r\n    bloqueado: Boolean\r\n}\r\n\r\n","export class GrupoAgenda {\r\n\r\n    id? : number\r\n    dtCriacao : Date\r\n    nomeGrupoAgenda : string\r\n    empresaid : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n}","import { Time } from \"@angular/common\"\r\n\r\nexport class HorarioAgenda{\r\n    id: number\r\n    dtCriacao : Date\r\n    id_agenda : number\r\n    id_empresa : number\r\n    intervalo : string\r\n    tipoHorario : number\r\n    diaDasemana : number\r\n    hora : string\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n    naoDisponivel : boolean\r\n    horainicio : Time\r\n    horafim : Time\r\n}","\r\n\r\nexport class Sala {\r\n    id? : null\r\n    dtCriacao : Date\r\n    nomeSala     : string\r\n    empresaid : number\r\n    unidadeid : number\r\n    criadoPor : number\r\n    ativo : boolean\r\n}","export class Unidade {\r\n    id? : number\r\n    dtCriacao : Date\r\n    nomeUnidade : string\r\n    empresaid : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n}","export class Acesso{\r\n    login : string\r\n    senha : string\r\n    nome : string\r\n}","export class Product {\r\n    id ?: number\r\n    dtCriacao : Date\r\n    criadoPor : number\r\n    nome: string\r\n    valor : number\r\n    empresaid : string\r\n    bloqueado : boolean\r\n}","export class GrupoUsuario{\r\n    id? : number\r\n    dtCriacao : Date\r\n    nome : string\r\n    usuarioApp : boolean\r\n    empresaId : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n\r\n}","import { convertActionBinding, ConvertActionBindingResult } from '@angular/compiler/src/compiler_util/expression_converter';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport enum TipoUsuario {\r\n    \r\n    Administrador =  Number(localStorage.getItem(\"grpUsGrpAdm\")),\r\n    Sistema = Number(localStorage.getItem(\"grpUsGrpsis\")),\r\n    Usuario = Number(localStorage.getItem(\"grpUsGrpUs\")),\r\n    Master = Number(localStorage.getItem(\"grpUsGrpMs\")),\r\n}\r\n\r\nexport const TipoUsuarioSistema = new Map<string, number>([\r\n['Administrador', Number(localStorage.getItem(\"grpUsGrpAdm\"))],\r\n['Sistema', Number(localStorage.getItem(\"grpUsGrpsis\"))],\r\n['Usuario', Number(localStorage.getItem(\"grpUsGrpUs\"))],\r\n['Master', Number(localStorage.getItem(\"grpUsGrpMs\"))]\r\n])\r\n","export class Usuario {\r\nid ? : number\r\ndtCriacao : Date\r\nnome : string\r\nlogin : string\r\nsenha : string\r\ncracha : string\r\nbolSistema: boolean\r\nbolResetaSenha : boolean\r\ndataTrocaSenha : Date\r\ncriadoPor : number\r\nbloqueado : boolean\r\nempresaid : string\r\ngrupoUsuarioid : string\r\nprofissional : boolean\r\n}\r\n","import { GrupoUsuario } from './../models/usuarios/GrupoUsuarios';\nimport { ServiceAllService } from './service-all.service';\nimport { Endpoint } from './../Negocio/Endpoint';\nimport { TipoUsuario, TipoUsuarioSistema } from './../models/usuarios/enumUsuarios';\nimport { ObjetoToken } from './../models/Token/ObjetoToken';\nimport { Empresa } from './../models/empresa/ModelEmpresa';\nimport { Acesso } from '../models/acessoModel';\nimport { UtilService } from './util.service';\n\nimport { environment } from './../../environments/environment';\n\nimport { map, catchError, take, retry } from 'rxjs/operators';\nimport { Observable, EMPTY, from, empty, pipe } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\nimport { stringify } from 'querystring';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\nimport { STRING_TYPE } from '@angular/compiler';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n  acesso : Acesso = new Acesso();\n  objetoToken : ObjetoToken []\n\n  private tipoUsuarios = [];\n\n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n  \n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService,\n              private _serviceLogin : ServiceAllService<Acesso>\n               \n              ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL;\n              }\n\n  async logarSistema(acesso: Acesso) {\n    \n    try {\n      \n     // let retorno = await this._serviceLogin.create(acesso, Endpoint.Token).toPromise();\n      \n      let response = await this.http.post<ObjetoToken>(this.environmentUrl + Endpoint.Token, acesso).toPromise()\n\n       if (response != null && !response.bloqueado && !response.statusEmpresa && !response.erroLogin )\n          {\n\n            this.mostrarMenuEmitter.emit(true);\n            this.mostrarLoginEmitter.emit(false)\n            this.usuarioAutenticado = true;\n            this.router.navigate(['/']);\n\n            localStorage.setItem(\"tId\", response.token )\n            localStorage.setItem(\"usId\", response.id)\n            localStorage.setItem(\"grpUs\", response.grupoUsuarioid)\n           \n            localStorage.setItem(\"stUs\", response.bloqueado);\n            localStorage.setItem(\"empId\", response.empresaid);\n            this.utilService.showMessage(\"Seja Bem Vindo!  \" + acesso.login , false);\n\n            response.gruposUsuarios.forEach(element => {\n\n              if (element.nome == \"Administrador\")\n                  localStorage.setItem(\"grpUsGrpAdm\", element.id.toString())\n              else if (element.nome == \"Sistema\")\n                  localStorage.setItem(\"grpUsGrpsis\", element.id.toString())\n              else if (element.nome == \"Usuario\")\n                  localStorage.setItem(\"grpUsGrpUs\", element.id.toString())\n              else if (element.nome == \"Master\")\n                  localStorage.setItem(\"grpUsGrpMs\", element.id.toString())\n            });\n            \n          }\n          else\n          {\n            this.usuarioAutenticado = false;\n            this.mostrarMenuEmitter.emit(false);\n            this.mostrarLoginEmitter.emit(true);\n            \n            if (response.bloqueado)\n              this.utilService.showMessage(\"Usuário bloqueado!\", true);\n            else if (response.statusEmpresa)\n              this.utilService.showMessage(\"Empresa bloqueada!\", true);\n            else \n              this.utilService.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n      \n      } catch (e) {\n     \n          this.utilService.showMessage(\"Erro de acesso a API\" + e.message, true);\n      }\n    \n  }\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n    localStorage.removeItem(\"tId\");\n    localStorage.removeItem(\"usId\");\n    localStorage.removeItem(\"grpUs\");\n    localStorage.removeItem(\"stUs\");\n    localStorage.removeItem(\"empId\");\n    this.utilService.showMessage(\"Até logo! \", false);\n    this.router.navigate(['/login']);\n  }\n\n  header(){\n    var reqHeader = new HttpHeaders({ \n        'Content-Type' : 'application/json; charset=utf-8',\n        'Accept'       : 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('tId')\n    })\n    return { headers: reqHeader };\n  }\n\n  TipoUsuarioSistema(){\n    \n    TipoUsuarioSistema.forEach(element => {\n      this.tipoUsuarios.push(element)\n    });\n   return this.tipoUsuarios;\n  }\n  \n}\n\n\n\n\n\n","import { LoginService } from 'src/app/services/login.service';\n\nimport { UtilService } from './util.service';\nimport { environment } from '../../environments/environment';\nimport { Component } from '@angular/core';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from '../models/produtos/product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n   \nconstructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              \n             ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL + '/Produto';\n             }\n\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.environmentUrl, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`\n\n      return this.http.get<Product>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto \n   update(product: Product): Observable<Product> {    \n    return this.http.put<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Product>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n\n   }\n\n}\n","import { map, catchError, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UtilService } from './util.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAllService <T>{\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(\n    private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              ) {\n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.BASE_URL;\n              }\n\n\n    //Criar Cadastro\n    create(T : T, tipo: string) : Observable <T>{\n      return this.http.post<T>(this.environmentUrl + tipo , T, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Buscar todos Get All\n    read(tipo: string): Observable<T[]>{\n      return this.http.get<T[]>(this.environmentUrl + tipo, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n    //Buscar um cadastro por id\n    readById(id: string, tipo: string): Observable<T>{\n    const url = `${this.environmentUrl + tipo}/${id}`\n\n      return this.http.get<T>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Atualizar Produto \n    update(T: T, tipo: string): Observable<T> {    \n    return this.http.put<T>(this.environmentUrl + tipo, T, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    delete(id: number, tipo : string) : Observable<T>{\n      const url = `${this.environmentUrl + tipo}/${id}`      \n      return this.http.delete<T>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n\n    }\n\n}\n","import { HeaderService } from './../components/template/header/header.service';\nimport { ObjetoToken } from './../models/Token/ObjetoToken';\n\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Component, EventEmitter, Injectable } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TipoUsuario } from '../models/usuarios/enumUsuarios';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { MatDialog } from '@angular/material/dialog';\nimport { isNull } from '@angular/compiler/src/output/output_ast';\nimport { isNullOrUndefined } from 'util';\nimport { Output } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(private snackbar : MatSnackBar,\n             private http : HttpClient,\n             private headerService : HeaderService,\n             private router : Router,\n             public overlay : Overlay,\n             public dialog : MatDialog,\n             ) { }\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n\n}\n\n  erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY \n  }\n\n  convertToBase64(txt : string){\n    return btoa(txt);\n  }\n\n  convertBase64toText(txt: string){\n    return atob(txt);\n\n  }\n\n  AtualizarMenu(titulo : string, icone : string, urlIcone : string ) {\n      this.headerService.headerData.title = titulo ;\n      this.headerService.headerData.icon = icone\n      this.headerService.headerData.routeUrl = urlIcone\n  \n  }\n\n  Sessao(){\n    \n    let chaveEntrada = this.convertBase64toText(\"123\");\n    \n    var dados =  {\n        IdEmpresa : localStorage.getItem(\"empId\"),\n        GrupoUsuario : Number(localStorage.getItem(\"grpUs\")),\n        UsuarioId : Number(localStorage.getItem(\"usId\")),\n        StatusUsuario : localStorage.getItem(\"stUs\"),\n        TokenSessao : chaveEntrada \n\n    }\n    return dados\n  }\n\n\n  atualizaRota(rota : string, reload : boolean = false) {\n      \n    if (reload) {\n        this.router.navigateByUrl('', { skipLocationChange: true }).then(() => {\n          this.router.navigate([rota]);\n          reload = false;\n        });\n      }\n  \n    }\n\n  Popup(id : string, T : any, largura : string, altura: string ) {\n   \n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n    const dialogRef = this.dialog.open(T, {\n        width : largura,\n        height : altura,\n        scrollStrategy,\n        id\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(`Dialog result: ${result}`);\n      \n      });\n\n  }\n\n}","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-crud',\n  templateUrl: './chamado-crud.component.html',\n  styleUrls: ['./chamado-crud.component.css']\n})\nexport class ChamadoCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToChamadoCreate():void{\n    this.router.navigate(['chamados/read'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToChamadoCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-chamado-read></app-chamado-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToEmpresaCreate() : void {\n    this.router.navigate(['empresa/create'])\n  }\n\n\n}\n","<app-empresa-read></app-empresa-read>\n\n","import { UtilService } from './../../services/util.service';\nimport { TipoUsuario } from './../../models/usuarios/enumUsuarios';\nimport { Endpoint } from './../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ok } from 'assert';\nimport { Product } from 'src/app/models/produtos/product.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\nprodutos : Product[];\n\n\n  constructor(private serviceProdutos : ServiceAllService<Product>,\n              private headerService : HeaderService,\n              private utilService : UtilService\n              ) \n              {\n               // this.headerService.headerData = {\n               //  title : 'Início',\n              //    icon : 'home',\n              //    routeUrl : ''\n               // }\n              }\n\n  ngOnInit(): void {\n    this.ObterComponentes();\n    this.utilService.AtualizarMenu(\"Início\",\"home\",'');\n  }\n  \n  \n  ObterComponentes(){\n     \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.serviceProdutos.read(Endpoint.Produto).subscribe(prod => {\n      prod = prod;\n\n      this.produtos = new Array();\n        prod.forEach(element => {\n          if (empId == element.empresaid)\n              this.produtos.push(element)\n        });\n    });\n  }\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n</mat-card>\n\n<div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"10%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\"  *ngFor=\"let prod of produtos\">\n        <mat-card  class=\"tamanhoCard\">\n            <mat-card-header></mat-card-header>\n                <mat-card-title>\n                    {{prod.nome}} \n                    <a *ngIf=\"!prod.bloqueado\" mat-list-item routerLink=\"{{prod.nome}}\" >\n                        <i class=\"material-icons\" >\n                            schedule\n                        </i>\n                    </a>\n                    <a *ngIf=\"prod.bloqueado\" >\n                        <i class=\"material-icons\" >\n                            block\n                        </i>\n                    </a>\n                </mat-card-title>\n            <mat-card-footer  >\n            </mat-card-footer>\n\n        </mat-card>\n      </div>\n    </div>\n  </div>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router,\n             private headerService : HeaderService\n             ) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<app-product-read></app-product-read>\n\n","import { stringify } from 'querystring';\nimport { query } from '@angular/animations';\nimport { UsuarioReadComponent } from './../../components/usuario/usuario-read/usuario-read.component';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { Endpoint } from './../../Negocio/Endpoint';\nimport { UsuarioService } from './../../services/usuario.service';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-usuario-crud',\n  templateUrl: './usuario-crud.component.html',\n  styleUrls: ['./usuario-crud.component.css']\n})\nexport class UsuarioCrudComponent implements OnInit {\n\n  constructor(\n              private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  \n}\n","<app-usuario-read></app-usuario-read>\n\n\n\n\n\n","export const environment = {\n  production: false,\n  environmentName: \"QA\",\n  apiUrl:  'http://localhost:5000',\n  BASE_URL : '/api'\n\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}