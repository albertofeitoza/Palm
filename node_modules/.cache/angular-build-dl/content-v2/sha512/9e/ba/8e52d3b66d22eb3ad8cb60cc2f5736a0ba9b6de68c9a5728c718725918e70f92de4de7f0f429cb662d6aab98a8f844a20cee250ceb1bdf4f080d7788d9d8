{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Aplicacoes/agenda/agenda.component.ts","webpack:///src/app/Aplicacoes/agenda/agenda.component.html","webpack:///src/app/Aplicacoes/agenda/read/read.component.ts","webpack:///src/app/Aplicacoes/agenda/read/read.component.html","webpack:///src/app/Negocio/Aplicacao.ts","webpack:///src/app/Negocio/Endpoint.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.conponent.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.ts","webpack:///src/app/components/chamados/chamado-create/chamado-create.component.html","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.ts","webpack:///src/app/components/chamados/chamado-delete/chamado-delete.component.html","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.ts","webpack:///src/app/components/chamados/chamado-read/chamado-read.component.html","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.ts","webpack:///src/app/components/chamados/chamado-update/chamado-update.component.html","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.ts","webpack:///src/app/components/empresa/empresa-create/empresa-create.component.html","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.ts","webpack:///src/app/components/empresa/empresa-delete/empresa-delete.component.html","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.ts","webpack:///src/app/components/empresa/empresa-read/empresa-read.component.html","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.ts","webpack:///src/app/components/empresa/empresa-update/empresa-update.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/product/product-create/product-create.component.ts","webpack:///src/app/components/product/product-create/product-create.component.html","webpack:///src/app/components/product/product-delete/product-delete.component.ts","webpack:///src/app/components/product/product-delete/product-delete.component.html","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos-datasource.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.ts","webpack:///src/app/components/product/product-read-tableprodutos/product-read-tableprodutos.component.html","webpack:///src/app/components/product/product-read/product-read.component.ts","webpack:///src/app/components/product/product-read/product-read.component.html","webpack:///src/app/components/product/product-update/product-update.component.ts","webpack:///src/app/components/product/product-update/product-update.component.html","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/components/template/header/header.service.ts","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.ts","webpack:///src/app/components/usuario/usuario-create/usuario-create.component.html","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.ts","webpack:///src/app/components/usuario/usuario-delete/usuario-delete.component.html","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.html","webpack:///src/app/components/usuario/usuario-read/usuario-read.component.ts","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.ts","webpack:///src/app/components/usuario/usuario-update/usuario-update.component.html","webpack:///src/app/components/usuario/usuario.component.ts","webpack:///src/app/components/usuario/usuario.component.html","webpack:///src/app/diretivas/red.directive.ts","webpack:///src/app/models/acessoModel.ts","webpack:///src/app/models/usuarios/GrupoUsuarios.ts","webpack:///src/app/models/usuarios/enumUsuarios.ts","webpack:///src/app/models/usuarios/modelLogin.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/services/service-all.service.ts","webpack:///src/app/services/util.service.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.ts","webpack:///src/app/views/chamado-crud/chamado-crud.component.html","webpack:///src/app/views/empresa/empresa.component.ts","webpack:///src/app/views/empresa/empresa.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/product-crud/product-crud.component.ts","webpack:///src/app/views/product-crud/product-crud.component.html","webpack:///src/app/views/usuario-crud/usuario-crud.component.ts","webpack:///src/app/views/usuario-crud/usuario-crud.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AgendaComponent","UtilService","AtualizarMenu","Agenda","selector","templateUrl","styleUrls","ReadComponent","Aplicacao","TipoAplicacao","Map","Endpoint","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","authService","nome","mostrarMenu","mostrarlogin","mostrarMenuEmitter","subscribe","mostrar","mostrarLoginEmitter","mostrarLogin","AppModule","provide","useValue","declarations","providers","bootstrap","ChamadoCreateComponent","ChamadoDeleteComponent","ChamadoReadComponent","ChamadoUpdateComponent","EmpresaCreateComponent","utilService","router","servicoEmpresa","empresa","dtCriacao","cnpj","razaoSocial","nomeFantasia","inscricaoEstadual","inscricaoMunicipal","cnes","codPIS","observacao","codCnae","empresaPai","criadoPor","bloqueado","grpId","Number","localStorage","getItem","empPai","Date","Usuario","showMessage","isValid","read","Empresa","bemp","retornoEmp","filter","x","retornomaster","length","Administrador","create","emp","update","navigate","Master","cancel","EmpresaDeleteComponent","serviceEmpresa","serviceUsuario","route","mensagem","BuscarEmpresa","existeUsuario","usr","empresaId","toString","snapshot","paramMap","get","readById","excluirEmpresa","EmpresaReadComponent","displayedColumns","buscarEmpresa","filtroEmpresa","document","getElementById","value","empId","Array","forEach","element","push","master","empresaFIltrada","index","toLowerCase","includes","navigateToEmpresaCreate","EmpresaUpdateComponent","empresaService","usuariologado","ObterEmpresa","error","LoginComponent","authservice","ServiceEmpresa","acesso","carregaComboEmpresa","logarSistema","comboEmpresa","ProductCreateComponent","ProdutoEmpresa","comboProduto","product","valor","buscarProduto","Produto","p","ativo","associarProdutoEmpresa","ProductDeleteComponent","productService","deleteProduto","deleteProduct","EXAMPLE_DATA","name","ProductReadTableprodutosDataSource","data","dataMutations","paginator","page","sort","sortChange","pipe","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","ProductReadTableprodutosComponent","dataSource","table","ProductReadComponent","serviceProduto","products","navigateToProdutoCreate","ProductUpdateComponent","ProdutoService","updateProduct","FooterComponent","HeaderComponent","headerService","headerData","title","icon","routeUrl","HeaderService","_headerData","next","providedIn","NavComponent","auth","opened","lock","validarAcesso","sairSistema","UsuarioCreateComponent","serviceGrupoUsuario","serviceLogin","usuario","criargrupousuario","comboTipousuario","alimentarCombo","grupoUsuarioId","trim","Sistema","user","login","empresasCarregadas","tipo","hasOwnProperty","isNaN","parseInt","GrupoUsuario","UsuarioDeleteComponent","usuarioService","carregaUsuario","deleteUsuario","UsuarioReadComponent","userAutenticado","getUser","filtroUsuario","logado","u","responseUsuarios","usuarioFIltrados","responseEmpresa","empresaID","idEmpresa","IdEmpresaPai","navigateToUsuarioCreate","UsuarioUpdateComponent","usarioService","buscarUsuario","tipousuario","carregarComboTipoUsuario","UsuarioComponent","RedDirective","el","nativeElement","style","color","Acesso","TipoUsuario","TipoUsuarioSistema","httpOptions","headers","LoginService","snackbar","http","environmentName","environmentUrl","tipoUsuarios","usuarioAutenticado","BASE_URL","post","Token","toPromise","response","statusEmpresa","emit","setItem","token","removeItem","reqHeader","ProductService","loginservice","header","obj","erroHandler","url","put","ServiceAllService","T","msg","isErro","open","duration","horizontalPosition","verticalPosition","panelClass","txt","btoa","atob","titulo","icone","urlIcone","ChamadoCrudComponent","navigateToChamadoCreate","EmpresaComponent","HomeComponent","serviceProdutos","buscarComponentes","prod","produtos","ProductCrudComponent","UsuarioCrudComponent","environment","production","apiUrl","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { UtilService } from './../../services/util.service';\nimport { Aplicacao } from './../../Negocio/Aplicacao';\nimport { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { title } from 'process';\n\n@Component({\n  selector: 'app-agenda',\n  templateUrl: './agenda.component.html',\n  styleUrls: ['./agenda.component.css']\n})\nexport class AgendaComponent implements OnInit {\n  \n  constructor(private UtilService : UtilService){}\n\n  ngOnInit(): void {\n     this.UtilService.AtualizarMenu(Aplicacao.Agenda,\"app_registration\",'')\n  }\n  \n\n\n}\n","     <mat-card>\n     \n        <button mat-button [matMenuTriggerFor]=\"aboveMenu\">Rotina Diária</button>\n        <mat-menu #aboveMenu=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item>Agendamentos</button>\n        <button mat-menu-item>Cadastro de Profissional</button>\n        </mat-menu>\n\n        <button mat-button [matMenuTriggerFor]=\"belowMenu\">Cadastro</button>\n        <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item>Cadastro de Profissional</button>\n        <button mat-menu-item>Cadastro Agenda</button>\n        <button mat-menu-item>Alterar Agenda</button>\n        \n        </mat-menu>\n\n        <button mat-button [matMenuTriggerFor]=\"beforeMenu\">Relatórios</button>\n        <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n        </mat-menu>\n\n\n        <button mat-button [matMenuTriggerFor]=\"afterMenu\">Sobre</button>\n        <mat-menu #afterMenu=\"matMenu\" xPosition=\"after\">\n        <button mat-menu-item>Item 1</button>\n        <button mat-menu-item>Item 2</button>\n        </mat-menu>\n\n</mat-card>\n\n<app-read></app-read>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\nexport class ReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","testes","export enum Aplicacao{\r\n  Agenda = 'Agenda',\r\n  Vendas = 'Vendas',\r\n  Cartões = 'Cartões'\r\n}\r\n\r\nexport const TipoAplicacao = new Map<string, string>([\r\n  ['Agenda', 'Agenda'],\r\n  ['FrenteCaixa', 'FrenteCaixa'],\r\n  ['Cartões', 'Cartões'],\r\n\r\n])","export enum Endpoint {\r\n    Empresa = '/Empresa',\r\n    GrupoUsuario = '/GrupoUsuario',\r\n    Produto = '/Produto',\r\n    Usuario = '/Usuario',\r\n    Token = '/Token'\r\n}","import { Aplicacao } from './Negocio/Aplicacao';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { ProductCrudComponent } from \"./views/product-crud/product-crud.component\";\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\n\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\n\n//Rotas de componentes Negócio\nimport { AgendaComponent } from './Aplicacoes/agenda/agenda.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path : \"\",\n    component:HomeComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"products\",\n    component: ProductCrudComponent\n  },\n  {\n    path: \"products/create\",\n    component : ProductCreateComponent\n  },\n  {\n    path: \"products/update/:id\",\n    component : ProductUpdateComponent\n  },\n  {\n    path: \"products/delete/:id\",\n    component : ProductDeleteComponent\n  },\n  {\n    path: \"usuarios\",\n    component : UsuarioCrudComponent\n  },\n  {\n    path: \"usuarios/create\",\n    component : UsuarioCreateComponent\n  },\n  {\n    path: \"usuarios/update/:id\",\n    component : UsuarioUpdateComponent\n  },\n  {\n    path: \"usuarios/delete/:id\",\n    component : UsuarioDeleteComponent\n  },\n  {\n    path: \"chamados\",\n    component : ChamadoCrudComponent\n  },\n  {\n    path: \"chamados/create\",\n    component : ChamadoCreateComponent\n  },\n  {\n    path: \"chamados/update/:id\",\n    component : ChamadoUpdateComponent\n  },\n  {\n    path: \"chamados/delete/:id\",\n    component : ChamadoDeleteComponent\n  },\n\n  //Rotas de empresa\n  {\n    path: \"empresa\",\n    component : EmpresaComponent\n  },\n  {\n    path: \"empresa/create\",\n    component : EmpresaCreateComponent\n  },\n  {\n    path: \"empresa/update/:id\",\n    component : EmpresaUpdateComponent\n  },\n  {\n    path: \"empresa/delete/:id\",\n    component : EmpresaDeleteComponent\n  },\n\n\n\n//Rotas da Agenda\n{\n  path: Aplicacao.Agenda,\n  component : AgendaComponent\n},\n{\n  path: \"empresa/create\",\n  component : EmpresaCreateComponent\n},\n{\n  path: \"empresa/update/:id\",\n  component : EmpresaUpdateComponent\n},\n{\n  path: \"empresa/delete/:id\",\n  component : EmpresaDeleteComponent\n},\n\n\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","//import { LoginService } from '../app/'\nimport { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\n\n\n\n@Component({\n  selector: 'app-root',\ntemplateUrl: 'app.conponent.html'\n})\nexport class AppComponent {\n  nome = 'Palm';\n\nmostrarMenu : boolean = false; \nmostrarlogin : boolean = true; \n\nconstructor(private authService : LoginService){\n\n}\n\nngOnInit(){\n    this.authService.mostrarMenuEmitter.subscribe(\n        mostrar => this.mostrarMenu = mostrar\n    );\n\n    this.authService.mostrarLoginEmitter.subscribe(\n        mostrarLogin => this.mostrarlogin = mostrarLogin\n    );\n}\n\n}\n\n\n\n","<app-login *ngIf=\"mostrarlogin\"></app-login>\r\n<app-header *ngIf=\"mostrarMenu\"></app-header>\r\n<app-nav *ngIf=\"mostrarMenu\"></app-nav>\r\n<app-footer *ngIf=\"mostrarMenu\"></app-footer>\r\n\r\n\r\n","import { LoginService } from './services/login.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { UsuarioCrudComponent } from './views/usuario-crud/usuario-crud.component';\n\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from  '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\n\n\n\n\nregisterLocaleData(localePt);\n\n//Modulos Material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n\n\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductReadTableprodutosComponent } from './components/product/product-read-tableprodutos/product-read-tableprodutos.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { RedDirective } from './diretivas/red.directive';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { UsuarioReadComponent } from './components/usuario/usuario-read/usuario-read.component';\nimport { UsuarioCreateComponent } from './components/usuario/usuario-create/usuario-create.component';\nimport { UsuarioDeleteComponent } from './components/usuario/usuario-delete/usuario-delete.component';\nimport { UsuarioUpdateComponent } from './components/usuario/usuario-update/usuario-update.component';\nimport { ChamadoCrudComponent } from './views/chamado-crud/chamado-crud.component';\nimport { ChamadoCreateComponent } from './components/chamados/chamado-create/chamado-create.component';\nimport { ChamadoUpdateComponent } from './components/chamados/chamado-update/chamado-update.component';\nimport { ChamadoDeleteComponent } from './components/chamados/chamado-delete/chamado-delete.component';\nimport { ChamadoReadComponent } from './components/chamados/chamado-read/chamado-read.component';\nimport { EmpresaComponent } from './views/empresa/empresa.component';\nimport { EmpresaCreateComponent } from './components/empresa/empresa-create/empresa-create.component';\nimport { EmpresaUpdateComponent } from './components/empresa/empresa-update/empresa-update.component';\nimport { EmpresaDeleteComponent } from './components/empresa/empresa-delete/empresa-delete.component';\nimport { EmpresaReadComponent } from './components/empresa/empresa-read/empresa-read.component';\nimport { AgendaComponent } from './Aplicacoes/agenda/agenda.component';\nimport { ReadComponent } from './Aplicacoes/agenda/read/read.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductReadTableprodutosComponent,\n    ProductUpdateComponent,\n    ProductDeleteComponent,\n    LoginComponent,\n    RedDirective,\n    UsuarioCrudComponent,\n    UsuarioComponent,\n    UsuarioReadComponent,\n    UsuarioCreateComponent,\n    UsuarioDeleteComponent,\n    UsuarioUpdateComponent,\n    ChamadoCrudComponent,\n    ChamadoCreateComponent,\n    ChamadoUpdateComponent,\n    ChamadoDeleteComponent,\n    ChamadoReadComponent,\n    EmpresaComponent,\n    EmpresaCreateComponent,\n    EmpresaUpdateComponent,\n    EmpresaDeleteComponent,\n    EmpresaReadComponent,\n    AgendaComponent,\n    ReadComponent,\n\n   \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    FlexLayoutModule,\n\n\n  ],\n  providers: \n  [\n    {\n    provide : LOCALE_ID,\n    useValue : 'pt-BR',\n    },\n  [LoginService],\n ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-create',\n  templateUrl: './chamado-create.component.html',\n  styleUrls: ['./chamado-create.component.css']\n})\nexport class ChamadoCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-create works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-delete',\n  templateUrl: './chamado-delete.component.html',\n  styleUrls: ['./chamado-delete.component.css']\n})\nexport class ChamadoDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-delete works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-read',\n  templateUrl: './chamado-read.component.html',\n  styleUrls: ['./chamado-read.component.css']\n})\nexport class ChamadoReadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-read works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-update',\n  templateUrl: './chamado-update.component.html',\n  styleUrls: ['./chamado-update.component.css']\n})\nexport class ChamadoUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>chamado-update works!</p>\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from './../../../services/util.service';\nimport { Contato } from './../../../models/contato/modelContato';\nimport { ContatoService } from './../../../services/contato.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { cnpj } from 'cpf-cnpj-validator';\n\n@Component({\n  selector: 'app-empresa-create',\n  templateUrl: './empresa-create.component.html',\n  styleUrls: ['./empresa-create.component.css']\n})\nexport class EmpresaCreateComponent implements OnInit {\n\n \nempresa : Empresa = {\n    dtCriacao : null,\n    cnpj: null,\n    razaoSocial: null,\n    nomeFantasia: null,\n    inscricaoEstadual: null,\n    inscricaoMunicipal: null,\n    cnes : null,\n    codPIS : null,\n    observacao : null,\n    codCnae : null,\n    empresaPai : null,\n    criadoPor : null,\n    bloqueado : null\n    \n}\n\n\n\n  constructor(private utilService : UtilService,\n              private router : Router,\n              private servicoEmpresa : ServiceAllService<Empresa>\n              )\n             { }\n\n  ngOnInit(): void {\n   \n  }\n\n  cadastrarEmpresa(){\n    \n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n    let empPai = Number(localStorage.getItem(\"empId\"));\n    this.empresa.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.empresa.dtCriacao = new Date;\n    this.empresa.empresaPai = empPai;\n       \n    this.empresa.bloqueado = false;\n    \n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.utilService.showMessage(\"Você não possui permissão para cadastro de empresas\", false)\n\n    }else\n    {\n     if(cnpj.isValid(this.empresa.cnpj)){\n       this.servicoEmpresa.read(Endpoint.Empresa).subscribe(bemp => {\n          bemp = bemp;\n         let retornoEmp = bemp.filter(x => x.cnpj == this.empresa.cnpj)\n         let retornomaster = bemp.filter(x => x.id == empPai);\n\n          if (retornoEmp.length == 0 ){\n            \n            if(grpId == TipoUsuario.Administrador){\n\n                this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                  emp = emp;\n                        \n                  let empresaPai = emp.id;\n                         \n                              emp.empresaPai = empresaPai;\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                         \n                          this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                          this.router.navigate(['empresa']);\n                        })\n                }else if (grpId == TipoUsuario.Master && retornomaster.filter(x => x.empresaPai == empPai).length > 0)\n                {\n                  \n                  this.servicoEmpresa.create(this.empresa, Endpoint.Empresa).subscribe(emp => {\n                    emp = emp;\n                          \n                    let empresaPai = emp.id;\n                          \n                              emp.bloqueado = true;\n                              emp.empresaPai = Number(localStorage.getItem(\"empId\"));\n                              this.servicoEmpresa.update(emp,Endpoint.Empresa).subscribe(() => {})\n                       \n                            this.utilService.showMessage(\"Empresa cadastrada com sucesso!\",false);\n                            this.router.navigate(['empresa']);\n                          })\n                }else{\n                  this.utilService.showMessage(\"Para criação de uma empresa precisa está logado com a Matriz.!\",false);\n                }\n          }\n          else\n           this.utilService.showMessage(\"Cnpj já cadastrado!\",false);\n        });  \n      }\n      else{\n        this.utilService.showMessage(\"Cnpj inválido\",false);\n      }\n    }\n  }\n\n  cancel(){\n    this.router.navigate(['empresa'])\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Empresa\">\n        <section>\n\n        <div class=\"container\">\n\n            <mat-card>\n                <mat-card-title>Nova Empresa</mat-card-title>\n                    <form>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cnpj\" \n                             [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Nome\"\n                            [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Razão Social\"\n                            [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Estadual\"\n                            [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Inscrição Municipal\"\n                            [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"CNES\"\n                            [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. PIS\"\n                            [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cod. CNAE\"\n                            [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Observação\"\n                            [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n                        </mat-form-field>\n            \n                    </form>\n            \n                    <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"cadastrarEmpresa()\" color=\"primary\" > \n                        Salvar\n                    </button>\n                    \n                    <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n                        Cancelar\n                    </button>\n            </mat-card>\n\n        </div>\n\n        </section>\n</mat-tab>\n<mat-tab label=\"Contato\"> Contatos</mat-tab>\n<mat-tab label=\"Endereços\">Endereços </mat-tab>\n</mat-tab-group>","import { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { CanActivate, Router, ActivatedRoute } from '@angular/router';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-empresa-delete',\n  templateUrl: './empresa-delete.component.html',\n  styleUrls: ['./empresa-delete.component.css']\n})\nexport class EmpresaDeleteComponent implements OnInit {\n\n\n  empresa : Empresa\n  constructor(private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private router : Router,\n              private route : ActivatedRoute,\n              private mensagem : UtilService\n\n            ) { }\n\n  ngOnInit(): void {\n    this.BuscarEmpresa();\n  }\n\n\n  excluirEmpresa(){\n    \n    let existeUsuario = null;\n    \n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(usr => {\n        usr = usr;\n        existeUsuario = usr.filter(x => x.empresaId == this.empresa.id.toString())\n       \n        if (existeUsuario.length > 0)\n        {\n          this.mensagem.showMessage(\"Empresa não pode ser excluida porque possui Dependências de usuários.\", false)\n        }    \n        else{\n            let grpId = Number(localStorage.getItem(\"grpUs\"));\n          \n            if (grpId == TipoUsuario.Administrador){\n        \n              this.serviceEmpresa.delete(this.empresa.id, Endpoint.Empresa).subscribe(()=>{\n                this.mensagem.showMessage(\"Empresa excluida com sucesso !\", false);\n                this.router.navigate(['/empresa'])\n              })\n            }\n              else{\n                this.mensagem.showMessage(\"Permissão de exclusão negada !\", false);\n                this.router.navigate(['/empresa'])\n              }\n        }\n    });\n  }\n\n  cancel(){\n    this.router.navigate(['/empresa'])\n  }\n\n   BuscarEmpresa(){\n    const id = this.route.snapshot.paramMap.get('id');\n    \n    this.serviceEmpresa.readById(id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n\n    })\n\n   }\n\n\n}\n","<mat-card>\n    <mat-card-title>Excluir Empresa</mat-card-title>\n        <form>\n                       \n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n            </mat-form-field>\n           \n            <mat-form-field>\n                <input matInput placeholder=\"Nome Fantasia\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n            </mat-form-field>\n           \n           \n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" name=\"cnpj\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"excluirEmpresa()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\r\nimport { Endpoint } from './../../../Negocio/Endpoint';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceAllService } from './../../../services/service-all.service';\r\nimport { Endereco } from './../../../models/endereco/modelEndereco';\r\nimport { Contato } from './../../../models/contato/modelContato';\r\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { elementAt } from 'rxjs/operators';\r\nimport { TipoUsuarioSistema } from 'src/app/models/usuarios/enumUsuarios';\r\n\r\n@Component({\r\n  selector: 'app-empresa-read',\r\n  templateUrl: './empresa-read.component.html',\r\n  styleUrls: ['./empresa-read.component.css']\r\n})\r\nexport class EmpresaReadComponent implements OnInit {\r\n\r\n  \r\n  empresa: Empresa[];\r\n  empresas: Empresa[];\r\n  contato : Contato;\r\n  endereco : Endereco;\r\n  displayedColumns = ['id','cnpj', 'razaoSocial','nomeFantasia','inscricaoEstadual','inscricaoMunicipal','bloqueado','action']  \r\n\r\n  constructor(private router : Router,\r\n              private serviceEmpresa : ServiceAllService<Empresa>\r\n             ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.buscarEmpresa();\r\n\r\n  }\r\n\r\n  buscarEmpresa(): void \r\n  {\r\n    let filtroEmpresa = (<HTMLSelectElement>document.getElementById('busca')).value;\r\n    let empId = localStorage.getItem(\"empId\");\r\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\r\n\r\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\r\n      emp = emp;\r\n\r\n      \r\n      this.empresa =  new Array();\r\n\r\n          if(grpId == TipoUsuario.Administrador)\r\n          {\r\n            emp.forEach(element => {\r\n            this.empresa.push(element)\r\n             });\r\n          }\r\n          else if(grpId == TipoUsuario.Master)\r\n          {\r\n            emp.forEach(master => {\r\n              if(master.empresaPai.toString()== empId) \r\n              this.empresa.push(master)\r\n            });\r\n\r\n          }\r\n\r\n      let empresaFIltrada = new Array();\r\n      if (filtroEmpresa){\r\n           \r\n        for (let index = 0; index < this.empresa.length; index++) {\r\n          const element = this.empresa[index];\r\n            if (element.nomeFantasia.toLowerCase().includes(filtroEmpresa.toLowerCase()))\r\n            empresaFIltrada.push(element);\r\n        }\r\n        this.empresa = new Array();\r\n        this.empresa = empresaFIltrada;    \r\n      }else{\r\n        this.empresa = this.empresa;\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n\r\n  navigateToEmpresaCreate() : void {\r\n    this.router.navigate(['empresa/create'])\r\n  }\r\n\r\n}\r\n  \r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n","<div>\n  <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n   \n   <span (click)=\"buscarEmpresa()\">\n     <i class=\"material-icons\">search</i>\n   </span>\n</div>\n\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"empresa\">\n      <!-- Id Column -->\n      \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"cnpj\">\n        <th mat-header-cell *matHeaderCellDef>Cnpj</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.cnpj}}</td>\n      </ng-container>\n      \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"razaoSocial\">\n        <th mat-header-cell *matHeaderCellDef>Razão Social</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.razaoSocial}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"nomeFantasia\">\n        <th mat-header-cell *matHeaderCellDef>Nome Fantasia</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nomeFantasia}}</td>\n      </ng-container>\n\n      <!-- Name Price -->\n      <ng-container matColumnDef=\"inscricaoEstadual\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Estadual</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoEstadual}}</td>\n      </ng-container>\n\n       <!-- Name Column -->\n       <ng-container matColumnDef=\"inscricaoMunicipal\">\n        <th mat-header-cell *matHeaderCellDef>Ins. Municipal</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.inscricaoMunicipal}}</td>\n      </ng-container>\n\n      <!-- status -->\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n          </td>\n        </ng-container>\n\n       \n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/empresa/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/empresa/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n            \n\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n\n<div class=\"footer\">\n  <span (click)=\"navigateToEmpresaCreate()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { UtilService } from './../../../services/util.service';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Component, OnInit } from '@angular/core';\nimport { cnpj } from 'cpf-cnpj-validator';\n\n@Component({\n  selector: 'app-empresa-update',\n  templateUrl: './empresa-update.component.html',\n  styleUrls: ['./empresa-update.component.css']\n})\nexport class EmpresaUpdateComponent implements OnInit {\n\n  empresa : Empresa;\n  usuariologado : boolean;\n  constructor(private router : Router,\n              private route: ActivatedRoute,\n              private empresaService : ServiceAllService<Empresa>,\n              private mensagem : UtilService\n              ) { }\n\n  ngOnInit(): void {\n  \n  if (Number(localStorage.getItem(\"grpUs\")) == TipoUsuario.Administrador)\n     this.usuariologado = true;\n  \n  this.ObterEmpresa();\n  \n  }\n\n\n  atualizarEmpresa() : void {\n    \n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n    if(grpId == TipoUsuario.Usuario)\n    {\n      this.mensagem.showMessage(\"Você não possui permissão para editar o cadastro de empresas\", false)\n\n    }else\n    {\n     if (cnpj.isValid(this.empresa.cnpj)){\n               try {\n                        this.empresaService.update(this.empresa, Endpoint.Empresa).subscribe(()=>{\n                        this.mensagem.showMessage(\"Empresa atualizada com sucesso\", false)\n                        this.router.navigate(['/empresa'])\n                      });\n\n                    } catch (error) {\n                      this.mensagem.showMessage(\"Erro na atualização dos dados \" + error, true);\n                    }\n\n      }else{\n        this.mensagem.showMessage(\"Cnpj Inválido \" , false);\n      }\n      }\n  }\n\n  cancel(){\n    this.router.navigate(['/empresa'])\n  }\n\n  \n  ObterEmpresa() {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.empresaService.readById(id, Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })    \n       \n  }\n  \n\n}\n\n\n","<mat-card>\n    <mat-card-title>Atualizar dados da Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Cnpj\" \n                 [(ngModel)]=\"empresa.cnpj\" disabled=\"true\" name=\"cnpj\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\"\n                [(ngModel)]=\"empresa.nomeFantasia\" name=\"nomeFantasia\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Razão Social\"\n                [(ngModel)]=\"empresa.razaoSocial\" name=\"razaoSocial\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Estadual\"\n                [(ngModel)]=\"empresa.inscricaoEstadual\" name=\"inscricaoEstadual\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Inscrição Municipal\"\n                [(ngModel)]=\"empresa.inscricaoMunicipal\" name=\"inscricaoMunicipal\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"CNES\"\n                [(ngModel)]=\"empresa.cnes\" name=\"cnes\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. PIS\"\n                [(ngModel)]=\"empresa.codPIS\" name=\"codPIS\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Cod. CNAE\"\n                [(ngModel)]=\"empresa.codCnae\" name=\"codCnae\">\n            </mat-form-field>\n            \n            <div *ngIf=\"usuariologado\">\n                <mat-form-field >\n                            <input matInput placeholder=\"Bloqueado\">\n                                        <input name=\"status\" [(ngModel)]=\"empresa.bloqueado\" [checked]=\"empresa.bloqueado\" type=\"checkbox\">\n                </mat-form-field>\n            </div>\n          \n            <mat-form-field>\n    \n                <input matInput placeholder=\"Observação\"\n                [(ngModel)]=\"empresa.observacao\" name=\"observacao\">\n            </mat-form-field>\n\n        </form>\n\n        <button *ngIf=\"empresa.cnpj && empresa.nomeFantasia && empresa.razaoSocial\"  mat-raised-button (click)=\"atualizarEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","import { Endpoint } from './../../Negocio/Endpoint';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Acesso } from '../../models/acessoModel';\nimport { UtilService } from './../../services/util.service';\nimport { LoginService } from './../../services/login.service';\n\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\nacesso : Acesso = new Acesso();\ncomboEmpresa : Empresa[];\n\n\nconstructor(private router :Router,\n             private authservice : LoginService,\n             private ServiceEmpresa : ServiceAllService<Empresa>,\n            \n             ) { }\n\n  ngOnInit(): void {\n   this.carregaComboEmpresa();\n  }\n  \n  logarSistema(){\n    this.authservice.logarSistema(this.acesso);\n  }\n  \n  carregaComboEmpresa(){\n    this.ServiceEmpresa.read(Endpoint.Empresa).subscribe(emp =>{\n    this.comboEmpresa = emp;\n    });\n  }\n\n}\n","<mat-card >\n    <mat-card-title><i class=\"material-icons\">account_box</i></mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"acesso.empresaId\" placeholder=\"empId\" >\n                    <mat-option *ngFor=\"let empresa of comboEmpresa \" [value]=\"empresa.id\">\n                        {{empresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field > \n                <input matInput placeholder=\"login\" \n                 [(ngModel)]=\"acesso.login\" name=\"name\" placeholder=\"login\">\n                 \n            </mat-form-field>\n            <mat-form-field >\n                <input matInput placeholder=\"senha\"\n                [(ngModel)]=\"acesso.senha\" type=\"password\" name=\"senha\">\n                \n            </mat-form-field>\n        </form>\n        \n            <div *ngIf=\"acesso.login && acesso.senha\">\n                <button mat-raised-button (click)=\"logarSistema()\" color=\"primary\"> \n                    Login\n                </button> \n            </div>\n          \n   \n       \n        \n\n</mat-card>        \n","import { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Aplicacao, TipoAplicacao } from './../../../Negocio/Aplicacao';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\nimport { stringify } from 'querystring';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  comboProduto =  [];\n  empresa : Empresa[];\n  comboEmpresa : Empresa;\n\n    product : Product = {  \n    dtCriacao : null,\n    criadoPor : null,\n    nome : null,\n    valor : 0,\n    empresaId : null,\n    bloqueado : false,\n    }\n\n  constructor(\n              private utilService : UtilService,\n              private router : Router,\n              private ProdutoEmpresa : ServiceAllService<Product>,\n              private ServiceEmpresa : ServiceAllService<Empresa>\n               ) { }\n\n  ngOnInit(): void {\n    this.buscarProduto();\n    this.buscarEmpresa()\n  }\n\n  associarProdutoEmpresa() : void {\n\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.product.dtCriacao = new Date;\n    this.product.bloqueado = false;\n    \n    this.ProdutoEmpresa.read(Endpoint.Produto).subscribe(p => {\n      p = p;\n\n      let ativo = p.filter(x => x.nome == this.product.nome && x.empresaId == this.product.empresaId )\n      \n      if (ativo.length == 0)\n      {\n        this.ProdutoEmpresa.create(this.product, Endpoint.Produto).subscribe(() => {\n          this.utilService.showMessage('Produto Criado!');\n          this.router.navigate(['products']);\n          })\n      \n      }else{\n        this.utilService.showMessage('Esse Produto Já foi cadastrado para essa empresa!');\n      }\n\n    })\n    \n  }\n\n  cancel() : void {\n\n    this.router.navigate(['products'])\n  }\n\n  buscarProduto(){\n    \n      TipoAplicacao.forEach(element => {\n        this.comboProduto.push(element)\n      });\n     return this.comboProduto;\n  }\n  buscarEmpresa(){\n    this.ServiceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n      this.empresa = emp;\n    })\n  }\n  \n}\n","<mat-card>\n    <mat-card-title>Habilitar - Produto Empresa</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Produto\">\n                <p></p>\n                <mat-select [(value)]=\"product.nome\" placeholder=\"productId\" >\n                    <mat-option *ngFor=\"let produto of comboProduto \" [value]=\"produto\">\n                         {{produto}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"product.empresaId\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let comboEmpresa of empresa\" [value]=\"comboEmpresa.id\">\n                            {{comboEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n            \n        </form>\n\n        <button mat-raised-button (click)=\"associarProdutoEmpresa()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>\n\n","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product : Product = {\n    id: null,\n    dtCriacao : null,\n    criadoPor : null,\n    nome: null,\n    valor : 0,\n    empresaId : null,\n    bloqueado : null,\n  }\n\n  constructor(private productService : ProductService,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute,\n              private deleteProduto : ServiceAllService<Product> ) { }\n\n  ngOnInit(): void {\n    \n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product;\n    });\n\n  }\n  deleteProduct():void{\n      this.deleteProduto.delete(this.product.id, Endpoint.Produto).subscribe(() => {\n        this.utilService.showMessage(\"Produto Excluído com Sucesso!\")\n        this.router.navigate(['/products'])\n      })\n    \n  }\n\n  cancel():void{\n    this.router.navigate(['/products'])\n  }\n\n}\n\n\n  \n\n \n\n\n\n  \n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" disabled\n                [(ngModel)]=\"product.nome\" name=\"nome\">\n\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteProduct()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ProductReadTableprodutosItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: ProductReadTableprodutosItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the ProductReadTableprodutos view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductReadTableprodutosDataSource extends DataSource<ProductReadTableprodutosItem> {\n  data: ProductReadTableprodutosItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ProductReadTableprodutosItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ProductReadTableprodutosItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ProductReadTableprodutosItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductReadTableprodutosDataSource, ProductReadTableprodutosItem } from './product-read-tableprodutos-datasource';\n\n@Component({\n  selector: 'app-product-read-tableprodutos',\n  templateUrl: './product-read-tableprodutos.component.html',\n  styleUrls: ['./product-read-tableprodutos.component.css']\n})\nexport class ProductReadTableprodutosComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<ProductReadTableprodutosItem>;\n  dataSource: ProductReadTableprodutosDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new ProductReadTableprodutosDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 100]\">\n  </mat-paginator>\n</div>\n","import { stringify } from 'querystring';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router } from '@angular/router';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { ProductService } from './../../../services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from '../../../models/produtos/product.model';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n\n\nproducts: Product[]\n\ndisplayedColumns = ['id','nome', 'valor','empresaId','bloqueado','action']  \n\n  constructor(private router : Router,\n              private serviceProduto : ServiceAllService<Product>,\n              private serviceEmpresa : ServiceAllService<Empresa>\n             ) { }\n\n  ngOnInit(): void {\n      this.buscarProduto()\n  }\n\n  navigateToProdutoCreate() : void {\n    this.router.navigate(['products/create'])\n  }\n\n  buscarProduto() : void {\n\n    this.serviceProduto.read(Endpoint.Produto).subscribe(product => {\n        product = product;\n\n        this.products = new Array();\n\n        product.forEach(element => {\n          \n            this.serviceEmpresa.readById(element.empresaId.toString(), Endpoint.Empresa).subscribe(e => {\n              e = e;\n              if (e)\n                element.empresaId = e.razaoSocial;\n            })\n            this.products.push(element)\n        });\n    })\n  }\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n       <!-- Name Price -->\n       <ng-container matColumnDef=\"valor\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.valor | currency: 'BRL'}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"empresaId\">\n        <th mat-header-cell *matHeaderCellDef>Empresa</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.empresaId}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bloqueado\">\n        <th mat-header-cell *matHeaderCellDef>Status</th>\n        <td mat-cell *matCellDef=\"let row\">\n            <div *ngIf=\"row.bloqueado\" >\n              <i class=\"material-icons\">\n                lock\n              </i>\n            </div>\n            <div *ngIf=\"!row.bloqueado\" >\n              <i class=\"material-icons\">  \n                lock_open\n              </i>\n            </div>\n        </td>\n      </ng-container>\n\n\n\n\n      \n\n\n\n\n\n\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n\n            <a routerLink=\"/products/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\" class=\"delete\">\n                <i class=\"material-icons\">\n                    delete\n                </i>\n            </a>\n        </td>\n      </ng-container>\n          \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </div>\n\n  <div class=\"footer\">\n    <span (click)=\"navigateToProdutoCreate()\">\n      <i class=\"material-icons\">person_add</i>\n    </span>\n  </div>","import { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../../../services/product.service';\nimport { Product } from '../../../models/produtos/product.model';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\nproduct: Product = {\n    id : null,\n    dtCriacao : null,\n    criadoPor : null,\n    nome: null,\n    valor: 0,\n    empresaId :null,\n    bloqueado : null\n  }\n  \n\n  constructor(\n              private router: Router,\n              private utilService : UtilService,\n              private route: ActivatedRoute,\n              private ProdutoService : ServiceAllService<Product>\n              ) { }\n\n\n  ngOnInit(): void {\n    \n    this.buscarProduto();\n   \n  }\n\n  updateProduct(): void {\n    this.product.criadoPor  = Number(localStorage.getItem(\"usId\"));\n      this.ProdutoService.update(this.product, Endpoint.Produto).subscribe(() => {\n      this.utilService.showMessage(\"Produto Atualizado com Sucesso!\")\n      this.router.navigate(['/products'])\n    })\n\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n\n  }\n  buscarProduto() : void {\n\n    const id = this.route.snapshot.paramMap.get('id')\n      this.ProdutoService.readById(id, Endpoint.Produto).subscribe(product => {\n          this.product = product;\n      })\n  }  \n\n}\n","<mat-card>\n    <mat-card-title>Alterar Produto</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"product.nome\" name=\"nome\">\n\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Preço R$\"\n                [(ngModel)]=\"product.valor\" name=\"valor\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"product.bloqueado\" [checked]=\"product.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\" > \n            Atualizar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n       \n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n    Desenvolvido com \n        <i class=\"material-icons red v-middle\" appRed >\n            home\n        </i>\n        por <strong><span>Alberto</span></strong>\n    </span>\n</mat-toolbar>","import { HeaderService } from './header.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private headerService : HeaderService) { }\n\n  ngOnInit(): void {\n  }\n\nget title(): string {\n  return this.headerService.headerData.title\n}\n\nget icon(): string {\n  return this.headerService.headerData.icon\n}\n\nget routeUrl(): string {\n  return this.headerService.headerData.routeUrl\n}\n\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.jpg\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\" >\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n        \n            {{ title }}\n        </a>\n    </span> \n</mat-toolbar>\n\n","import { HeaderData } from './header.data.model';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title : 'Início',\n    icon : 'home',\n    routeUrl : ''\n  })\n\n\n  constructor() { }\n\nget headerData() : HeaderData {\n  return this._headerData.value;\n}\n\nset headerData(headerData : HeaderData) {\n   this._headerData.next(headerData)\n}\n\n\n}\n","import { TipoUsuario } from './../../../models/usuarios/enumUsuarios';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\nopened = false;\nlock = false;  \n  constructor(private auth: LoginService) { }\n\n  ngOnInit(): void {\n  this.validarAcesso();\n  }\n\n  sairSistema(){\n    \n    this.auth.sairSistema();\n    \n  }\nvalidarAcesso(){\n  this.lock = Number(localStorage.getItem(\"grpUs\")) == TipoUsuario.Administrador ? true : false;\n}\n \n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav  class=\"sidenav\" mode=\"side\" \n            fixedInViewport=\"true\" fixedTopGap=\"64\" fixedBottomGap=\"64\" [(opened)]=\"opened\">\n            <mat-nav-list class=\"nav-list\">\n            \n                <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <!--Menus de cadastro-->    \n            <button mat-button [matMenuTriggerFor]=\"menu\" class=\"menuColor\" >\n                <i class=\"material-icons\">storefront</i>\n                \n                <mat-menu #menu=\"matMenu\">\n                        <a mat-list-item routerLink=\"empresa\" >\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Empresa\n                        </a>\n                        <a *ngIf=\"lock\" mat-list-item routerLink=\"products\" >\n                            <i class=\"material-icons\">\n                                storefront\n                            </i>\n                            Produto - Empresa\n                        </a>\n                        <a mat-list-item routerLink=\"chamados\">\n                            <i class=\"material-icons\">\n                                reorder\n                            </i>\n                            Solicitações\n                        </a>\n                        <a mat-list-item routerLink=\"usuarios\">\n                            <i class=\"material-icons\">\n                                perm_identity\n                            </i>\n                            Usuários\n                        </a>\n\n                        \n                </mat-menu>\n            </button>\n\n            <a mat-list-item (click)=\"sairSistema()\">\n                <i class=\"material-icons\">\n                    logout\n                </i>\n                Sair\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <!--\n        Chamar o componente Home como página Principal\n    -->\n    <mat-sidenav-content class=\"content\">\n        <div *ngIf=\"!opened\">\n            <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                navigate_next \n            </i>\n        </div>\n            \n        <div *ngIf=\"opened\">\n                <i class=\"material-icons\" (click)=\"opened=!opened\" >\n                    navigate_before \n                </i>\n        </div>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>\n\n","import { stringify } from 'querystring';\nimport { UsuarioReadComponent } from './../usuario-read/usuario-read.component';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\n\n@Component({\n  selector: 'app-usuario-create',\n  templateUrl: './usuario-create.component.html',\n  styleUrls: ['./usuario-create.component.css']\n})\nexport class UsuarioCreateComponent implements OnInit {\n  \n//empresa : Observable<Empresa[]>;\nempresa : Empresa[];\n\ndadosEmpresa : Empresa;\nusuario : Usuario = new Usuario();\n\ngrupousuario : GrupoUsuario[];\n\ncriargrupousuario : GrupoUsuario = new GrupoUsuario()\n\ncomboTipousuario = [];\n\nconstructor(  private serviceUsuario : ServiceAllService<Usuario>,\n              private serviceEmpresa : ServiceAllService<Empresa>,\n              private serviceGrupoUsuario : ServiceAllService<GrupoUsuario>,\n              private utilService : UtilService,\n              private serviceLogin : LoginService,\n              \n              private router : Router) { }\n\n  ngOnInit(): void {\n      let grpId = Number(localStorage.getItem(\"grpUs\"));\n      this.alimentarCombo();\n      this.buscarEmpresa();\n  }\n  \n  createUsuario() : void {\n    \n    this.usuario.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.usuario.dtCriacao = new Date;\n   \n    this.usuario.grupoUsuarioId = this.usuario.grupoUsuarioId.toString().trim() == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                : this.usuario.grupoUsuarioId.toString().trim() == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                : this.usuario.grupoUsuarioId.toString().trim() == \"Master\" ? TipoUsuario.Master.toString()\n                                : this.usuario.grupoUsuarioId.toString() == \"Usuario\" ? TipoUsuario.Usuario.toString() : null;\n    \n    \n\n    this.serviceUsuario.read(Endpoint.Usuario).subscribe(user => {\n      user = user;\n\n      let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaId == this.usuario.empresaId);\n           \n            if (ativo.length > 0)\n            {\n              this.utilService.showMessage('Esse Usuário já existe para essa Empresa');\n              this.usuario.login =  null; \n              user =  new Array();\n            }else{\n           \n              this.serviceEmpresa.readById(this.usuario.empresaId, Endpoint.Empresa).subscribe(emp => {\n                emp = emp;\n                if (!emp.bloqueado){\n                  this.serviceUsuario.create(this.usuario, Endpoint.Usuario).subscribe(() => {\n                    this.utilService.showMessage('Usuário Criado!');\n                    this.router.navigate(['usuarios']);\n                  });\n                }\n                else\n                {\n                  this.utilService.showMessage(`Não pode ser criado Usuário para empresa ${emp.razaoSocial} porque essa empresa está bloqueada.`, false);\n                }\n              });\n              \n              user =  new Array();\n            }\n\n    })\n  }\n\n  cancel(): void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa() {\n   \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.serviceEmpresa.read(Endpoint.Empresa).subscribe(emp => {\n        emp = emp; \n\n        this.empresa =  new Array()\n\n          emp.forEach(empresasCarregadas => {\n        \n            if(grpId == TipoUsuario.Administrador)\n              this.empresa.push(empresasCarregadas)\n            else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.empresaPai.toString())\n                this.empresa.push(empresasCarregadas)\n            });\n    })\n  }\n\n  alimentarCombo() : void  {\n\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    for (var tipo in TipoUsuario) {\n      if (TipoUsuario.hasOwnProperty(tipo) &&\n        (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n\n          this.comboTipousuario.push(tipo)\n          \n      }\n      else if (TipoUsuario.hasOwnProperty(tipo) &&\n      (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n\n        if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n            this.comboTipousuario.push(tipo);\n        }\n    }\n  }\n\n  createGrupoUsuario(){\n    this.criargrupousuario.criadoPor  = Number(localStorage.getItem(\"usId\"));\n    this.criargrupousuario.dtCriacao = new Date;\n    this.criargrupousuario.empresaId = Number(localStorage.getItem(\"empId\"));\n\n      this.serviceGrupoUsuario.create(this.criargrupousuario, Endpoint.GrupoUsuario).subscribe(() => {\n        this.utilService.showMessage('Grupo de Usuário Criado!');\n      })\n  }\n}\n","<mat-card>\n    <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                [(ngModel)]=\"usuario.nome\" name=\"name\">\n\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Crachá\"\n                [(ngModel)]=\"usuario.cracha\" name=\"cracha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Usuario de Sistema\">\n                    <input name=\"usuariosisteja\" [(ngModel)]=\"usuario.bolSistema\" [checked]=\"usuario.bolSistema\" type=\"checkbox\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Reseta Senha\">\n                    <input name=\"usuariresetasenha\" [(ngModel)]=\"usuario.bolResetaSenha\" [checked]=\"usuario.bolResetaSenha\" type=\"checkbox\">\n            </mat-form-field>\n\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioId\" placeholder=\"tipousuario\" >\n                    <mat-option *ngFor=\"let tipo of comboTipousuario \" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaId\" placeholder=\"EmpresaID\" >\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                    {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n    </form>\n            <button *ngIf=\"usuario.nome && usuario.login && usuario.senha && usuario.grupoUsuarioId && usuario.empresaId\" mat-raised-button (click)=\"createUsuario()\" color=\"primary\" > \n                Salvar\n            </button>\n  \n            <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n                Voltar\n            </button>\n  \n \n</mat-card>","import { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from './../../../models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-usuario-delete',\n  templateUrl: './usuario-delete.component.html',\n  styleUrls: ['./usuario-delete.component.css']\n})\nexport class UsuarioDeleteComponent implements OnInit {\nempresa : Empresa\nusuario : Usuario;\n\n  constructor(private usuarioService : ServiceAllService<Usuario>,\n              private empresaService : ServiceAllService<Empresa>,\n              private router : Router,\n              private utilService : UtilService,\n              private route : ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    this.carregaUsuario()\n  }\n\ncarregaUsuario(){\n\n  const id = this.route.snapshot.paramMap.get('id')\n  this.usuarioService.readById(id, Endpoint.Usuario).subscribe(usuario => {\n    this.usuario = usuario;\n    \n    this.buscarEmpresa().subscribe(empresa =>{\n      this.empresa = empresa;\n      this.usuario.empresaId = this.empresa.nomeFantasia;\n     \n    });\n  })\n\n}\n\n  deleteUsuario(): void{\n      this.usuarioService.delete(this.usuario.id , Endpoint.Usuario).subscribe(() => {\n      this.utilService.showMessage(\"Usuário Excluído com Sucesso!\")\n      this.router.navigate(['/usuarios'])\n    })\n  }\n  cancel():void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa(){\n    return this.empresaService.readById(this.usuario.empresaId, Endpoint.Empresa);\n  }\n}\n","<mat-card>\n    <mat-card-title>Excluir Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n\n            </mat-form-field>\n            \n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\"\n                [(ngModel)]=\"usuario.empresaId\" name=\"empresaId\">\n            </mat-form-field>\n\n        </form>\n\n        <button mat-raised-button (click)=\"deleteUsuario()\" color=\"primary\" > \n            Excluir\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Cancelar\n        </button>\n</mat-card>","\n<div>\n   <input class=\"search\" name=\"busca\" id=\"busca\" type=\"text\" value=\"\">\n    \n    <span (click)=\"getUser()\">\n      <i class=\"material-icons\">search</i>\n    </span>\n</div>\n<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"usuario\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Nome -->\n      <ng-container matColumnDef=\"nome\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.nome}}</td>\n      </ng-container>\n      \n\n        <!-- Login -->\n        <ng-container matColumnDef=\"login\">\n            <th mat-header-cell *matHeaderCellDef>Login</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.login}}</td>\n        </ng-container> \n\n\n        <!-- Empresa -->\n        <ng-container matColumnDef=\"empresaId\">\n          <th mat-header-cell *matHeaderCellDef>Empresa</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.empresaId}}</td>\n      </ng-container> \n       \n      <ng-container matColumnDef=\"grupoUsuarioId\">\n        <th mat-header-cell *matHeaderCellDef>Tipo de Usuário</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.grupoUsuarioId}}</td>\n    </ng-container> \n\n\n <!-- status -->\n <ng-container matColumnDef=\"bloqueado\">\n  <th mat-header-cell *matHeaderCellDef>Bloqueado</th>\n    <td mat-cell *matCellDef=\"let row\">\n      <div *ngIf=\"row.bloqueado\" >\n        <i class=\"material-icons\">\n          lock\n        </i>\n      </div>\n      <div *ngIf=\"!row.bloqueado\" >\n        <i class=\"material-icons\">  \n          lock_open\n        </i>\n      </div>\n    </td>\n  </ng-container>\n\n\n\n      <!-- Coluna de Ações -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n      \n         \n          <a routerLink=\"/usuarios/update/{{ row.id }}\" class=\"edit\">\n                <i class=\"material-icons\">\n                    edit\n                </i>\n            </a>\n            \n            <a *ngIf=\"userAutenticado\" routerLink=\"/usuarios/delete/{{ row.id }}\" class=\"delete\">\n              \n                <i class=\"material-icons\">\n                    delete \n                           \n                </i>\n              \n            </a>\n           \n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\">teste</tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n      \n\n    </table>\n\n</div>\n<div class=\"footer\">\n  <span (click)=\"navigateToUsuarioCreate()\">\n    <i class=\"material-icons\">person_add</i>\n  </span>\n</div>\n","import { TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { UtilService } from './../../../services/util.service';\nimport { GrupoUsuario } from './../../../models/usuarios/GrupoUsuarios';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { map, catchError, take, tap, elementAt } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Endpoint } from './../../../Negocio/Endpoint';\n\nimport { Usuario } from './../../../models/usuarios/modelLogin';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { __await } from 'tslib';\nimport { FooterComponent } from '../../template/footer/footer.component';\nimport { TipoUsuario } from 'src/app/models/usuarios/enumUsuarios';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { UsuarioCreateComponent } from '../usuario-create/usuario-create.component';\n\n\n@Component({\n  selector: 'app-usuario-read',\n  templateUrl: './usuario-read.component.html',\n  styleUrls: ['./usuario-read.component.css']\n})\n\n\nexport class UsuarioReadComponent implements OnInit {\n\n  usuario : Usuario[];\n  userAutenticado : boolean = false; \n  \n  displayedColumns = ['id','nome','login','empresaId','grupoUsuarioId','bloqueado','action']  \n \n  constructor(\n              private serviceEmpresa: ServiceAllService<Empresa>,\n              private serviceUsuario : ServiceAllService<Usuario>,\n              private mensagem : UtilService, \n              private router : Router\n             ) \n             { }\n\n\n  ngOnInit(): void {\n     this.getUser();\n\n     let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n  }\n  \n\n\n  navigateToUsuarioCreate(): void{\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    if (grpId == TipoUsuario.Usuario) \n      this.mensagem.showMessage(\"Você não possui permissão para criação de usuários\", true)\n    else\n      this.router.navigate(['usuarios/create']);\n  }\n\n  async getUser() {\n      \n      let filtroUsuario = (<HTMLSelectElement>document.getElementById('busca')).value;\n      let empId = localStorage.getItem(\"empId\");\n      let grpId = Number(localStorage.getItem(\"grpUs\"));\n      let logado = Number(localStorage.getItem(\"usId\"));\n      this.userAutenticado = grpId == TipoUsuario.Usuario ? false : true;\n  \n      this.serviceUsuario.read(Endpoint.Usuario).subscribe(u =>{\n        u = u;\n        let responseUsuarios = u;\n\n        let usuarioFIltrados = new Array();\n         \n        if (filtroUsuario){\n           \n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const element = responseUsuarios[index];\n              if (element.nome.toLowerCase().includes(filtroUsuario.toLowerCase()))\n                usuarioFIltrados.push(element);\n          }\n          responseUsuarios = new Array();\n          responseUsuarios = usuarioFIltrados;    \n        }\n\n        this.serviceEmpresa.read(Endpoint.Empresa).subscribe(e => {\n          e = e;     \n          let responseEmpresa = e;\n\n          this.usuario = new Array();\n          let empresaID = null;\n          let idEmpresa = null;\n          let IdEmpresaPai = null;\n\n          for (let index = 0; index < responseUsuarios.length; index++) {\n            const usr = responseUsuarios[index];\n            \n                  for (let index = 0; index <  responseEmpresa.length; index++) {\n                    const emp =  responseEmpresa[index];\n                    \n                    if(usr.empresaId == emp.id.toString().trim())\n                    {\n                      empresaID = emp.id;\n                      usr.empresaId = emp.razaoSocial;\n                      usr.grupoUsuarioId = usr.grupoUsuarioId == \"1\" ? \"Administrador\" : usr.grupoUsuarioId == \"2\" ? \"Sistema\" : usr.grupoUsuarioId == \"3\" ? \"Usuario\" : usr.grupoUsuarioId == \"4\" ? \"Master\" : usr.grupoUsuarioId;\n                      idEmpresa = emp.id;\n                      IdEmpresaPai = emp.empresaPai;\n                      \n                        if(grpId == TipoUsuario.Administrador)\n                        {\n                          this.usuario.push(usr);\n                            break;  \n                          }\n                          else if(grpId == TipoUsuario.Master)\n                          { \n                            if(idEmpresa == empId || IdEmpresaPai == empId && usr.grupoUsuarioId != \"Administrador\")\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                          }\n                          else if(grpId == TipoUsuario.Usuario)\n                          { \n                            \n                            if(idEmpresa == empId && usr.id == logado)\n                            {\n                              this.usuario.push(usr);\n                              empresaID = null;\n                              idEmpresa = null;\n                              break;\n                            }\n                            \n                          }\n\n                        }\n                  }\n          }\n      })\n  })\n   \n  \n }\n  \n\n}\n\n\n\n","import { TipoUsuario, TipoUsuarioSistema } from './../../../models/usuarios/enumUsuarios';\nimport { Endpoint } from './../../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../../services/service-all.service';\nimport { UtilService } from './../../../services/util.service';\nimport { Observable } from 'rxjs';\nimport { EmpresaService } from './../../../services/empresa.service';\nimport { Empresa } from './../../../models/empresa/ModelEmpresa';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from './../../../services/usuario.service';\nimport { Usuario } from '../../../models/usuarios/modelLogin';\nimport { Component, OnInit } from '@angular/core';\nimport { query } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-usuario-update',\n  templateUrl: './usuario-update.component.html',\n  styleUrls: ['./usuario-update.component.css']\n})\nexport class UsuarioUpdateComponent implements OnInit {\n\n  empresa : Empresa[];\n  dadosEmpresa : Empresa;\n  usuario : Usuario ;\n  userAutenticado : boolean = false; \n  \n  comboTipousuario = [];\n\n\n  constructor(private usarioService : ServiceAllService<Usuario>,\n             private empresaService : ServiceAllService<Empresa>,\n             private utilService: UtilService,\n             private router : Router,\n             private route: ActivatedRoute\n             ) { }\n\n  ngOnInit(): void {\n    this.buscarUsuario();\n    this.buscarEmpresa();\n  }\n\n  updateUsuario() : void {\n  let grpId = Number(localStorage.getItem(\"grpUs\"));\n  this.usuario.grupoUsuarioId = this.usuario.grupoUsuarioId == \"Administrador\" ? TipoUsuario.Administrador.toString() \n                                   :this.usuario.grupoUsuarioId == \"Sistema\" ? TipoUsuario.Sistema.toString()\n                                   : this.usuario.grupoUsuarioId == \"Usuario\" ? TipoUsuario.Usuario.toString()\n                                   : this.usuario.grupoUsuarioId == \"Master\" ? TipoUsuario.Master.toString()\n                                   : null \n\n    \n      this.usarioService.read(Endpoint.Usuario).subscribe(user => {\n        user = user;\n                              \n        let ativo = user.filter(x => x.login.toLowerCase() == this.usuario.login.toLowerCase() && x.empresaId == this.usuario.empresaId && x.id == this.usuario.id);\n     \n          if (ativo.length > 0 )\n          {\n              this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                this.router.navigate(['/usuarios'])\n              })\n              user =  new Array();\n            }else if(grpId == TipoUsuario.Administrador){\n                \n              this.usarioService.update(this.usuario, Endpoint.Usuario).subscribe(() => {\n                  this.utilService.showMessage(\"Usuário Atualizado com Sucesso!\")\n                  this.router.navigate(['/usuarios'])\n                })\n                user =  new Array();\n            }else{\n\n              this.utilService.showMessage('A empresa do Usuário não pode ser Alterada', false);\n              this.usuario.login =  null; \n              user =  new Array();\n          }\n      })\n  }\n\n  cancel(): void{\n    this.router.navigate(['/usuarios'])\n  }\n\n  buscarEmpresa() {\n    \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.empresaService.read(Endpoint.Empresa).subscribe(emp => {\n      emp = emp;\n\n      this.empresa =  new Array()\n\n      emp.forEach(empresasCarregadas => {\n        \n        if(grpId == TipoUsuario.Administrador)\n          this.empresa.push(empresasCarregadas)\n        else if (grpId == TipoUsuario.Master && empId == empresasCarregadas.id.toString() || grpId == TipoUsuario.Usuario && empId == empresasCarregadas.id.toString() || empId == empresasCarregadas.empresaPai.toString())\n            this.empresa.push(empresasCarregadas)\n        });\n\n    });\n  }\n\n  buscarUsuario(){\n    const id = this.route.snapshot.paramMap.get('id')\n    this.usarioService.readById(id, Endpoint.Usuario).subscribe(usuario => {\n      this.usuario = usuario;\n\n\n\n\n      let tipousuario = usuario.grupoUsuarioId;\n      this.usuario.grupoUsuarioId = this.usuario.grupoUsuarioId == TipoUsuario.Administrador.toString() ? \"Administrador\"\n                                   :this.usuario.grupoUsuarioId == TipoUsuario.Sistema.toString()  ? \"Sistema\"\n                                   : this.usuario.grupoUsuarioId == TipoUsuario.Usuario.toString()  ? \"Usuario\" \n                                   : this.usuario.grupoUsuarioId == TipoUsuario.Master.toString()  ? \"Master\" \n                                   : null \n                                         \n     \n     \n     \n     \n     \n     this.carregarComboTipoUsuario(this.usuario.grupoUsuarioId, tipousuario); \n      \n                   \n    });\n    \n  }\n\n  carregarComboTipoUsuario(usuario : string, tipousuario : string) : void  {\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    \n      for (var tipo in TipoUsuario) {\n      \n           if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Administrador ) {\n    \n              this.comboTipousuario.push(tipo)\n              \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Master ){\n    \n            if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Master || TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                this.comboTipousuario.push(tipo);\n          \n            }\n            else if (TipoUsuario.hasOwnProperty(tipo) &&\n            (isNaN(parseInt(tipo))) && grpId == TipoUsuario.Usuario ){\n      \n              if(TipoUsuarioSistema.get(tipo) == TipoUsuario.Usuario)            \n                  this.comboTipousuario.push(tipo);\n            \n            }\n\n\n      }\n    \n          \n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar Usuário</mat-card-title>\n        <form>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome\" \n                 [(ngModel)]=\"usuario.nome\" name=\"nome\">\n            </mat-form-field>\n            \n            <mat-form-field>\n                <input matInput placeholder=\"Login\"\n                [(ngModel)]=\"usuario.login\" name=\"login\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Senha\" type=\"password\"\n                [(ngModel)]=\"usuario.senha\" name=\"senha\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Tipo de Usuário\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.grupoUsuarioId\" placeholder=\"GrupoUsuarioID\">\n                         <mat-option *ngFor=\"let tipo of comboTipousuario\" [value]=\"tipo\">\n                        {{tipo}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Empresa\">\n                <p></p>\n                <mat-select [(value)]=\"usuario.empresaId\" placeholder=\"EmpresaID\">\n                    <mat-option *ngFor=\"let dadosEmpresa of empresa\" [value]=\"dadosEmpresa.id\">\n                       {{dadosEmpresa.nomeFantasia}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Bloqueado\">\n                    <input name=\"status\" [(ngModel)]=\"usuario.bloqueado\" [checked]=\"usuario.bloqueado\" type=\"checkbox\">\n            </mat-form-field>\n      \n        </form>\n\n        <button *ngIf=\"usuario.nome && usuario.login && usuario.grupoUsuarioId && usuario.empresaId\" mat-raised-button (click)=\"updateUsuario()\" color=\"primary\" > \n            Salvar\n        </button>\n        \n        <button mat-raised-button (click)=\"cancel()\" color=\"primary\" > \n            Voltar\n        </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>usuario works!</p>\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) { \n    el.nativeElement.style.color = '#e35e6b';\n  }\n\n}\n","export class Acesso{\r\n    login : string\r\n    senha : string\r\n    empresaId : number\r\n}","export class GrupoUsuario{\r\n    id? : number\r\n    dtCriacao : Date\r\n    nome : string\r\n    usuarioApp : boolean\r\n    empresaId : number\r\n    criadoPor : number\r\n    bloqueado : boolean\r\n\r\n}","import { map } from 'rxjs/operators';\r\n\r\nexport enum TipoUsuario {\r\n    \r\n    Administrador = 1,\r\n    Sistema = 2,\r\n    Usuario = 3,\r\n    Master = 4,\r\n}\r\n\r\nexport const TipoUsuarioSistema = new Map<string, number>([\r\n['Administrador',1],\r\n['Sistema', 2],\r\n['Usuario',3],\r\n['Master',4]\r\n\r\n])\r\n","export class Usuario {\r\nid ? : number\r\ndtCriacao : Date\r\nnome : string\r\nlogin : string\r\nsenha : string\r\ncracha : string\r\nbolSistema: boolean\r\nbolResetaSenha : boolean\r\ndataTrocaSenha : Date\r\ncriadoPor : number\r\nbloqueado : boolean\r\nempresaId : string\r\ngrupoUsuarioId : string\r\n}\r\n","import { Endpoint } from './../Negocio/Endpoint';\nimport { TipoUsuario, TipoUsuarioSistema } from './../models/usuarios/enumUsuarios';\nimport { ObjetoToken } from './../models/Token/ObjetoToken';\nimport { Empresa } from './../models/empresa/ModelEmpresa';\nimport { Acesso } from '../models/acessoModel';\nimport { Usuario } from '../models/usuarios/modelLogin';\nimport { UtilService } from './util.service';\n\nimport { environment } from './../../environments/environment';\n\nimport { map, catchError, take, retry } from 'rxjs/operators';\nimport { Observable, EMPTY, from, empty, pipe } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Router } from '@angular/router';\nimport { Injectable, EventEmitter  } from '@angular/core';\nimport { stringify } from 'querystring';\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  title = 'multiple-env-demo';\n  environmentName = '';\n  environmentUrl = 'Debug api';\n  acesso : Acesso = new Acesso();\n  objetoToken : ObjetoToken []\n\n  private tipoUsuarios = [];\n\n  private usuarioAutenticado: boolean = false; \n\n  mostrarMenuEmitter = new EventEmitter<boolean>();\n  mostrarLoginEmitter = new EventEmitter<boolean>();\n  \n\n  constructor(private router: Router,\n              private snackbar : MatSnackBar,\n              private http: HttpClient,\n              private utilService : UtilService,\n               \n              ) { \n                this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL;\n              }\n\n  async logarSistema(acesso: Acesso) {\n    \n    try {\n      let response = await this.http.post<ObjetoToken>(this.environmentUrl + Endpoint.Token, acesso).toPromise()\n   \n       if (response != null && !response.bloqueado && !response.statusEmpresa )\n          {\n\n            this.mostrarMenuEmitter.emit(true);\n            this.mostrarLoginEmitter.emit(false)\n            this.usuarioAutenticado = true;\n            this.router.navigate(['/']);\n                        \n            localStorage.setItem(\"tId\", response.token)\n            localStorage.setItem(\"usId\", response.id)\n            localStorage.setItem(\"grpUs\", response.grupoUsuarioId)\n           \n            localStorage.setItem(\"stUs\", response.bloqueado);\n            localStorage.setItem(\"empId\", response.empresaId);\n            this.utilService.showMessage(\"Seja Bem Vindo!  \" + acesso.login , false);\n\n          }\n          else\n          {\n            this.usuarioAutenticado = false;\n            this.mostrarMenuEmitter.emit(false);\n            this.mostrarLoginEmitter.emit(true);\n            \n            if (response.bloqueado)\n              this.utilService.showMessage(\"Usuário bloqueado!\", true);\n            else if (response.statusEmpresa)\n              this.utilService.showMessage(\"Empresa bloqueada!\", true);\n            else \n              this.utilService.showMessage(\"Usuário ou senha Inválido!\", true);\n        }\n      \n      } catch (error) {\n        this.utilService.showMessage(\"Erro de acesso a API\", true);\n      }\n    \n  }\n  sairSistema(){\n    this.mostrarMenuEmitter.emit(false);\n    this.mostrarLoginEmitter.emit(true)\n    localStorage.removeItem(\"tId\");\n    localStorage.removeItem(\"usId\");\n    localStorage.removeItem(\"grpUs\");\n    localStorage.removeItem(\"stUs\");\n    localStorage.removeItem(\"empId\");\n    this.utilService.showMessage(\"Até logo! \", false);\n    this.router.navigate(['/login']);\n  }\n\n  header(){\n    var reqHeader = new HttpHeaders({ \n        'Content-Type' : 'application/json; charset=utf-8',\n        'Accept'       : 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('tId')\n    })\n    return { headers: reqHeader };\n  }\n\n  TipoUsuarioSistema(){\n    \n    TipoUsuarioSistema.forEach(element => {\n      this.tipoUsuarios.push(element)\n    });\n   return this.tipoUsuarios;\n  }\n  \n}\n\n\n\n\n\n","import { LoginService } from 'src/app/services/login.service';\n\nimport { UtilService } from './util.service';\nimport { environment } from '../../environments/environment';\nimport { Component } from '@angular/core';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from '../models/produtos/product.model';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, EMPTY } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n   \nconstructor(private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              \n             ) { \n              this.environmentName = environment.environmentName;\n              this.environmentUrl =  environment.BASE_URL + '/Produto';\n             }\n\n    //Criar um produto\n    create(product : Product): Observable<Product>{\n      return this.http.post<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n    \n    // Buscar todos Get All\n    read(): Observable<Product[]>{\n      return this.http.get<Product[]>(this.environmentUrl, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n   //Buscar um produto por id\n   readById(id: string): Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`\n\n      return this.http.get<Product>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n   }\n\n   // Atualizar Produto \n   update(product: Product): Observable<Product> {    \n    return this.http.put<Product>(this.environmentUrl, product, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n   }\n\n   delete(id: number) : Observable<Product>{\n    const url = `${this.environmentUrl}/${id}`      \n    return this.http.delete<Product>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n    );\n\n   }\n\n}\n","import { map, catchError, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UtilService } from './util.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAllService <T>{\n\n  title = '';\n  environmentName = '';\n  environmentUrl = '';\n\n  constructor(\n    private snackbar : MatSnackBar,\n              private http : HttpClient,\n              private utilService: UtilService,\n              private loginservice : LoginService\n              ) {\n                this.environmentName = environment.environmentName;\n                this.environmentUrl =  environment.BASE_URL;\n              }\n\n\n    //Criar Cadasto\n    create(T : T, tipo: string) : Observable <T>{\n      return this.http.post<T>(this.environmentUrl + tipo , T, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Buscar todos Get All\n    read(tipo: string): Observable<T[]>{\n      return this.http.get<T[]>(this.environmentUrl + tipo, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      ); \n    }\n\n    //Buscar um cadastro por id\n    readById(id: string, tipo: string): Observable<T>{\n    const url = `${this.environmentUrl + tipo}/${id}`\n\n      return this.http.get<T>(url, this.loginservice.header()).pipe(\n        map(obj => obj),\n        catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    // Atualizar Produto \n    update(T: T, tipo: string): Observable<T> {    \n    return this.http.put<T>(this.environmentUrl + tipo, T, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n    }\n\n    delete(id: number, tipo : string) : Observable<T>{\n      const url = `${this.environmentUrl + tipo}/${id}`      \n      return this.http.delete<T>(url, this.loginservice.header()).pipe(\n      map(obj => obj),\n      catchError(e => this.utilService.erroHandler(e))\n      );\n\n    }\n\n}\n","import { HeaderService } from './../components/template/header/header.service';\nimport { ObjetoToken } from './../models/Token/ObjetoToken';\n\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, Validators } from '@angular/forms';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(private snackbar : MatSnackBar,\n             private http : HttpClient,\n             private headerService : HeaderService\n             ) { }\n\n\n  showMessage(msg : string, isErro: boolean = false) : void { \n    this.snackbar.open(msg, 'X' , { \n      duration : 3000,\n      horizontalPosition: \"right\",\n      verticalPosition : \"top\",\n      panelClass : isErro ? ['msg-error'] : ['msg-sucess']\n    })\n\n}\n\n  erroHandler(e: any) : Observable<any>{\n    this.showMessage(\"Erro ao Acessar a API!\", true )\n    return EMPTY \n  }\n\n  convertToBase64(txt : string){\n    return btoa(txt);\n  }\n\n  convertBase64toText(txt: string){\n    return atob(txt);\n\n  }\n\n  AtualizarMenu(titulo : string, icone : string, urlIcone : string ) {\n      this.headerService.headerData.title = titulo ;\n      this.headerService.headerData.icon = icone\n      this.headerService.headerData.routeUrl = urlIcone\n  \n  }\n\n\n}","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chamado-crud',\n  templateUrl: './chamado-crud.component.html',\n  styleUrls: ['./chamado-crud.component.css']\n})\nexport class ChamadoCrudComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToChamadoCreate():void{\n    this.router.navigate(['chamados/read'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToChamadoCreate()\"\n        color=\"primary\" > \n        Novo\n</button>\n\n\n<app-chamado-read></app-chamado-read>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToEmpresaCreate() : void {\n    this.router.navigate(['empresa/create'])\n  }\n\n\n}\n","<app-empresa-read></app-empresa-read>\n\n","import { UtilService } from './../../services/util.service';\nimport { TipoUsuario } from './../../models/usuarios/enumUsuarios';\nimport { Endpoint } from './../../Negocio/Endpoint';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ok } from 'assert';\nimport { Product } from 'src/app/models/produtos/product.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\nprodutos : Product[];\n\n\n  constructor(private serviceProdutos : ServiceAllService<Product>,\n              private headerService : HeaderService,\n              private utilService : UtilService\n              ) \n              {\n               // this.headerService.headerData = {\n               //  title : 'Início',\n              //    icon : 'home',\n              //    routeUrl : ''\n               // }\n              }\n\n  ngOnInit(): void {\n    this.buscarComponentes();\n    this.utilService.AtualizarMenu(\"Início\",\"home\",'');\n  }\n  \n  \n  buscarComponentes(){\n     \n    let empId = localStorage.getItem(\"empId\");\n    let grpId = Number(localStorage.getItem(\"grpUs\"));\n\n    this.serviceProdutos.read(Endpoint.Produto).subscribe(prod => {\n      prod = prod;\n\n      this.produtos = new Array();\n\n        prod.forEach(element => {\n          if (empId == element.empresaId)\n              this.produtos.push(element)\n        });\n    });\n  }\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo\n    </mat-card-title>\n</mat-card>\n\n<div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"10%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\"  *ngFor=\"let prod of produtos\">\n        <mat-card  class=\" mat-elevation-z3\">\n            <mat-card-header>\n                <mat-card-title>{{prod.nome}}</mat-card-title>\n            </mat-card-header>\n            <a *ngIf=\"!prod.bloqueado\" mat-list-item routerLink=\"{{prod.nome}}\" >\n                <i class=\"material-icons\" >\n                   schedule\n                </i>\n            </a>\n            <mat-card-footer>\n                <div *ngIf=\"prod.bloqueado\">\n                    <i class=\"material-icons\" >\n                        block\n                     </i>\n                </div>\n            </mat-card-footer>\n\n        </mat-card>\n      </div>\n    </div>\n  </div>","import { HeaderService } from './../../components/template/header/header.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n\n  constructor(private router : Router,\n             private headerService : HeaderService\n             ) { \n\n    this.headerService.headerData = {\n      title : 'Cadastro de Produtos',\n      icon : 'storefront',\n      routeUrl : '/products'\n    }\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\nnavigateToProductsCreate() : void {\n  this.router.navigate(['products/create'])\n}\n\n}\n","<app-product-read></app-product-read>\n\n","import { stringify } from 'querystring';\nimport { query } from '@angular/animations';\nimport { UsuarioReadComponent } from './../../components/usuario/usuario-read/usuario-read.component';\nimport { Empresa } from './../../models/empresa/ModelEmpresa';\nimport { Endpoint } from './../../Negocio/Endpoint';\nimport { UsuarioService } from './../../services/usuario.service';\nimport { ServiceAllService } from './../../services/service-all.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/models/usuarios/modelLogin';\n\n@Component({\n  selector: 'app-usuario-crud',\n  templateUrl: './usuario-crud.component.html',\n  styleUrls: ['./usuario-crud.component.css']\n})\nexport class UsuarioCrudComponent implements OnInit {\n\n  constructor(\n              private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  \n}\n","<app-usuario-read></app-usuario-read>\n\n\n\n\n\n","export const environment = {\n  production: false,\n  environmentName: \"QA\",\n  apiUrl:  'http://localhost:5000',\n  BASE_URL : '/api'\n\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}